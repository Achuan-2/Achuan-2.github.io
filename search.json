[{"title":"如何用ABBYY和Acrobat 给图书扫描版pdf添加书签和目录跳转","path":"/posts/34aeefad.html","content":"摘要：从网上找的书籍资源，很多都是非官方的扫描版，不仅文件大，而且不能选中文字、没有书签目录，阅读体验很不好，介绍下如何用ABBYY和Acrobat 给图书扫描版pdf添加书签和目录跳转 ABBYY OCR识别扫描版pdf 点击【识别文档】 ​​ 设置OCR语言，点击识别 ​​ Acrobat 添加书签和目录跳转 添加书签 ​​ 给书签分层级 ​​ 目录跳转 选中文件，右键创建链接 ​​​​​ 设置【链接类型】为不可见矩形，【链接动作】为跳至页面视图 ‍ ​​ 根据之前设置的书签或者直接输入页码跳转，快速跳转到对应页面，然后点击【设置链接】，完成设置链接后，又回返回原来位置。 ​​​​​​","tags":["软件使用","生活技巧"],"categories":["技术博客"]},{"title":"关于等待力和秩序感的思考","path":"//post/thinking-about-waiting-power-and-order-f3swz.html","content":"等待力 所谓的「等待力」，我将其定义为有多少耐心去等待自己期待未来会发生的事情。 举例来说：我发动态，会期待得到别人的评论；网上购物了一件东西，会期待早日能收到；学习弹奏一首歌，会期待早日学完；追一部剧，会期待之后的剧情。 我很缺乏等待力。 发完动态就会忍不住时不时的去打开手机刷新社交媒体，看有没有收到消息，而不是先把自己当下要做的事情先做好，等待消息主动来找我，所以每次发动态都很内耗，干事效率很低； 想买东西，总是一想买，就控制不住的冲动下单了，而不是了解清楚自己的需求，蹲到合适的价格，等待自己真正需要这个东西的时候才购买，所以买的东西常常积灰； 尤克里里练习指弹，总想着早日学完发视频炫耀，而不是每周固定几天，就练习这个曲子，等待通过自己一点点练习，真正掌握这首曲子，把指法和节奏连熟练，不再依靠别人的视频可以独立弹好。 追剧读小说，常常一追就通宵，囫囵吞枣，看是看爽了，看完啥也记不住，而不是每天每周读一章看一集，让其融入自己的生活习惯中，这样不仅剧情的记忆更深，也对剧情有自己的思考。 如果人类就是不擅长等待的，那我觉得我们应该学会培养耐心，提高等待力。有等待力的人，可能可以收获更强的幸福感、更好的解决问题能力、更少的健康问题。我希望，自己也能成为一个等待力高的人。 接下来，我希望自己能做到： 循序渐进并且持之以恒的学习一项技能，使之成为自己的特长和兴趣爱好，并通过爱好扩大社交圈子，了解自己到底想成为什么样的人； 做一件事能够有耐心的做，遇到问题能冷静的思考，不急不躁，按自己的节奏处理事务； 能够有规划的去做一些个人长期项目，比如旅游摄影方面就是逛完上海的所有免费公园，编程方面就是学习深度学习，能够运用代码去解决问题，专业课方面就是学习基础入门书，了解专业发展史。 秩序感 所谓的「秩序感」，我定义为，你能掌控自己生活的程度。 生活需要秩序感，如果能做到，什么东西要放在什么地方，什么时候要做什么事情，什么时候睡觉什么时候起床。这样，总能很容易找到要找的东西，总能知道当下应该做些什么而不感到无聊，总能有一个好的精神去迎接下一天。 建立秩序感很重要，当你处在混乱状态时，很容易一点点消磨自己的能量，不足以支撑你去做一些特别大的事情，如果能够尝试开始建立自己的生活秩序，开始把作息往正常轨道拉，每实现一次，能量就感觉回复一点，长此以往，积攒的能量会促使你完成更大的挑战，各方面开始稳中向好，能够开始掌控生活的船舵使之朝向你想要的方向。 建立秩序感是一个制造确定性的过程，确定的作息、确定的运动、确定的待办事项，这都会让你对自身和生活的掌控感越来越强，这就是一个从不确定到确定，从混乱到有序的过程。而建立秩序感的第一步，应该先从身体健康开始，把生活处理好，才能够从中积攒到能量去做更困难的事情。 ‍","tags":["个人反思"],"categories":["阿巛随笔"]},{"title":"一只23岁母单的反思","path":"//post/a-mother-s-reflection-z17orfm.html","content":"其实高中，大学，研究生都有动心的女生，不过因为种种问题都是止于暧昧。这里就简单分析下自己的问题和执念，就不讲对方的问题了。 高中主要因为要去不同的大学，注定异地，就不上心了。这一阶段的执念是不接受异地。这一阶段，由于高中压力比较大，非常的自卑和抑郁，人很不开朗，只会期待别人能关心自己。大学通过阅读心理方面的书籍和参加各种活动，慢慢变得开朗和自信独立起来了，但还是不够。 大学喜欢的女生，因为我主动找她总是爱搭不理，我不找她，她又来主动找我，两个人都是内向的人，导致非常内耗，会在觉得她喜欢我和不喜欢我之间来回跳跃，好感被慢慢消磨掉，觉得对方只是把我当工具人，需要的时候找我帮忙，不需要就爱搭不理。这一阶段的执念是想要和喜欢的女生说早晚安。这一阶段虽然变开朗了，但自己有一个毛病，一觉得对方不喜欢自己就不想搭理人，完全把对方当成透明，想着你不喜欢我我就不主动打扰你好了，目前在学习改掉这点，真的很有问题。 研究生阶段的执念是想要约喜欢的女生出去，而对方一直以忙为理由拒绝，被拒绝了一次又一次，才终于醒悟，原来早就被发了好人卡而不自知。此外，太早对对方表白，对方的回复是“暂时不想谈恋爱，看以后有没有缘在一起”，导致自己陷于很被动的局面，也让两个人无法像普通异性朋友相处。 今后，可能更想和人交朋友，不过分期待爱情了。要在学习如何和人线下社交，自己是网络社牛，但是线下社交真的不行，因为平常都是自己一个人玩耍，热衷于读书、看电影、骑车、摄影逛公园、弹琴、陆冲这种只需要一个人就能玩的很开心的活动，如果要带上另外一个，就不太清楚怎么办了，因为自己很少花钱去消费，餐馆、电影院、游乐园还有那些需要花钱的运动场馆都很少接触。之前一直以来的想法是一个人能走得更快，但是最近的感慨是两个人能走得更远，还是不能闭门造车自娱自乐，要多认识不同的人，从不同的视角认识这个世界，最终更好的认识自我、提升自我。","tags":["个人反思"],"categories":["阿巛随笔"]},{"title":"我终于清空朋友圈啦！","path":"//post/i-finally-empty-the-circle-of-friends-oko3o.html","content":"我终于清空朋友圈了！！！ 一直都想要戒掉发朋友圈的习惯，有很多原因，比如发朋友圈图片会压缩，不能再编辑，限制字数，不能发gif等等，很限制。 比如自己是一个很敏感的人，又是一个分享欲很强的人，如果我看到我发的朋友圈某个好友没点赞，而ta给我前面和后面的人都点赞了，我就会很沮丧，觉得对方不喜欢我。每次发了一条动态，就会时不时看有没有人给我点赞评论，有的话我不觉得开心，但没有就很失落。 比如朋友圈共同好友点赞评论都有提示，我很烦。目前有屏蔽某个动态的消息也很麻烦。 比如朋友圈的消息几乎都只是点赞，很少人会对我的动态提出意见和建议，我觉得一个动态应该发在合适的圈子，尤克里里就发到尤克里里的圈子，摄影就发到摄影的圈子，所以我会更喜欢发在网络社交软件里。 比如因为很喜欢发朋友圈，很多事情我就默认好友已经看到了，就不会再主动讲过去一些开心的事情了，这样我觉得会有损我的口头表达能力 比如我有点过于依赖朋友圈社交了，爱发朋友圈的人我会主动夸人家拍的好看工作优秀等等，不发朋友圈的人我就找不到机会认识，见面了也不搭理人，网上社牛线下社恐。 综上，我觉得发朋友圈对我来说弊大于利。但是之前一直想戒掉都没戒成功，这次我希望通过删除全部动态的方式来强制戒掉。而且目前我的动态也几乎没人和我互动了，删了就删了，反正也没人看。不过删的过程我才发现自己真的很爱发，几天就一条，从2018年删掉今年，删到手疼。我去年其实就把qq空间给清空了，这样qq和微信就没半条动态了，再也不想这两个软件塑造什么形象人设，天真地希望别人通过我的动态认识我了。（话说断舍离方面我真的是一点都不心慈手软） 踏实做自己，不要在意别人的评价了。 当然了，不代表我不发动态了，我就是一个分享欲很强的人和喜欢写东西的人，不过我希望自己少发碎片化的生活记录，多写长长的随笔和博客，多思考多总结多沉淀，以后珍贵的回忆和随笔，都会优先写在在思源笔记里，再分享到网络里去 ​​","tags":["个人反思"],"categories":["阿巛随笔"]},{"title":"23岁啦","path":"//post/23-years-old-zggy4y.html","content":"算是最多朋友祝我生日快乐的一次生日了，虽然也就三个人。 研一也算结束了吧，也简单总结下研一一年的心态变化。 老实说，研究生比我想象的累多了，如果没有适当的时间管理，平衡好工作和生活，真的挺难熬下去的。事情又多，工资又少，真的就是廉价劳动力。 研一上，因为院的设计，需要进行三轮轮转，每个老师底下轮1.5个月，轮转结束要写一个小轮转报告。我当时就是太单纯了，每个轮转都做的非常认真，每个报告都以本科毕设论文形式去写，再加之研一上课程很多汇报很多，导致研一上非常非常累，1点半下班是常态。由于没有平衡好工作和生活，满脑子都是科研项目，一直都紧绷着，身心健康损坏特别大，掉了很多头发，一天不洗头都有油油，容易抓出白色的脂肪粒，到目前都还在用专门的洗发水调理。研一的寒假，我在家基本没怎么见亲朋好友，都在睡觉，缓了很久。 研一下，一方面是身体已经不支持我再像过去那样熬夜，一方面也是意识到这样的状态不可持久。人生是一次长跑，可别开头就冲刺用光了力气，要可持续发展地努力，渐进式地进步。于是，研一下，我开始尝试平衡工作和生活，开始在空闲时间发展自己的兴趣爱好，弹尤克里里，买相机学习摄影，买陆地冲浪板第一次接触板类运动。目前的状态也一点点回复，心态也比以前乐观开朗多了，自认为是一个好的转变。 当然，我还是得自我反思下目前的不足滴。 研一下花在课题的时间因为兴趣爱好而减少了，减少没问题，不要有休闲羞愧嘛。但是还是希望自己效率更高些，早工作完早下班，不要非要和人竞争下班时间多晚，总是磨磨蹭蹭，还是经常23点以后才下班，这点得改。 空闲时间，娱乐的时间多了，学习充电的时间却少了，本科时空闲时间会有目的学习各种技能，会读书，现在却是经常无目的刷着b站和小红书，白白消磨时间。我觉得玩手机不一定会让自己放松，科学的放松是主动做一些自己感兴趣的事情，对自己长久有益的事情就更好了，我还是觉得我空闲时间应该多花在编程技术的提高、学习神经网络以及阅读文献提升思辨力上。 还是太在意别人，太去追求别人的认同，经常是为了别人的肯定去发朋友圈，设计文案。发完之后会时不时看有没有人点赞，这个人点赞别人不点赞我，是不是不喜欢我，我做的不够好？不要去追求别人的认同了，否则永远得不到自己对自己的认同，要努力提升自己，提升价值感，让自己变得自信才行！ 待人不够真诚。我网友很多，但是现实世界却没有几个能面对面交流的朋友，一部分原因是自己过去是留守儿童，就连和家人的关系都并不亲密，自己很难真正相信人，去付出真心，总是刻意和所有人保持一定距离。另一方面也是太过敏感，很容易觉得对方不喜欢自己而刻意远离，觉得受伤了并不会和对方交流，而是一声不吭的就离人远远的了。","tags":["个人反思"],"categories":["阿巛随笔"]},{"title":"Groupy多窗口管理工具","path":"/posts/291034.html","content":"官网：Stardock Groupy: Tabs for Windows 功能简介 在使用软件的时候，我们常常会一口气打开很多窗口进行操作，但在使用时，杂乱无章的窗口会让工作效率大打折扣。 ​​​​​​ 与其分散使用各个软件，不如把它们的窗口整合到一起。Groupy 就是一款可以将所有软件窗口整合到一起的工具，用操作浏览器的方式来管理任意软件窗口。 拖拽合并软件窗口 没有复杂的软件界面，安装后软件窗口自动成为可扩充的标签页。将窗口拖拽到其他软件的标签栏时松手即可合并软件窗口。 ​​​​ 便捷管理与分组 多个软件一个窗口即可管理，快速在多个文档或文件夹中切换。将相关的软件整合到一起，分组操作软件，优化工作流程。还有自动分组功能，减少复杂操作，提高效率。 ​ ​​​​​ 窗口内容快速预览 支持速览功能，鼠标停留在软件窗口标签上，即可预览软件窗口中的内容 ​​ 窗口快速添加，保存现有分组 需要快速新建文档、打开其他文件夹?点击标签栏上的加号，一键快速添加新文档或资源窗口。而现在设置的窗口分组可以保存起来，今后可以快速打开操作所需的所有软件。 ​​​​ 配置 推荐设置为【仅在按下Ctrl时分组】：【设置】-【何时启用窗口分组】-【仅在按下Ctrl时分组】 ​​ 自动分组： ​​ 是否始终显示此类窗口的标签页，取消勾选后，只有窗口合并之后才显示Groupy标签页 ​​​​ ‍","tags":["Windows","工具","软件"],"categories":["技术博客"]},{"title":"巨蟹座的独白","path":"/posts/c873b400.html","content":"作为资深老巨蟹，说句实话，巨蟹座男生挺难搞的，初次见面让人感觉很正经，很闷，不爱说话，不爱表现自己，基本不会主动，因为巨蟹就是个被动的星座，如果你主动找他讲话，他也会很认真的回答你，注意，真的是很认真，所以板正应该是巨蟹给人的第一印象，所以社交的话蟹蟹们还是有一定优势的，起码看着是个正经人吧。 但巨蟹真的正经吗？正经是正经，但闷骚也是真闷骚。我觉得巨蟹座的形象应该改成寄居蟹，不止层坚硬的壳，巨蟹就把自己藏在一层层的壳子里，等着别人走进他们的心里。熟人和朋友面前的巨蟹，什么都能说，什么都能侃，什么都能玩，没有约束，甚至于更疯，让你怀疑这还是我当初认识的那个巨蟹吗？而且巨蟹普遍都会替别人着想，而且喜欢依靠着自己信任的人，所以如果一个巨蟹愿意迁就你，遇到事情想跟你诉说，那恭喜你已经成为巨蟹心中的&quot;自家人&quot;了。他们也普遍善良，对待朋友两肋插刀，而且是嘴上不愿多说，但是行动的巨人。愿意倾听你，不会轻易打断你，喜欢和你分享快乐。 但巨蟹的敏感你可能要有心理准备，真的是别人可能无心的一句话，会深深刺伤巨蟹，迫使他把自己重新藏进壳里，所以当你发现巨蟹突然地不说话，不高兴写在脸上，回避你的交流，甚至不回答你的问题时，他就是被你的哪一句话或是某种行为伤了。真的太敏感了，而且细节观察能力惊人，尤其是对于人类间情绪的敏感度极高，所以巨蟹座是受情绪影响的星座。不止敏感，而且被动，自己藏着掖着，自己焦虑，自己烦恼，自己伤心，自我封闭，这就是最坏的巨蟹。所以希望你能稍微主动一点，让巨蟹知道你还在乎他，你不是真的要伤害他，他会一秒变地心情大好，情绪变化贼快，最最核心的，安全感，让巨蟹有安全感，不管是巨蟹男还是巨蟹女，都是第一位的。所以家人在巨蟹心中永远第一位，你愿意成为他们的家人吗？ ​","tags":["个人反思"],"categories":["阿巛随笔"]},{"title":"阿巛对信息时代整理信息的经验浅谈","path":"/posts/d766b22.html","content":"图片管理方式 日常摄影图片定期上传在Onedrive的【dailylog】文件夹里（不想被手机厂商的云盘绑定），命名方式为日期+事件。课程、讲座图片放在手机的相册【讲座&amp;课程】。 有的时候由于插入笔记等需要，对图片进行批量压缩，使用的是utools的官方插件能对整个文件夹的图片进行压缩，大大减小图片的文件大小。 手机的修图软件，目前主要用的是醒图（滤镜、模板很多）、图叨叨（加相机水印），最近开始接触到lightroom，不过还不熟悉。 dailylog 文件夹截图 ​​ ​​ Word和PPT文件管理方式 目前的管理方式是认为Word和PPT放在一起很舒服，以前比如上一门课，遇见一件事，会专门创建一个文件夹，然后放PPT和Word，导致这些文件都很散乱，虽然要找是能找到的。目前的管理思路是，把这些文件都放在一起，文稿类的一个文件夹，汇报类的一个文件夹，如果实在有必要再专门创建一个事件文件夹，把对应的文件以超链接的形式丢进去，这样也方便利用之前的创作心血。 ​​ ​​ 对于PPT，我设计了用于个人汇报的模板，针对不同的场景设计了一些母版样式 ​​ 对于Word文稿写作，也有一个样式模板，习惯是用思源笔记写初稿导出md，然后用quarto（下一代RMarkdown）将md渲染为我设计的word模板样式。具体可见 ​​ 手机电脑同步文件 鉴于现在主力聊天软件用微信，考虑到微信的文件传输电脑没登陆就传输一般收不到，会在onedrive创建一个【临时文件夹】，专门用来同步临时的文件。 待办管理方式 目前主要的待办软件是滴答清单，主要看重它支持日历视图+番茄钟，并且还支持markdown笔记。 在待办清单分为上，主要分为【工作】【个人充电】【琐事】【收集箱】，其中【个人充电】这个模块我分类比较细，其他模块的使用还有待改进。【收集箱】这个参考了GTD的管理方式，琐事、一些想法、稍后细读的文章视频都会丢进去。（其实按理来说应该加标签进行分类的，但我总是懒得加） 目前还挖掘到滴答清单做临时笔记非常好用，特别是一些琐事的笔记，所以额外创建了一个【临时笔记】。 ​​ 手机的桌面的小组件主要放了两个分类，【收集箱】与【临时笔记】。 ​​ 笔记管理方式 目前主力笔记是思源笔记，一款本地优先的双链笔记软件。 我目前使用的笔记方式，叫做dailynote，或者叫渐进式笔记法。简单说就是每日主要在日记页面做笔记，利用双链传递信息这一特性，依靠每天不断积累、不断丰富所引用文档或块的信息浓度，也就是你可以新建一个空白文档，暂时可以啥都不写，每天有点小心得就双链引用下，写下当日心得，等觉得积累差不多了再整理信息成为自己的知识笔记。做一个比喻就是，种下很多颗种子，每日悉心照料，等待它开花结果，最终拥有独属自己的知识花园。 以Adobe Illustrator的笔记为例，展示双链笔记的渐进式笔记法特点 ​​ 下面是我“日记”的模板 ​​ 另外说下，目前创建笔记文档我也是用双链来创建，利用软件的配置方法，可以让这些文档自动放在当月文档下，无需考虑分类，减小记笔记的摩檫力 ​​ 网盘资源 目前的主力网盘是阿里云盘（OneDrive只当同步盘，考虑速度不稳定及容量小），相比百度网盘来说，最大特点是非会员下载速度还可以，目前影视资源分享阿里云盘的也非常多。 主要会放把个人的信息文件（比如身份证、户口簿、银行卡、荣誉证书、证明文件等等）、资源（影视、书籍、课程资源、软件资源）以及归档（考证的笔记与资源、大项目的文件）。 目前阿里云盘并不支持分享常见的zip、rar等压缩包，我目前主要用bandzip制作exe格式的压缩包。 影视资源的寻找主要在酷安的阿里云盘软件评论区搜刮，很多影片一搜就有。 ​​","tags":["个人反思","工具"],"categories":["阿巛随笔"]},{"title":"安装mambaforge","path":"/posts/c6467c9c.html","content":"为什么要用mambaforge？ Anaconda 臃肿， 下载 conda-forge/miniforge: A conda-forge distribution. (github.com) 1wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe 配置 mamba init：~/.bash_profile​添加 12345678eval &quot;$(&#x27;/c/Users/Achuan-2/mambaforge/Scripts/conda.exe&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27;)&quot;if [ -f &quot;/c/Users/Achuan-2/mambaforge/etc/profile.d/mamba.sh&quot; ]; then . &quot;/c/Users/Achuan-2/mambaforge/etc/profile.d/mamba.sh&quot;fi 新建个人环境 新建个人环境，base环境不装东西 1conda create -n achuan --clone base 安装基础包：vim equirements.txt 123456789101112autopep8numpypandastqdmpandasmatplotlibPillowseabornipymplipykernelscikit-imagejupyterlab 安装 1mamba install --yes --file requirements.txt 配置镜像 ​vim ~/.condarc​ 123456789101112131415161718conda configconda config --add channels bioconda#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/conda config --get channelsconda config --set show_channel_urls yes#恢复默认镜像conda config --remove-key channels 问题 windows 不支持mamba init，只能用conda activate来切换环境 12&#x27;gbk&#x27; codec can&#x27;t decode byte 0xaa in position 347: illegal multibyte sequenceAn unexpected error has occurred. Conda has prepared the above report 解决方法 C:\\Users\\Achuan-2\\mambaforge\\Lib\\site-packages\\mamba\\mamba_shell_init.py 12- 35 with open(file, &quot;r&quot;) as fi:+ 35 with open(file, &quot;r&quot;,encoding=&quot;utf-8&quot;) as fi:","tags":["Python","配置"],"categories":["技术博客"]},{"title":"VSCode 配置 Matlab 运行环境","path":"/posts/c873b400.html","content":"需要的扩展 Matlab ：支持代码高亮、snippets、代码检查 matlab-formatter：设定缩进距离以及是否分隔块 Matlab Interactive Terminal - Visual Studio Marketplace：调用了 matlab 官方提供的 python engine，无需打开 matlab 的 IDE 即可运行 matlab 终端 配置 为 Python 配置 Matlab 引擎的 API 在管理员模式打开终端，运行 1cd &quot;C:\\Program Files\\MATLAB\\R2022b\\extern\\engines\\pythonn&quot; python setup.py install 如果报错：​error: [WinError 5] 拒绝访问。: 'dist\\matlabengineforpython.egg-info'​ 说明没打开管理员模式。 VSCode 的 Settings.json 配置 12345678// ------matlab Start----------- //&quot;files.associations&quot;: &#123; &quot;*.m&quot;: &quot;matlab&quot; // 为.m文件启动 Matlab 扩展&#125;,&quot;matlab.linterEncoding&quot;: &quot;utf8&quot;, // 设置mlint返回结果编码为 utf8&quot;matlab.matlabpath&quot;: &quot;C:\\\\Program Files\\\\MATLAB\\\\R2022b\\\\bin\\\\matlab.exe&quot;, // 根据自己的路径设置matlab.exe路径&quot;matlab.mlintpath&quot;: &quot;C:\\\\Program Files\\\\MATLAB\\\\R2022b\\\\bin\\\\win64\\\\mlint.exe&quot;, // 根据自己的路径设置mlint.exe路径// ------matlab End----------- // 如何使用 打开 Matlab 终端：Ctrl + Shift + P ​​→ Open a Matlab Terminal​ 运行当前打开的脚本：​Ctrl + Shift + P ​​→ Run current Matlab Script​ 执行选中的部分代码：​Ctrl + Shift + P ​​→Run current selection in Matlab​ 添加脚本到 Matlab 路径中，在 matlab 终端中输入 pathtool​，然后弹出如下窗口 ​​​​ 不建议 使用 code runner 扩展跑 Matlab 123&quot;code-runner.executorMap&quot;: &#123; &quot;matlab&quot;: &quot;cd $dir &amp;&amp; matlab -nosplash -nodesktop -r $fileNameWithoutExt&quot;&#125;, 使用 Matlab Code Run 扩展 参考 使用 vscode 编辑并运行 matlab 脚本 - 知乎 (zhihu.com)","tags":["VSCode","Matlab"],"categories":["技术博客"]},{"title":"Quarto：Markdown 又何必只是 Markdown","path":"/posts/50f47788.html","content":"Quarto 是下一代的 Rmarkdown，相比 Rmarkdown 来说，把生态给大一统了，你甚至不需要有 R 环境也能用，VSCode 上也有专门的插件。Quarto 的强大之处在于，不仅仅在于可以渲染代码运行结果，而且导出文档方面是我目前见过最无敌的存在，相信我，用上它，你会见到 markdown 的另一片天空。你只需要把 md 改成 qmd 后缀，加上一个 yaml 头，轻轻一点渲染按钮，就可以导出 word、html、ipynb、GFM 规范的 md（还可以设置公式导出为纯文本还是图片），甚至当成简易版的 LaTeX\\LaTeXLATE​X，LaTeX\\LaTeXLATE​X 代码与 markdown 语法混用，导出样式精美的 pdf。 关联文章：：设置word模板，Markdown 也能自动转换为美观规范的 Word 文档 为什么要用 Quarto？ 先简单介绍下 Quarto，官网地址 https://quarto.org/。 官网是这样介绍的： Quarto is an open-source scientific and technical publishing system built on Pandoc Create dynamic content with Python, R, Julia, and Observable. Author documents as plain text markdown or Jupyter notebooks. Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more. Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more. 简单来说，Quarto 这个软件可以 用来写代码：类似 Jupyter Notebook，可以 Markdown 和代码一起写，并能渲染代码结果到文档里，支持的语言有 Python、R、Julia 和 Observable，能将渲染结果输出为 HTML、PDF、Word 和 GFM Markdown。对于输出为 Markdown，公式还支持直接转换为 WebTex 图片，方便发布到其他博客或放入笔记软件里； 用来写严肃的报告：相当于pandoc加强版和LaTex简易版，支持导出为PDF、Word，并且支持交叉引用，可以引用图表、引用文献。 用来写博客、写书。 写博客的文档：Quarto - Creating a Website； 写书的文档：Quarto - Creating a Book。 Quarto 可以说是下一代 RMarkdown ，相比 RMarkdown，将环境给大统一，更好的适配 VSCode，你甚至不需要有 R 环境、安装 Rstudio，就能用 Quarto 写文章和报告。我对 Quarto 的整体印象，可以概括为“枢纽”二字，能写代码，能与 Jupyter Notebook 相互转换，能将 Markdown 导出为各种常用格式，可以当成简易版的 LaTex 写报告，将 Markdown 的生态大大强化。 而 Quarto 对于 Markdown 的处理仅仅只是将文件后缀由 md 改为了 qmd，并在 yaml 中输入参数即可。（当然 Quarto 也有独属的 Markdown 书写方言，起强化 Markdown 排版作用） 本文的重点会聚焦于怎么用 Quarto 将 Markdown 输出为 GFM、Word、PDF 文档，侧重于文档写作。至于写代码、写博客、写书部分，限于篇幅，建议去看官方文档。 Quarto 环境配置 在 Quarto - Get Started 页面下载 Quarto Cli 软件，然后选择你喜欢的编辑器搭配环境即可。 ​​ 我这里推荐的是 VSCode。微软有两种软件：一种是 VSCode，一种是其他软件。只要你吹 VSCode，我们就是好朋友。 ​​ 要在 VSCode，只需要安装 vscode-quarto 插件，即可开箱使用。 用 VSCode 有几个好处 Quarto 插件可以提供基本的语法提示功能，还有 Github Copilot 来 AI 提示。 文件夹内各种格式随意创建：.ipynb​、.qmd​、.md​、.py​、.R​ VSCode 有 LaTeX 插件，可以用 Quarto 导出 ducument.tex，再用网上的模板渲染成自己需要的文档格式。 注 1： 虽然这里只介绍用 VSCode，但 Quarto 本家的 RStudio 对 Quarto 的适配也非常好，代码运行结果可以直接在代码块显示（VSCode 只能输出在终端或者渲染在最终文档里），可以切换为 Visual 模式（类似于 Markdown 笔记软件的即时渲染模式），Visual 模式支持斜杆命令输入各种块。所以还是很强大的。但本人是坚定的 VSCode 拥护者，RStudio 只能是陪衬辅助，不会是主力。 注 2： VSCode 用 qmd 写 R 代码其实不是很方便，如果要用 VSCode 写 R 代码，我个人是建议用 jupyter 写，然后用 quarto convert xxx.ipynb ​转换为 qmd，再进行渲染。嫌麻烦的话还是建议用 RStudio 吧。 如果你需要导出 pdf，又没有 LaTeX 环境，可以用 quarto install 安装 mini 版的 tinytex 1quarto install tinytex --update-path 个人用Quarto的流程 先在思源笔记内写稿子，导出为md，将md后缀改为qmd，在开头加上YMAL头进行渲染设置，点击VSCode右上方的渲染按钮进行渲染，得到文档。 ​​ qmd 补充语法简单介绍 Quarto 相比于 GFM，还是加了一些自己的排版语法的，具体可以去官方文档的 Authoring 章节查看。 我这里只提几点 图片 图标标注：如果开启了图片编号，默认 alt 文本会作为图片的标注，title 是不会作为标题的（不知道有没有配置选项，目前还找不到） 1&#123;% image src title %&#125; 图片调整大小 1&#123;% image figure.png %&#125;&#123;fig.width=&#x27;50%&#x27;&#125; 对于 pdf 输出，众所周知，LaTeX 渲染的 pdf 图片是薛定谔式出现的，可以设置 fig.pos='H' ​来固定图片位置 1&#123;% image figure.png %&#125;&#123;fig.pos=&#x27;H&#x27;&#125; 设置图片 label，用于交叉引用(注意，只能是 #fig-​+label） 1&#123;% image figure.png %&#125;&#123;#fig-first&#125; 表格 12345| fruit | price ||--------|--------|| apple | 2.05 || pear | 1.37 || orange | 3.09 | 设置表题 : Fruit prices​ 1234567| fruit | price ||--------|--------|| apple | 2.05 || pear | 1.37 || orange | 3.09 |: Fruit prices 设置表格每列的宽度 1234567| fruit | price ||--------|--------|| apple | 2.05 || pear | 1.37 || orange | 3.09 |: Fruit prices &#123;tbl-colwidths=&quot;[75,25]&quot;&#125; 设置表格 label，用于交叉引用(注意，只能是 #tbl-​+label） 1234567| fruit | price ||--------|--------|| apple | 2.05 || pear | 1.37 || orange | 3.09 |: Fruit prices &#123;#tbl-fruit&#125; 图表交叉引用 12文字（见 @tbl-fruit）文字（见 @fig-first) 渲染结果会是： 文字（见表 1） 图片（见图 1） 注意：交叉引用 @ 前需要有一个空格 注意，Quarto 默认是图表题是 Figure 和 Table，如果要改为中文需要在 YAML 里添加配置 1234567crossref: chapters: true fig-title: 图 # (default is &quot;Figure&quot;) tbl-title: 表 # (default is &quot;Table&quot;) title-delim: &quot;.&quot; # (default is &quot; &quot;), not for pdf fig-prefix: 图 # (default is &quot;Figure&quot;) tbl-prefix: 表 # (default is &quot;Table&quot;) 文献引用 需要准备一个 references.bib​，里面放入参考文献的 bibtex 或 bibLatex 格式的 metadata。 并在 YAML 里配置 1bibliography: references.bib 就可以在文献里同样用 @ 来引用参考文件了。 可以设置引用和末尾生成参考文献格式的样式 对于导出 word，用的是 pandoc 只能设置为 citeproc（最大的问题是中英文参考文献无法区分） 1cite-method: citeproc 对于导出 pdf，可以设置更强大的 biblatex 12cite-method: biblatex YAML 模板 前面扯这么多，其实这部分才是本文核心（滑稽）。 毕竟只需要将 YAML 内容粘贴到 qmd 最前面，就可以设置渲染格式了 GFM 模板 官方配置文档：GFM Markdown 123456789101112131415161718---title: &quot;My Document&quot;author: - &quot;Achuan-2&quot;date: &quot;2022.11.19&quot;date-format: &quot;YYYY.MM.DD&quot;toc: truecrossref: chapters: true fig-title: 图 # (default is &quot;Figure&quot;) tbl-title: 表 # (default is &quot;Table&quot;) title-delim: &quot;.&quot; # (default is &quot; &quot;), not for pdf fig-prefix: 图 # (default is &quot;Figure&quot;) tbl-prefix: 表 # (default is &quot;Table&quot;)format: gfm: html-math-method: katex # webtex, mathjax, katex--- 在于生成的md，是带有交叉引用功能的（通过html锚点实现） 可以把公式转换为图片（webtex），以用于不支持katex的网站 Word 模板 官方配置文档：Word 1234567891011121314---title: &quot;My Document&quot;format: docx: toc: true number-sections: false highlight-style: github code-line-numbers: true link-citations: true # 设置正文引用可以超链接到参考文献表中相应的条目，默认为 false，当然true啦 reference-section-title: &quot;参考文献&quot; bibliography: references.bib reference-doc: &quot;F:\\\\OneDrive\\\\文档\\\\模板\\\\ref.docx&quot; csl: &quot;gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl&quot;--- 导出 Word 部分，其实用的就是 pandoc，但是相比 pandoc 就更方便了，写完直接点击渲染按钮就可以。如何设置 word 模板可以见之前写的：设置word模板，Markdown 也能自动转换为美观规范的 Word 文档。里面也分享了我用的 word 文档。 中文 PDF 模板 官方配置文档：PDF 对于 LaTex 真是又爱又恨，看 PDF 的 YAML 设置这么长就知道了，orz。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455---title: &quot;My Document&quot;author: - &quot;Achuan-2&quot;date: &quot;2022.11.19&quot;date-format: &quot;YYYY.MM.DD&quot;toc: truenumber-sections: trueshift-heading-level-by: -1monofont: &quot;Consolas&quot;crossref: chapters: true fig-title: 图 # (default is &quot;Figure&quot;) tbl-title: 表 # (default is &quot;Table&quot;) title-delim: &quot;-&quot; # (default is &quot;:&quot;), not for pdf fig-prefix: 图 # (default is &quot;Figure&quot;) tbl-prefix: 表 # (default is &quot;Table&quot;)format: pdf: # toc toc-depth: 3 toc-title: Contents # cite cite-method: biblatex # biblatex,citeproc bibliography: references.bib biblio-title: References # output documentclass: article # scrartcl，article, report or book papersize: a4 # a4, letter colorlinks: true #classoption: [twocolumn,landscape] keep-tex: true fig-pos: &#x27;H&#x27; tbl-cap-location: top fig-cap-location: bottom listings: false code-block-bg: &#x27;#f6f8fa&#x27; highlight-style: github code-block-border-left: false geometry: - top=30mm - left=20mm - heightrounded include-in-header: text: | \\usepackage&#123;ctex&#125; % CJK 包 \\usepackage[backend=biber,style=gb7714-2015,gbnamefmt=lowercase]&#123;biblatex&#125; \\usepackage[dvipsnames]&#123;xcolor&#125; \\setCJKmainfont[AutoFakeBold = &#123;2.25&#125;]&#123;宋体&#125; \\setmainfont&#123;Times New Roman&#125; %英文字體調整 \\usepackage&#123;caption&#125; \\captionsetup[figure]&#123;labelformat=simple, labelsep=period&#125; \\captionsetup[table]&#123;labelformat=simple, labelsep=period&#125;--- 注意 对于输出 PDF 来说，比如 &lt;region&gt; ​这种格式不能直接输出显示，需要改成 \\&lt;region\\&gt;​ 思源导出图片会加两边加零宽字符，导致 alt 无法转化为图片标题。需要用 sublime text 等软件去掉。 ​​ 暂时就到这里结束了，摸鱼了 1h 半写这篇文章 😁。","tags":["Markdown","Quarto","Word"],"categories":["技术博客"]},{"title":"设置word模板，Markdown 也能自动转换为美观规范的 Word 文档","path":"/posts/bc4b56d9.html","content":"首先先介绍下我为什么要将 Markdown 转换为 Microsoft Word 的文件，以及写这篇文章。 正式的报告常常需要交 Word 格式的，而且需要引用参考文献。但我还是喜欢先用 Markdown 写稿子，最后再用 Word 来完善文稿内容和排版，让内容和样式相分离。 就算一些软件比如思源笔记、Typora 可以直接导出 docx 文件，但目前还不怎么不支持设置自定义的参数，导出的 docx 需要进行很大程度的修改，很费力，是重复劳动。 所以这篇文章的目的就是介绍下如何更丝滑的把 Markdown 初步导出成满意的 Word 样式的，最后会点下Quarto这个更好用的工具。 Pandoc 基本命令 先简单介绍下 Pandoc。这个是一个很强大的通用文档转换工具，可以支持大量标记语言之间的格式转换，例如 Markdown 、Microsoft Word、PowerPoint、 Jupyter Notebook、HTML、PDF、LaTeX、Wiki、EPUB 格式之间的相互转换。这篇文章里，我主要介绍 Markdown 怎么转换为 Microsoft Word 的文件。 首先先介绍 pandoc 的基本命令。 1234pandoc --citeproc --number-sections \\--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \\--bibliography ref.bib -M reference-section-title=&quot;参考文献&quot; \\-M link-citations=true --reference-doc=ref.docx -s input.md -o main.docx 别看到这个就跑路了，来一点点拆解： ​pandoc​：执行 Pandoc 命 p 令 ​--citeproc​：处理文献引用，也可用 -C​ 代替 ​--number-sections​：对各级标题编号，形如 1, 1.1, 1.1.1​，也可用 -N​ 代替 --csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl：指定参考文献样式，中文报告一般用 GB/T 7714-2015 的格式，更多样式可以前往 Zotero Style Repository 和redleafnew/Chinese-STD-GB-T-7714-related-csl下载，需要注意的是pandoc目前不支持CSL-M的csl文件，那种多个作者能中文显示等、英文显示et al的就不能使用，会导致参考文献列表重复，需要把这类csl里的layout进行注释。 1234567891011&lt;bibliography entry-spacing=&quot;0&quot; et-al-min=&quot;4&quot; et-al-use-first=&quot;3&quot; second-field-align=&quot;flush&quot;&gt; &lt;!-- 取消这部分注释可以使用 CSL-M 的功能支持双语 --&gt; &lt;!-- &lt;layout suffix=&quot;.&quot; locale=&quot;en&quot;&gt; &lt;text variable=&quot;citation-number&quot; prefix=&quot;[&quot; suffix=&quot;]&quot;/&gt; &lt;text macro=&quot;entry-layout&quot;/&gt; &lt;/layout&gt; --&gt; &lt;layout suffix=&quot;.&quot;&gt; &lt;text variable=&quot;citation-number&quot; prefix=&quot;[&quot; suffix=&quot;]&quot;/&gt; &lt;text macro=&quot;entry-layout&quot;/&gt; &lt;/layout&gt;&lt;/bibliography&gt; ​--bibliography ref.bib​：引文数据文件，类似下面这样。在 md 文档里可以用 描述 [@key]​ 的方式进行引用文献，比如 谷歌学术nb[@董文鸳2011我国谷歌学术搜索研究综述]​ 123456789@article&#123;董文鸳2011我国谷歌学术搜索研究综述, title = &#123;我国谷歌学术搜索研究综述&#125;, author = &#123;董文鸳&#125;, journal = &#123;新世纪图书馆&#125;, number = &#123;9&#125;, pages = &#123;43--45&#125;, year = &#123;2011&#125;, langid = &#123;chinese&#125;,&#125; ​-M reference-section-title=&quot;参考文献&quot;​：设置参考文献表的标题为「参考文献」 ​-M link-citations=true​：设置正文引用可以超链接到参考文献表中相应的条目，默认为 false​ ​--reference-doc ref.docx​：参考的 docx 文件格式模板 ​input.md​：存储文章内容的 Markdown 文件 ​-o main.docx​：输出 docx 文件 ​\\​：反斜杠，表示换行，你也可以删除它，把所有命令写在一行。 ‍ 如何生成和修改模板 生成简陋的模板文件 根据创建的md基本样式文件 basic.md 生成一个 docx 文件，这个文件我上传到了 GitHub 12345pandoc --citeproc \\--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \\--bibliography ref.bib -M reference-section-title=&quot;参考文献&quot; \\-M link-citations=true -s basic.md -o templates.docx 可以预览下生成这个 docx 文件，这个默认生成的样式特别难看，标题喜欢用蓝色，和中文报告的格式非常不一致。 ​ ‍ 接着我们会将这个 docx 文件的样式进行修改，以后就可以当成模板，省心省力的把 md 导出成符合格式要求的 word 文件了。 如何修改模板文件 需要注意的是这里修改模板样式，不是直接修改内容里的样式，必须要修改 word 的样式 调出样式表​ 以标题举例 点击一个标题之后，右侧样式表就会自动选择【标题 1】 ​ 接着我们右击，选择修改 ​ 把标题 1 的样式修改为 字号：小二 字体：中文黑体，英文 Times New Roman 居中 段前分页 修改标题1的样式​ 这个例子就算举好了，其他标题、正文等样式都以此类推 但有几个样式我再额外提一下 代码块样式 Source Code，我是加了在【边框和底纹】添加了灰色的边框和底纹 代码块样式​ 表格样式 Table，我设置的是三线表，具体怎么做可以参考知乎这篇教学，把表格上下的边框设置为 1.5 磅，表头下面的边框设置为 0.75 磅。需要注意的是表格的修改必须全选中表格后，在【表设计-修改表格样式】这里修改，修改的样式名称需要是【Table】 ​ 另外我给这份模板还自动加了编号，这是因为我觉得 pandoc 虽然本身有–number-sections 参数，但是这个只是人为加上的，编号不会随着标题变化而变化，其实没有大用。在 word 里给标题编号除了让结构更清晰以外，还有一个重要的作用是让表格和图片的题注自动编号！ 如何设置多级标题我这里只点一下，网上教程很多 ​ 修改之后的模板 大概是这样，可能导出 word 之后还不能直接上交，还需要稍微修改，但是模板能够把主要样式以及字体设置完毕之后，已经省下了很多很多力气了，可以更愉快的用 md 来写稿，word 上交了。 最后的模板文件可以点击下载​ 以后导出使用模板 1234pandoc --citeproc \\--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \\--bibliography ref.bib -M reference-section-title=&quot;参考文献&quot; \\-M link-citations=true --reference-doc=template.docx -s input.md -o output.docx 总结 总结下 pandoc 将 md 导出 docx 格式的优点 导出速度很快，几乎在几秒内。相较于很重的 LaTeX\\LaTeXLATE​X 渲染，简直轻快极了！ 可以设置模板的样式进行复用。 支持参考文献引用（并且支持超链接点击跳转，zotero 我都找不到方式实现……） 后续可以直接在Word里修改内容，不像LaTeX\\LaTeXLATE​X导出pdf，修改内容就得重新渲染 当然也有一些缺点啦，一些样式的处理比如代码块实现不了太精致的样式，参考文献 csl 格式不支持多语言识别，导出之后可能还需要后期调整样式，例如表格和图片大小，等等。 总的来说，这种方式对于喜欢用 md 写稿，又需要交 word 文件的人，还是帮助很大很大的。像少数派这篇文章，就介绍了自己为什么不用 word 写稿、为什么不用 LaTeX\\LaTeXLATE​X 写稿的原因，感兴趣可以看看。 最后，本文介绍的这种通过命令行调用 pandoc 导出 md 为 docx 的方式还是非常繁琐的，而且写稿与导出其实是分离开的。 下一篇文章我将会主要介绍 Quarto 这个工具。Quarto 是下一代的 Rmarkdown，相比 Rmarkdown 来说，把生态给大一统了，你甚至不需要有 R 环境也能用，VSCode 上也有专门的插件。Quarto 的强大之处在于，不仅仅在于可以渲染代码运行结果，而且导出文档方面是我目前见过最无敌的存在，相信我，用上它，你会见到 markdown 的另一片天空。你只需要把 md 改成 qmd 后缀，加上一个 yaml 头，轻轻一点渲染按钮，就可以导出 word、html、ipynb、GFM 规范的 md（还可以设置公式导出为纯文本还是图片），甚至当成简易版的 LaTeX\\LaTeXLATE​X，LaTeX\\LaTeXLATE​X 代码与 markdown 语法混用，导出样式精美的 pdf。好啦，这里就不多说了，等我下篇博客吧。 本文涉及的文件已上传至GitHub","tags":["Markdown","Word","pandoc"],"categories":["技术博客"]},{"title":"Windows 笔记本电脑查看电池使用情况","path":"/posts/e977bfe7.html","content":"不需要其他软件，直接用cmd命令就可以。 在cmd窗口输入powercfg /batteryreport，生成电池使用情况报告html， ​ 打开html，可以看到详细的电池报告。 Installed batteries这里，最重要的两个信息是Design capacity(电池设计容量)和Full charge capacity(满电容量)，这两个信息是通过读取电池信息得到的。我们可以粗略通过这两个数据判断电池是否有衰减，如果发现“FULL CHARGE CAPACITY”大幅小于“DESIGN CAPACITY”，那么电池衰减可能就比较厉害了 下图中，Design capacity=Full charge capacity这是由于我已经换了新电池。 ​ 往下翻，还有几栏信息，可以帮助了解电池状态。 Recent usage观察到电池近三天的电量变化情况，有表格还带有图表。在“STATE”（状态）中，有“Active”（活动）和“Connected standby”（连接待机）等情况，而“SOURCE”（电源）中，则可以观察到电源来自“Battery”（电池）还是“AC”（交流电）。之后一栏“CAPACITY REMAINING”则是电池电量的变化了，判断电脑掉电快到底是耗电异常还是容量衰减，这个数据很有参考价值。 ​ 在“Usage history”一栏中，可以看到电脑每天“ACTIVE”（活动）和“CONNECTED STANDBY”（连接待机）的时长。有时候电量消耗太快是因为电脑莫名其妙唤醒，没有待机，在这里可以查看耗电太多是不是这一原因。 ​ Battery capacity history可以看过去电池容量的变化，下图可以看到2020年11月我电脑电池实际容量只有15Wh了，后来在2020年11月底电池容量突然恢复正常了。 ​ 为什么呢？这是因为我在这时候换了一个新电池，我重新找了淘宝的购物记录，发现确实就是这时候买的电池。 ​ 然后再往下滑，可以看到现在的电池容量也只有大约22Wh了，不用充电器大概只能支持40min这样（大概才用了1年9个月）。 ​ 总结 在cmd命令行中使用powercfg /batteryreport可以很详细的查看当前电池实际容量来预估电池寿命，还可以追踪过去电池的实际容量变化。 虽然这个Windows自带的电池检测功能用起来是麻烦了点，但对比第三方软件，它更加靠谱，展示的信息也更多。","tags":["Windows"],"categories":["技术博客"]},{"title":"tree 查看文件目录神器","path":"/posts/595885f1.html","content":"使用 tree能以树状图列出目录的内容，非常适合概览项目结构。 12alias tree=&#x27;tree -FCN&#x27;tree -L 2 -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上&quot;*“,”/“,”=“,”@“,”|&quot;号 -C 在文件和目录清单加上色彩，便于区分各种类型。 -N 直接列出文件和目录名称，包括控制字符。 -L 设置展开层级 ​ 安装 Linux无权限安装 通过链接地址: http://mama.indstate.edu/users/ice/tree/下载 tree 安装包。或者使用wget命令：wget http://mama.indstate.edu/users/ice/tree/src/tree-1.8.0.tgz（版本不要安装太新的，可能编译有问题） 使用指令 tar -zxvf tree-1.8.0.tgz 解压。 进入解压目录，编辑目录中的 Makefile 文件，将 prefix=后面的路径改为自己的安装目录，比如我的改为 prefix = /home/achuan/softwares/tree-1.8.0，保存。 在解压目录，输入指令 make install 进行安装。 编辑用户目录(~）下 vi ~/.bashrc 或 vi ~.bash_profile ，加入以下内容：export PATH=$PATH:/home/achuan/softwares/tree-1.8.0/bin 输入 source ~/.bashrc 或 source ~/.bash_profile 指令更新。 windows Git Bash安装 打开进入 Tree for Windows 页面，选择下载 Binaries zip 文件。 解压压缩包，找到压缩包内的 bin 目录，将 bin 目录下的 tree.exe 复制 找到安装Git的文件夹，找到该文件夹下的usr\\bin 目录，将 tree.exe 粘贴到该目录下，安装即完成","tags":["Windows","Linux"],"categories":["技术博客"]},{"title":"Python 上传包到pypi","path":"/posts/d2b2fba7.html","content":"要学会可以创建属于自己的轮子！ 阿巛同学第一个上传到Pypi的包：https://pypi.org/project/pairwiseAlignment/ 准备工作 注册pypi，创建一个$HOME/.pypirc​文件，里面填入token（在Account settings 获取） 123[pypi] username = __token__ password = pypi生成的token 把之前的代码文件全部放入一个新的文件夹里，在外部生成下面这些文件 README.md setup.py 123456789101112131415161718192021222324252627282930313233343536from setuptools import setup,find_packagesfrom os import pathfrom PairwiseAlignment import __version__here = path.abspath(path.dirname(__file__))with open(path.join(here, &#x27;requirements.txt&#x27;), &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as f: all_reqs = f.read().split(&#x27; &#x27;) install_requires = [x.strip() for x in all_reqs if &#x27;git+&#x27; not in x]with open(path.join(here, &#x27;README.md&#x27;), &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as f: long_description = f.read()setup( name=&#x27;pairwiseAlignment&#x27;, # 必填，项目的名字，用户根据这个名字安装，pip install pairwiseAlignment version=__version__, # 必填，项目的版本，建议遵循语义化版本规范 author=&#x27;Achuan-2&#x27;, # 项目的作者 description=&#x27;Using Python to implement Needleman Wunsch and Smith Waterman algorithms&#x27;, # 项目的一个简短描述 long_description=long_description, # 项目的详细说明，通常读取 README.md 文件的内容 long_description_content_type=&#x27;text/markdown&#x27;, # 描述的格式，可选的值： text/plain, text/x-rst, and text/markdown author_email=&#x27;achuan-2@outlook.com&#x27;, # 作者的有效邮箱地址 url=&#x27;https://github.com/Achuan-2/mini/tree/main/pairwiseAlignment&#x27;, # 项目的源码地址 include_package_data=True, py_modules=[&#x27;pairwiseAlignment&#x27;], platforms=&#x27;any&#x27;, # 项目的运行平台，可选的值：any, windows, linux, macos, unix, os2, ce, java, and riscos packages=find_packages(), # 项目的包列表，如果项目只有一个包，那么这个参数可以省略 python_requires=&#x27;&gt;=3.7&#x27;, # 项目的 Python 版本要求 license=&#x27;MIT&#x27;, # 项目的许可证 install_requires=install_requires, # 下面的设置将在命令行提供一个叫做 pairwiseAlignment 的命令，用来执行 main.py 的 main 方法 entry_points=&#123; &#x27;console_scripts&#x27;: &#123; &#x27;pairwiseAlignment= PairwiseAlignment.run:main&#x27; &#125;, &#125;,) LICENSE.txt 12345678910111213141516171819Copyright (c) 2022 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software. THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE. MANIFEST.in 12include requirements.txtinclude README.md requirements.txt 1pipreqs ./ --encoding=utf8 之后目录架构 1234567891011|-- PairwiseAlignment/（要上传的代码方在一个文件夹）| |-- __init__.py| |-- __pycache__/| |-- run.py| `-- src/|-- CHANGELOG.md|-- LICENSE.txt|-- MANIFEST.in|-- README.md|-- requirements.txt`-- setup.py 由于现在代码变为包了，所以要注意包内的自定义模块导入方式，比如.代表同级，…代表上一级 安装所需要的包 12pip install buildpip install twine 测试 直接安装测试 1python setup.py install 运行对于程序的命令，检测有无问题 上传 123python -m build # 打包twine upload dist/* # 上传包到pypirm -r dist build *.egg-info # 删除临时文件 ‍","tags":["Python"],"categories":["技术博客"]},{"title":"RNAseq 分析：Tophat2+cufflinks+cuffdiff+差异基因分析","path":"/posts/6e57daa8.html","content":"本次分析的整体流程​ 一、数据来源 数据简介 本次分析的数据来源于在 2020 年五月发表在 Nucleic Acids Res 的《Nono deficiency compromises TET1 chromatin association and impedes neuronal differentiation of mouse embryonic stem cells》（doi: 10.1093/nar/gkaa213）。该文由复旦大学生物医学研究所表观遗传学实验室，哈佛大学医学院附属布莱根妇女医院内分泌系、哈佛大学医学院附属波士顿儿童医院新生医学与表观遗传学研究室共同发表，第一作者为 Wenjing Li 和 Violetta Karwacki-Neisius，石雨江教授和吴飞珍副研究员为共同通讯作者。该文涉及的代码见 FeizhenWu/Nono。 NONO 是一种 DNA/RNA 结合蛋白，该文揭示了 NONO在小鼠胚胎干细胞(mESCs)的神经元分化过程中起着关键作用，Nono缺失会影响到TET1与染色质结合并阻碍小鼠胚胎干细胞的神经分化：Nono 基因缺失将使得神经元分化的关键特定基因上调失败，从而阻碍了神经元谱系的定型；许多 NONO 调控的基因也是 DNA 去甲基化酶 TET1 的靶向基因；将野生型 NONO 蛋白重新引入 NONO KO 细胞，不仅使得大部分 NONO/TET1 共调控基因的恢复正常表达，还可以挽救 NONO 缺陷的 mESCs 的神经分化缺陷；作者还发现 NONO 能通过其 DNA 结合域直接与 TET1 相互作用，并将 TET1 招募到基因位点以调节 5-羟甲基胞嘧啶水平。NONO 的缺失会导致 TET1 与染色质显著分离，使得神经元基因的 DNA 羟甲基化失调。 该文涉及的 RNA-seq 测序数据在 NCBI SRA 数据库编号为 PRJNA527295。测序的细胞为小鼠胚胎干细胞（E14TG2a），分别对三类 mESCs 细胞进行测序（WT，Nono KO，Nono KO+WT），使用 Illumina HiSeq 2500 测序仪进行转录组 RNA 测序。 本次实验选取了四个 Run（测序数据），分别为 SRR8734708（set1_WT_D0）、SRR8734712（set1_NonoKO_D0）、SRR8734718（Set2_WT_D0）和 SRR8734722（Set2_NonoKO_D0）。 RUN GROUP SRR8734708 set1_WT_D0 SRR8734712 set1_NonoKO_D0 SRR8734718 Set2_WT_D0 SRR8734722 Set2_NonoKO_D0 数据下载 在服务器上创建项目文件夹 mkdir ~/workplace/homework1​ 通过在 NCBI 的 SRA 数据库输入 SRR id，打开 Run Selector，选择 4 个 Run 后勾选 Selected，下载 Metadata 和 Accession List，上传到服务器项目文件夹中。 ​SRR_Acc_List.txt ​文件内容 1234SRR8734722SRR8734718SRR8734708SRR8734712 服务器项目文件夹创建 group.csv​，记录 SRR ID 和分组信息 1234SRR8734708,set1_WT_D0SRR8734712,set1_NonoKO_D0SRR8734718,set2_WT_D0SRR8734722,set2_NonoKO_D0 然后在服务器上使用 sratoolkit 软件的 fastq-dump 命令进行下载测序数据。fastq-dump 可以下载 fastq 格式的文件，也可以将下载好的 sra 格式文件转换为 fastq 格式。 配置 sratoolkit（v2.11.0） 12vdb-config --interactive# 然后按s，o，e，完成配置 编写 slurm 作业脚本：vim ~/scripts/fastq-dump.sh 123456789101112#!/bin/bash#SBATCH -J fastq-dump#SBATCH -p dna#SBATCH -N 1#SBATCH --mem=10G#SBATCH --cpus-per-task=2#SBATCH -o slurm.%j.%x.out # STDOUT#SBATCH -e slurm.%j.%x.err # STDERR#SBATCH --mail-type=END#SBATCH --mail-user=jxsu22@m.fudan.edu.cnfastq-dump --split-3 --gzip $1 --outdir $2 运行 shell 脚本 12345PROJECT=/home/u22211520038/workplace/homework1cd $PROJECTcat $PROJECT/SRR_Acc_List.txt| while read id;do sbatch ~/scripts/fastq-dump.sh $&#123;id&#125; $PROJECT/01_rawdata/ done 下载完成 cat $PROJECT/log/slurm.*.fastq-dump*.out​ ll -h $PROJECT/01_rawdata/​ ​ 二、分析过程 1、trim_galore 去除低质量的 reads 和 adaptor Trim Galore 使用 Perl 语言对 FastQC 和 Cutadapt 进行了封装。可以用于过滤低质量碱基和去除序列 3’ 末端的 adapter。可适用于所有高通量测序，包括 RRBS(Reduced Representation Bisulfite-Seq ),、Illumina、Nextera 和 smallRNA 测序平台的双端和单端数据。 1234567$ trim_galore --version Quality-/Adapter-/RRBS-/Speciality-Trimming [powered by Cutadapt] version 0.6.7 Last update: 11 05 2020 参数 --fastqc：Run FastQC in the default mode on the FastQ file once trimming is complete. --illumina：Adapter sequence to be trimmed is the first 13bp of the Illumina universal adapter AGATCGGAAGAGC instead of the default auto-detection of adapter sequence. -o/--output_dir &lt;DIR&gt;：If specified all output will be written to this directory instead of the current directory. If the directory doesn’t exist it will be created for you. --gzip：Compress the output file with gzip. If the input files are gzip-compressed the output files will be automatically gzip compressed as well. 实操过程 编写 trim_galore 的 slurm 作业脚本：vim ~/scripts/trim_galore.sh​ 1234567891011121314151617181920#!/bin/bash#SBATCH -J trim_galore#SBATCH -p dna#SBATCH -N 1#SBATCH --mem=20G#SBATCH --cpus-per-task=4#SBATCH -o slurm.%j.%x.out # STDOUT#SBATCH -e slurm.%j.%x.err # STDERR#SBATCH --mail-type=END # 发送哪一种email通知：BEGIN,END,FAIL,ALL#SBATCH --mail-user=jxsu22@m.fudan.edu.cnmode=$1SRR=$2if [ &quot;$mode&quot; == &quot;single&quot; ];then # 如果是单端 trim_galore --illumina --fastqc $SRR.fastq.gzelif [ &quot;$mode&quot; == &quot;paired&quot; ];then # 如果是多端 trim_galore --illumina --fastqc --paired $&#123;SRR&#125;_1.fastq.gz $&#123;SRR&#125;_2.fastq.gzfi 运行 shell 脚本，将 trim_galore 作业脚本提交到 slurm 系统 1234567PROJECT=/home/u22211520038/workplace/homework1mode=pairedcd $PROJECT/01_rawdata/cat $PROJECT/SRR_Acc_List.txt| while read SRR;do sbatch ~/scripts/trim_galore.sh $mode $SRRdone 运行结束：在项目 $PROJECT/01_rawdata/ ​文件夹下，新生成了双端测序的过滤文件，以 SRR8734708 测序文件为例： ​SRR8734708_1.fastq.gz-&gt; SRR8734708_1_val_1.fq.gz​ ​SRR8734708_2.fastq.gz-&gt;SRR8734708_2_val_2.fq.gz​ ll -lh $PROJECT/01_rawdata/​ 如果是单端测序模式，trim_galore 则会默认生成带 trimed.fq.gz 的数据文件 2、使用 Tophat2 比对和 Cufflinks 计算基因表达 Tophat2 是一个比对工具，本身实际不能比对，而是通过调用 bowtie/bowtie2 进行比对。Tophat 最初只能调用 bowtie，2012 年 4 月 9 日 Tophat 发布了 2.0.0 版本，宣布支持 bowtie2 的比对，将其称之为 Tophat2。进行比对时，需要输入基因组的索引，而不是直接输入基因组序列，这是为了比对更加快速、减小计算内存，帮助比对软件更快速的找到目标区域。 Cufflinks 是一个主要用于基因表达量的计算和差异表达基因分析的软件包。其下主要包含 cufflinks，cuffmerge，cuffcompare 和 cuffdiff 等几支主要的程序。 cufflinks 可以通过 tophat2 生成的 accepted_hits.bam 文件计算基因的 FPKM 值、输出基因组注释 gtf 文件。 cuffdiff 则可以通过 tophat2 生成的 accepted_hits.bam 文件和基因组注释 gtf 文件计算差异表达基因。 实操过程 先准备参考基因组 参考基因组地址 基因索引文件文件：/home/public/share/Genomes/mm10_Bowtie2Index​ 基因注释文件地址：/home/public/share/Genomes/mm10_genes.gtf​ 将参考基因组软连接到项目文件夹下 12345678PROJECT=/home/u22211520038/workplace/homework1cd $PROJECTmkdir $PROJECT/00_index# 参考基因组ln -s /home/public/share/Genomes/mm10_Bowtie2Index $PROJECT/00_index# 基因注释ln -s /home/public/share/Genomes/mm10_genes.gtf $PROJECT/00_index 编写运行 tophat2 和 cufflinks 的脚本：vim tophat2_cufflinks.sh 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697#!/bin/bash#SBATCH -J tophat2_cufflinks#SBATCH -p dna#SBATCH -N 4#SBATCH --mem=20G#SBATCH --cpus-per-task=4#SBATCH -o slurm.%j.%x.out # STDOUT#SBATCH -e slurm.%j.%x.err # STDERR#SBATCH --mail-type=END # 发送哪一种email通知：BEGIN,END,FAIL,ALL#SBATCH --mail-user=jxsu22@m.fudan.edu.cnecho &quot;Usage:&quot;echo &quot; tophat2_cufflinks.sh &#123;mode&#125; &#123;threads&#125; &#123;transcriptome-index&#125; &#123;bowtie2-index&#125; &#123;SRR&#125; &#123;fq1&#125; [&#123;fq2&#125;] &quot;echo &quot;&quot;INDEX=$PWD/00_indexDATA=$PWD/01_rawdataRESULT=$PWD/02_resultmode=$1if test -z $mode # 检测字符是否为空then echo &quot;please input the mode(single or paired)&quot; exitfithreads=$2if test -z $threadsthen echo &quot;please input the number of threads&quot; exitfiAnnotation=$3if test -z $Annotationthen echo &quot;please input transcriptome-index(/share/Genomes/Homo_sapiens/UCSC/hg19/Annotation/Genes/hg19_genes/genes.gff)&quot; exitfibowtie2Index=$4if test -z $bowtie2Indexthen echo &quot;please input bowtie2-index(/share/Genomes/Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/genome)&quot; exitfiSRR=$5if test -z $SRRthen echo &quot;please input SRR id&quot; exitfifq1=$6if test -z $fq1then echo &quot;please input fasta1&quot; exitfiif [ &quot;$mode&quot; == &quot;paired&quot; ];then fq2=$7 if test -z $fq2 then echo &quot;please input fasta1&quot; exit fifi#====================================================echo &quot;Running info&quot;echo &quot;Project: &quot;$PWDecho &quot;Read: &quot;$SRRecho &quot;Annotation: &quot;$Annotationecho &quot;Genome: &quot;$bowtie2Indexecho &quot; &quot;########################RUN##############################mkdir -p $&#123;RESULT&#125;/tophat2/$&#123;SRR&#125;mkdir -p $&#123;RESULT&#125;/cufflinks/$&#123;SRR&#125;if [ &quot;$mode&quot; == &quot;single&quot; ];then # 如果是单端 tophat2 -p $&#123;threads&#125; -o $&#123;RESULT&#125;/tophat2/$&#123;SRR&#125; $&#123;INDEX&#125;/$&#123;bowtie2Index&#125; $&#123;DATA&#125;/$&#123;fq1&#125;elif [ &quot;$mode&quot; == &quot;paired&quot; ];then # 如果是多端 tophat2 -p $&#123;threads&#125; -o $&#123;RESULT&#125;/tophat2/$&#123;SRR&#125; $&#123;INDEX&#125;/$&#123;bowtie2Index&#125; $&#123;DATA&#125;/$&#123;fq1&#125; $&#123;DATA&#125;/$&#123;fq2&#125;ficufflinks -p $&#123;threads&#125; -o $&#123;RESULT&#125;/cufflinks/$&#123;SRR&#125; -G $&#123;INDEX&#125;/$Annotation $&#123;RESULT&#125;/tophat2/$&#123;SRR&#125;/accepted_hits.bamecho &quot; &quot;echo &quot; Running $&#123;SRR&#125; is compeleted.&quot;echo &quot; &quot; 运行 shell 脚本，将该作业脚本提交到 slurm 系统 12345678910111213PROJECT=/home/u22211520038/workplace/homework1mode=pairedcd $PROJECTcat $PROJECT/SRR_Acc_List.txt | while read SRR;do sbatch ~/scripts/Tophat_Cufflinks.sh \\ $mode \\ 4 \\ mm10_genes.gtf \\ mm10_Bowtie2Index/genome \\ $&#123;SRR&#125; \\ $&#123;SRR&#125;_1_val_1.fq.gz \\ $&#123;SRR&#125;_2_val_2.fq.gz done 运行结束：在项目 $PROJECT/02_result/文件夹下，tophat2 和 cufflinks 文件夹分别存放两个软件运行的结果。 tophat2 的运行结果 tree -L 2 ${Project}/02_result/tophat2​ 其中最有用的是 accepted_hits.bam，记录了 reads 比对到参考基因组的数据 cufflinks 的运行结果： ​ 其中常用的是 genes.fpkm_tracking 和 transcripts.gtf 文件 genes.fpkm_tracking：isoforms (可以理解为 gene 的各个外显子)的 fpkm 计算结果； transcripts.gtf：转录组的 gtf，该文件包含 Cufflinks 的组装结果 isoforms； 3、FPKM 转化为 TPM 在 RNA-Seq 的分析中，需要对基因或转录本的 read counts 数目进行标准化（normalization）。因为落在一个基因区域内的 read counts 数目取决于基因长度和测序深度，一个基因越长，测序深度越高，落在其内部的 read counts 数目就会相对越多。在进行基因差异表达的分析时，往往是在多个样本中比较不同基因的表达量，如果不进行数据标准化，比较结果是没有意义的。read counts 数目标准化的两个关键因素就是基因长度和测序深度，常常用 RPKM (Reads Per Kilobase Million), FPKM (Fragments Per Kilobase Million) 和 TPM (Transcripts Per Million)作为标准化数值。 RPKM 和 FPKM 的定义是相同的，唯一的区別是 FPKM 用于双端测序文库，而 RPKM 用于单端测序文库。 FPKM 和 TPM 都能够矫正掉基因长度及测序深度对 gene 表达定量的影响，区别在于 FPKM 先计算比对到每个基因的 read 数占 reads 总数的比例，再考虑基因的长度； 而 TPM 是先考虑基因的长度，再把 read counts 转化为占处理之后的总数的比例。 之所以要将 FPKM 转化为 TPM，是因为 TPM 可以使得每个样本的表达量总和都是1 Million，使得 TPM 中的基因表达量可以直接进行样本间的比较。 编写 FPKM2TPM.R 脚本，改进自 /home/public/software/wfz_scripts/FPKM2TPM.R​，主要改进点是把输出文件的 xls 格式改成了 tsv 文件格式。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586#!/home/u22211520038/.conda/envs/achuan/bin/Rscript# ====================================================================suppressPackageStartupMessages(library(&quot;optparse&quot;))# ====================================================================option_list &lt;- list( make_option(c(&quot;-f&quot;, &quot;--files&quot;), type = &quot;character&quot;, default = &quot;genes.fpkm_tracking&quot;, help = &quot;To specify fpkm files generated by cufflinks with comma-separate [default %default]&quot; ), make_option(c(&quot;-l&quot;, &quot;--labels&quot;), type = &quot;character&quot;, default = &quot;&quot;, help = &quot;To specify labels [default %default]&quot; ), make_option(c(&quot;-o&quot;, &quot;--output&quot;), type = &quot;character&quot;, default = &quot;Expression&quot;, help = &quot;To specify output file [default %default]&quot; ))parser &lt;- OptionParser( usage = &quot;%prog [options]&quot;, option_list = option_list, description = &quot; The script is to convert FPKMs into TPMs.&quot;, epilogue = &quot;Feizhen Wu(wufz@fudan.edu.cn), July 09, 2018. &quot;)arguments &lt;- parse_args(parser, positional_arguments = 0, print_help_and_exit = T)opt &lt;- arguments$optionsfiles &lt;- strsplit(opt$files, &quot;,&quot;)[[1]]labels &lt;- strsplit(opt$labels, &quot;,&quot;)[[1]]output &lt;- opt$outputlibrary(data.table)library(pheatmap)FPKM2TPM &lt;- function(myfile, myName = myfile) &#123; if (myName == myfile) &#123; myName &lt;- sub(pattern = &quot;(.*)\\\\..*$&quot;, replacement = &quot;\\\\1&quot;, basename(myfile)) &#125; cat(&quot;The label of&quot;, myfile, &quot; was assigned as &quot;, myName, &quot;! &quot;) if (file.access(myfile) == -1) &#123; stop(sprintf(&quot;Specified file ( %s ) does not exist&quot;, myfile)) &#125; Exp &lt;- fread(myfile, header = T)[, c(&quot;gene_id&quot;, &quot;FPKM&quot;)] Exp &lt;- Exp[!grep(&quot;^Mir&quot;, Exp$gene_id), ] Exp &lt;- Exp[!grep(&quot;^MIR&quot;, Exp$gene_id), ] Exp &lt;- Exp[!duplicated(Exp$gene_id), ] ss &lt;- sum(Exp$FPKM) Exp$Tpm &lt;- Exp$FPKM / ss * 10^6 Tpm &lt;- Exp[, c(1, 3)] Fpkm &lt;- Exp[, c(1, 2)] names(Tpm) &lt;- c(&quot;gene_id&quot;, myName) names(Fpkm) &lt;- c(&quot;gene_id&quot;, myName) Result &lt;- list() Result$Tpm &lt;- Tpm Result$Fpkm &lt;- Fpkm return(Result)&#125;# ===================================if (length(labels) &gt; 0) &#123; Exp1 &lt;- FPKM2TPM(files[1], labels[1])&#125; else &#123; Exp1 &lt;- FPKM2TPM(files[1])&#125;Exp_Tpm &lt;- Exp1$TpmExp_Fpkm &lt;- Exp1$Fpkmi &lt;- 2while (i &lt;= length(files)) &#123; if (i &lt;= length(labels)) &#123; Exp1 &lt;- FPKM2TPM(files[i], labels[i]) &#125; else &#123; Exp1 &lt;- FPKM2TPM(files[i]) &#125; Exp_Fpkm &lt;- merge(Exp_Fpkm, Exp1$Fpkm, by = &quot;gene_id&quot;) Exp_Tpm &lt;- merge(Exp_Tpm, Exp1$Tpm, by = &quot;gene_id&quot;) i &lt;- i + 1&#125;fwrite(Exp_Tpm, file = paste(output, &quot;_TPM.tsv&quot;, sep = &quot;&quot;), quote = F, sep = &quot;\\t&quot;, row.names = F)fwrite(Exp_Fpkm, file = paste(output, &quot;_FPKM&quot;, &quot;.tsv&quot;, sep = &quot;&quot;), quote = F, sep = &quot;\\t&quot;, row.names = F)Exp &lt;- Exp_Tpm[, -1]p &lt;- cor(Exp)pdf(file = paste(output, &quot;_TPM_correlation.pdf&quot;, sep = &quot;&quot;), height = 360 / 100, width = 437 / 100, onefile = F)pheatmap(p)dev.off()write.table(p, file = paste(output, &quot;_TPM_correlation.tsv&quot;, sep = &quot;&quot;), quote = F) 接下来编写 shell 脚本以批量传入参数运行，将 cufflinks 计算得到的各样本 FPKM 转化为 TPM。 12345678910111213141516171819202122PROJECT=/home/u22211520038/workplace/homework1mkdir -p $PROJECT/02_result/fpkmmkdir -p $PROJECT/02_result/FPKM2TPMcd $PROJECT/02_result# 创建软链接，并以分组命名cat $PROJECT/group.csv | while IFS=&quot;,&quot; read -r SRR group;do ln -s $PROJECT/02_result/cufflinks/$&#123;SRR&#125;/genes.fpkm_tracking $PROJECT/02_result/fpkm/$&#123;group&#125;.fpkmdone# 获得fkpm的列表cd $PROJECT/02_result/fpkmdelim=&quot;&quot;fpkm_list=&quot;&quot;for item in `ls *.fpkm`; do temp=&quot;$&#123;delim&#125;$&#123;item##*/&#125;&quot; fpkm_list=&quot;$&#123;fpkm_list&#125;$&#123;temp&#125;&quot; delim=&quot;,&quot;done# 通过Rscript进行FPKM转化TPM的转化~/scripts/FPKM2TPM.R -f $fpkm_list -o $PROJECT/02_result/FPKM2TPM/Expression FPKM2TPM.R 还会调用 pheatmap 包根据各样本的 TPM 表达量来绘制热图 ​ ‍ 4、用 cuffdiff 计算基因差异表达 123$ cuffdiff -hUsage: cuffdiff [options] &lt;transcripts.gtf&gt; &lt;sample1_hits.sam&gt; &lt;sample2_hits.sam&gt; [... sampleN_hits.sam] Supply replicate SAMs as comma separated lists for each condition: sample1_rep1.sam,sample1_rep2.sam,...sample1_repM.sam 了解 cuffdiff 的输入参数，需要输入 transcripts.gtf 和 sample_hits.bam 文件(或 sam 格式的文件）。 使用 cuffdiff 时需要注意 样本重复和多样本分别以逗号和空格分隔：当一个样本有多个 replicate 时，使用逗号隔开。对于多个 sample，用空格隔开，以计算 samples 间的基因表达的差异性。 log2(fold_change)的值是 log2(sample2/sample1)，在统计上下调关系时需要注意输入的 sample 顺序，一般是 WT sample 在前，实验组 sample 在后。 这一步将使用 cuffdiff 根据 Tophat2 生成的各样本比对文件 accepted_hits.bam 以及小鼠的基因组注释文件寻找差异基因。 先编写 cuffdiff 的作业脚本：vim ~/scripts/cuffdiff.sh 123456789101112131415161718192021222324#!/bin/bash#SBATCH -J cuffdiff#SBATCH -p dna#SBATCH -N 1#SBATCH --mem=8G#SBATCH --cpus-per-task=2#SBATCH -o slurm.%j.%x.out # STDOUT#SBATCH -e slurm.%j.%x.err # STDERR#SBATCH --mail-type=END # 发送哪一种email通知：BEGIN,END,FAIL,ALL#SBATCH --mail-user=jxsu22@m.fudan.edu.cnoutdir=$1gtf=$2bam_dir=$3label1=$4label2=$5sample1=$(ls $bam_dir/*$label1* | xargs | tr &#x27; &#x27; &#x27;,&#x27;)sample2=$(ls $bam_dir/*$label2* | xargs | tr &#x27; &#x27; &#x27;,&#x27;)cuffdiff -p 2 -o $outdir \\ -L $label1,$label2 \\ $gtf \\ $sample1 \\ # Separate different samples with space $sample2 然后运行 shell 脚本，提交该任务 12345678910111213141516171819202122PROJECT=/home/u22211520038/workplace/homework1mkdir -p $PROJECT/02_result/bammkdir -p $PROJECT/02_result/cuffdiff# 创建软链接，并以分组命名cat $PROJECT/group.csv | while IFS=&quot;,&quot; read -r SRR group;do ln -s $PROJECT/02_result/tophat2/$&#123;SRR&#125;/accepted_hits.bam $PROJECT/02_result/bam/$&#123;group&#125;.bamdonecd $PROJECT/02_result/cuffdiff# 运行cuffdiff，进行差异基因分析sbatch ~/scripts/cuffdiff.sh \\ $PROJECT/02_result/cuffdiff \\ $PROJECT/00_index/mm10_genes.gtf \\ $PROJECT/02_result/bam \\ WT \\ NonoKO 查看运行结果 ll $&#123;Project&#125;/02_result/cuffdiff ll ${Project}/02_result/cuffdiff​ 可以看到生成了很多文件，后面的差异基因分析将主要用到 gene_exp.dff。其中第三列是基因名，第五列和第六列是比较的两个样本名，第 10 列是 log2(foldchange)值，第 12 列是 pvalue。 less -SN ${Project}/02_result/cuffdiff/gene_exp.diff​ 三、R 语言代码 准备需要的 R 包 12345if (!require(&quot;BiocManager&quot;)) install.packages(&quot;BiocManager&quot;)if (!require(&quot;pheatmap&quot;)) BiocManager::install(&quot;pheatmap&quot;)if (!require(&quot;clusterProfiler&quot;)) BiocManager::install(&quot;clusterProfiler&quot;)if (!require(&quot;org.Mm.eg.db&quot;)) BiocManager::install(&quot;org.Mm.eg.db&quot;)if (!require(&quot;cowplot&quot;)) BiocManager::install(&quot;cowplot&quot;) 设置工作目录 1setwd(&#x27;~/workplace/homework1/02_result&#x27;) 从 cuffdiff 生成的 gene_exp.diff，进行解析，提取 | log2(foadchange) |&gt;1.5，p_value&lt;0.05 的差异基因，保存为 DiffGenes_FC1.5.txt​ 123456789DEG &lt;- read.table(&quot;./cuffdiff/gene_exp.diff&quot;, header = T)DEG &lt;- DEG[, c(3, 10, 12)]DEG &lt;- DEG[is.finite(DEG$log2.fold_change.), ]DEG &lt;- DEG[abs(DEG$log2.fold_change.) &gt; log2(1.5) &amp; DEG$p_value &lt; 0.05, ] # 提取log2(foadchange)&gt;1.5，p_value&lt;0.05的差异基因names(DEG) &lt;- c(&quot;genes&quot;, &quot;foldchange&quot;, &quot;pvalue&quot;)DEG$regulation &lt;- &quot;up&quot;DEG$regulation[DEG$foldchange &lt; 0] &lt;- &quot;down&quot;DEG &lt;- DEG[order(abs(DEG$foldchange), decreasing = T), ] # 按照foldchange绝对值大小进行倒序排序write.table(DEG, file = &quot;plot/DiffGenes_FC1.5.txt &quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) 绘制差异基因的图 1234567891011121314151617181920212223242526272829303132333435# bar-plot&#123; library(ggplot2) tab &lt;- as.data.frame(table(DEG$regulation)) tab$Var1 &lt;- factor(tab$Var1, levels = c(&quot;up&quot;, &quot;down&quot;)) p &lt;- ggplot(tab, aes(x = Var1, y = Freq, label = Freq, fill = Var1)) + geom_bar(stat = &quot;identity&quot;) p &lt;- p + geom_text(position = position_dodge(0.9), vjust = 0, size = 3) + ylim(0, max(tab$Freq) * 1.1) p &lt;- p + theme_classic(8) + xlab(&quot;differential expression&quot;) + ylab(&quot;Number of genes&quot;) p &lt;- p + ggtitle(&quot;diffgenes&quot;) + theme(legend.position = &quot;none&quot;) p &lt;- p + theme(plot.title = element_text(hjust = 0.5)) p ggsave(p, filename = &quot;plot/diffgene_number_barplot.pdf&quot;, width = 2.2, height = 2.2)&#125;# heatmap&#123; library(scales) library(pheatmap) dd &lt;- read.table(&quot;FPKM2TPM/Expression_TPM.tsv&quot;, header = T) # 取Top50的差异基因在各个样本的TPM DEG1 &lt;- DEG[order(abs(DEG$foldchange), decreasing = T), ] num &lt;- 50 DEG1 &lt;- DEG1[1:num, ] dd1 &lt;- dd[dd$gene_id %in% DEG1$genes, ] row.names(dd1) &lt;- dd1$gene_id dd1$gene_id &lt;- NULL names(dd1) &lt;- c(&quot;set1_NonoKO_D0&quot;, &quot;set1_WT_D0&quot;, &quot;set2_NonoKO_D0&quot;, &quot;set2_WT_D0&quot;) dd2 &lt;- t(apply(dd1, 1, rescale)) # 绘制热图 pdf(file = &quot;plot/top_50gene.pdf&quot;, width = 3, height = 7) pheatmap(dd2, cutree_rows = 2, cutree_cols = 2, fontsize_row = 8) dev.off()&#125; GO 富集和 KEGG 富集分析代码 123456789101112131415161718192021222324252627282930313233343536373839library(clusterProfiler)library(org.Mm.eg.db)library(cowplot)gene &lt;- bitr(DEG$genes, fromType = &quot;SYMBOL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = org.Mm.eg.db) # 选择小鼠数据库geneList &lt;- bitr(dd$gene_id, fromType = &quot;SYMBOL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = org.Mm.eg.db) # 选择小鼠数据库# 对样本间的差异基因进行GO富集分析ego &lt;- enrichGO( gene = gene$ENTREZID, universe = names(geneList$ENTREZID), OrgDb = org.Mm.eg.db, # 选择小鼠数据库 ont = &quot;BP&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05, readable = TRUE)# 对样本间的差异基因进行KEGG富集分析kk &lt;- enrichKEGG( gene = gene$ENTREZID, organism = &quot;mmu&quot;, # 选择小鼠 pvalueCutoff = 0.05, pAdjustMethod = &quot;BH&quot;, qvalueCutoff = 0.05)p1 &lt;- dotplot(ego, showCategory = 5, orderBy = &quot;x&quot;) + ggtitle(&quot;dotplot for GOBP&quot;)p2 &lt;- dotplot(kk, showCategory = 5, orderBy = &quot;x&quot;) + ggtitle(&quot;dotplot for KEGG&quot;)pp &lt;- plot_grid(p1, p2, ncol = 1)ggsave(p1, filename = &quot;plot/GO_enrichment.pdf&quot;)ggsave(p2, filename = &quot;plot/KEGG_enrichment.pdf&quot;) 四、分析结果 筛选差异基因，提取 | log2(foldchange) | &gt; 1.5，p_value&lt;0.05 的差异基因共 2599 个，上调基因共 947 个（log2(foldchange)&gt;=0），下调基因 1652 个（log2(foldchange)&lt;0） 上下调基因数目比较​ 按照 foldchange 的值由高到低进行排序，取 Top50 的差异基因，绘制热图。发现 set1_NonoKO_D0 和 set2_NonoKO_D0 的基因特征比较类似，而 set2_WT_D0 的上调基因含量过于高了，不确定是样本问题。NonoKO 细胞的 Mid1、Maf、Pcdh18 等众多基因下调，而 Hist1h2ah、Ftl1、Hprt 基因上调。 Top50差异基因在各样本的表达量​ ​ 进行 GO 富集和 KEGG 富集分析 GO的Biological process富集分析​ KEGG富集分析​ 通过 GO 的 Biological process 富集分析，发现这些差异基因主要在 epithelial tube morphogenesis、renal system development、mesenchyme development、kidney development、mesenchymal cell differentiation 富集 通过 KEGG 富集分析，这些差异基因主要在 Proteoglycans in cancer、Focal adhesion、Axon guidance、ECM-receptor interaction、Basal cell carcinoma 等代谢途径富集 五、存在的问题 trim_galore 过滤双端数据的时候，忘记加–paired 参数，发现 trim_galore 过滤双端数据生成的最终文件不是 trimed.fq.gz，而是 val_1.fq.gz 和 val_2.fq.gz. 一开始不明白 cuffdiff 的 gene_exp.diff 其中的 foldchange 是怎么计算的，四个样本输进去后会有 6 个组的比较，也就是说所有样本之间都进行比较了，包括 set1 的 WT 组和 set2 的 WT 组。后来经过助教的指导才发现自己没看仔细 cuffdiff 的使用规则，同一组的不同重复用逗号分割，不同组间应该用空格分割，说明无论做什么事情还是要仔细，不要一开始就犯错，理解有问题。 cuffdiff计算两组间的差异基因，却出现6组比较​​ cuffdiff 的 log（foldchange）是 sample2/sample1，log（foldchange）&gt;0 代表 gene 在 sample2 中上调，log（foldchange）&lt;0 代表 gene 在 sample2 中下调。开始运行 cuffdiff 的时候，没有注意输入顺序，把 KO 放在了 WT 前面，造成上下调基因输出相反。 本次实验的样本量太少，set1 和 set2 同一组的 WT 小鼠的基因表达量差异也很大，GO 富集和 KEGG 富集分析的结果并不能说明什么，需要扩大样本量找到的差异基因才更有说服力。 ‍","tags":["作业","组学分析","生信"],"categories":["技术博客"]},{"title":"PSSM矩阵计算","path":"/posts/134ab329.html","content":"PSSM（Position-Specific Scoring Matrix）是从MSA中构建的，实际上就是相同长度的一组序列根据各个位点氨基酸（碱基）频率计算得到的权值矩阵，是许多motif寻找软件的组成部分。 详细介绍见wiki：Position weight matrix - Wikipedia PSSM就是一个打分矩阵，这个分数呢，可以是频数（PFM）、频率(PPM)、也可以是log-odds(PWM)。 计算过程解释 其典型计算过程为（以碱基为例）： 1. 计算PFM(Position Frequency Matrix) 从多序列比对MSA中，计算每个位点不同碱基的出现次数 GAGGTAAAC TCCGTAAGT CAGGTTGGA ACAGTCAGT TAGGTCATT TAGGTACTG ATGGTAACT CAGGTATAC TGTGTGAGT AAGGTAAGT 得到PFM： 1 2 3 4 5 6 7 8 9 A 3 6 1 0 0 6 7 2 1 C 2 2 1 0 0 2 1 1 2 G 1 1 7 10 0 1 1 5 1 T 4 1 1 0 10 1 1 2 6 2. 基于氨基酸频数计算PPM（Position Probability Matrix） 直接基于频数算频率 Column 1: fA,1=310=0.3,fC,1=210=0.2,…f_{A, 1}=\\frac{3}{10}=0.3, f_{C, 1}=\\frac{2}{10}=0.2, \\ldotsfA,1​=103​=0.3,fC,1​=102​=0.2,… Column 2: fA,2=610=0.6,fC,2=210=0.2,…f_{A, 2}=\\frac{6}{10}=0.6, f_{C, 2}=\\frac{2}{10}=0.2, \\ldotsfA,2​=106​=0.6,fC,2​=102​=0.2,… … 1 2 3 4 5 6 7 8 9 A 0.3 0.6 0.1 0.0 0.0 0.6 0.7 0.2 0.1 C 0.2 0.2 0.1 0.0 0.0 0.2 0.1 0.1 0.2 G 0.1 0.1 0.7 1.0 0.0 0.1 0.1 0.5 0.1 T 0.4 0.1 0.1 0.0 1.0 0.1 0.1 0.2 0.6 为了解决有些氨基酸类型出现为0的情况，可以给分子、分母增加pseudo-counts： Column 1: fA,1′=3+110+4=0.29,fC,1′=2+110+4=0.21,…f_{A, 1}^{\\prime}=\\frac{3+1}{10+4}=0.29, f_{C, 1}^{\\prime}=\\frac{2+1}{10+4}=0.21, \\ldotsfA,1′​=10+43+1​=0.29,fC,1′​=10+42+1​=0.21,… Column 2: fA,2′=6+110+4=0.50,fC,2′=2+110+4=0.21,…f_{A, 2}^{\\prime}=\\frac{6+1}{10+4}=0.50, f_{C, 2}^{\\prime}=\\frac{2+1}{10+4}=0.21, \\ldotsfA,2′​=10+46+1​=0.50,fC,2′​=10+42+1​=0.21,… … 1 2 3 4 5 6 7 8 9 A 0.29 0.50 0.14 0.07 0.07 0.50 0.57 0.21 0.14 C 0.21 0.21 0.14 0.07 0.07 0.21 0.14 0.14 0.21 G 0.14 0.14 0.57 0.79 0.07 0.14 0.14 0.43 0.14 T 0.36 0.14 0.14 0.07 0.79 0.14 0.14 0.21 0.50 3. 计算位点权值矩阵PWM（Position Weight Matrix） Si,j=log⁡fi,j′PiS_{i, j}=\\log \\frac{f_{i, j}^{\\prime}}{P_i} Si,j​=logPi​fi,j′​​ 即前景概率除以背景概率（odds），再用log算权值（log-odds），计算的权值能体现出位点出现该碱基（氨基酸）的优势比。 优势、优势比为什么需要log2转换？ (qq.com) PiP_iPi​ 为相应碱基（氨基酸）类型在随机序列中出现的期望频率 为了图方便最简单的模型会假设各碱基（氨基酸）出现频率一致，对于氨基酸为 Pi=120=0.05P_i=\\frac{1}{20}=0.05Pi​=201​=0.05 ，对于核苷酸为: Pi=14=0.25P_i=\\frac{1}{4}=0.25Pi​=41​=0.25 实际使用，可以把数据集里的所有序列（不仅仅是motif）的碱基（氨基酸）出现频率手动计算一遍。 这里就简单假设各碱基（氨基酸）出现频率一致 使用单纯频率的PPM，则PWM为 1 2 3 4 5 6 7 8 9 A 0.26 1.26 -1.32 -inf -inf 1.26 1.49 -0.32 -1.32 C -0.32 -0.32 -1.32 -inf -inf -0.32 -1.32 -1.32 -0.32 G -1.32 -1.32 1.49 2.0 -inf -1.32 -1.32 1.00 -1.32 T 0.68 -1.32 -1.32 -inf 2.0 -1.32 -1.32 -0.32 1.26 使用加上pesudo-count的PPM，则PWM为 1 2 3 4 5 6 7 8 9 A 0.19 1.00 -0.81 -1.81 -1.81 1.00 1.19 -0.22 -0.81 C -0.22 -0.22 -0.81 -1.81 -1.81 -0.22 -0.81 -0.81 -0.22 G -0.81 -0.81 1.19 1.65 -1.81 -0.81 -0.81 0.78 -0.81 T 0.51 -0.81 -0.81 -1.81 1.65 -0.81 -0.81 -0.22 1.00 以上为典型的PSSM计算步骤，但是在具体实践上，不同的软件可能会对细节进行修改，从而得到的PSSM并不一样，如PSI-BLAST会采用BLOSUM62处理pseudo-counts问题。 另外，PSSM不处理MSA中位点插入和删除的情况。 使用Python实现 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697import pandas as pdimport numpy as npclass PSSM(): ALPHABET = dict( DNA = [&#x27;A&#x27;, &#x27;C&#x27;, &#x27;G&#x27;, &#x27;T&#x27;], RNA = [&#x27;A&#x27;, &#x27;C&#x27;, &#x27;G&#x27;, &#x27;U&#x27;], AA = [&#x27;A&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;, &#x27;G&#x27;, &#x27;H&#x27;, &#x27;I&#x27;, &#x27;K&#x27;, &#x27;L&#x27;, &#x27;M&#x27;, &#x27;N&#x27;, &#x27;P&#x27;, &#x27;Q&#x27;, &#x27;R&#x27;, &#x27;S&#x27;, &#x27;T&#x27;, &#x27;V&#x27;, &#x27;W&#x27;, &#x27;Y&#x27;] ) def __init__(self, file_path: str, alphabet_type: str) -&gt; None: &quot;&quot;&quot;Initialize PSSM object. file_path: path of aln file alphabet_type: DNA, RNA, AA &quot;&quot;&quot; self.file_path = file_path self.alphabet_type = alphabet_type self.characters = self.ALPHABET[alphabet_type] @property def seqs(self) -&gt; list: &quot;&quot;&quot; read fasta file and return seq list &quot;&quot;&quot; fa_dict = &#123;&#125; with open(self.file_path, mode=&#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as f: for line in f: line = line.strip() if line.startswith(&#x27;&gt;&#x27;): name = line[1:] fa_dict[name] = &#x27;&#x27; else: fa_dict[name] += line return [seq for seq in fa_dict.values()] @property def seq_length(self) -&gt; int: &quot;&quot;&quot; return the width of pssm &quot;&quot;&quot; return len(self.seqs[0]) @property def PFM(self) -&gt; np.ndarray: &quot;&quot;&quot; return the PFM &quot;&quot;&quot; pfm = np.zeros((len(self.characters), self.seq_length), dtype=int) for j, seq in enumerate(zip(*self.seqs)): for i in range(len(self.characters)): pfm[i][j] = seq.count(self.characters[i]) pfm = pd.DataFrame(pfm, index=self.characters, columns=range(1, self.seq_length+1)) return pfm @property def PPM(self) -&gt; np.ndarray: &quot;&quot;&quot; return the PPM &quot;&quot;&quot; ppm = (self.PFM+1) / (len(self.seqs)+len(self.characters)) return round(ppm, 4) @property def PWM(self) -&gt; np.ndarray: &quot;&quot;&quot; return the PWM &quot;&quot;&quot; pwm = np.log2(self.PPM / len(self.characters)**(-1)) return round(pwm, 4) @property def consensus(self) -&gt; str: &quot;&quot;&quot; return the consensus sequence &quot;&quot;&quot; consensus = &#x27;&#x27; for j in range(self.seq_length): consensus += self.characters[np.argmax(self.PFM.iloc[:, j])] return consensus @property def ic(self) -&gt; float: &quot;&quot;&quot; return the information content for each position &quot;&quot;&quot; ic = np.sum(self.PWM * self.PPM, axis=0) return round(ic, 4) if __name__ == &#x27;__main__&#x27;: pssm = PSSM(&#x27;./input/demo.fa&#x27;, &#x27;DNA&#x27;) print(pssm.PFM) print(pssm.PPM) print(pssm.PWM) print(pssm.consensus) print(pssm.ic) # pssm.seqlogo #todo 画weblogo WebLogo - Create Sequence Logos (berkeley.edu) ​ ‍","tags":["作业"],"categories":["技术博客"]},{"title":"用Python实现Needleman-Wunsch和Smith-Waterman算法","path":"/posts/be13a22e.html","content":"Python实现 阿巛同学第一次较好的封装 用Python实现Needleman-Wunsch和Smith-Waterman算法https://github.com/Achuan-2/python_beginner/tree/main/seqAlignment 简单介绍 Needleman-Wunsch和Smith-Waterman算法都是Pairwise alignment算法，用于双序列比对。 Needleman-Wunsch是全局序列比对算法，最终会得到2条序列在全局上最佳的匹配结果（e.g. 最多的match数量、最高的比对得分、最高的identity） Smith-Waterman是局部序列比对算法，最终得到的是2条序列在局部的最佳匹配片段（注意：即挑选出得分最高的比对片段） 算法实现介绍 两个算法都是用了动态规划算法，什么叫动态规划呢。先思考下，若我们想要得到两条序列间最佳比对结果的话，你会怎么解决，穷举法？但是此方法需要穷举的次数随着序列长度的增加而不断增大，而且要考虑两条序列在哪里插入空位，比对结果的长度范围为n(两条序列完全匹配上)-2n(两条序列均对到空位)。 比对序列的长度越长，需要穷举的次数越多，这对我们来说将会耗时很多，这是不太现实的。所以我们需要一种新的方法进行比对——动态规划。动态规划算法是一种求取最优解的方法，该方法通过将问题拆解为若干子问题，求取子问题的最优解，所有子问题的最优解合并即为全局最优解。 下面具体介绍下两种算法的细节。 这两个算法都是先建立一个打分矩阵，考虑每个cell从各个方向的来源得分，记录最大得分的来源，最后按照规则回溯，从而得到比对结果。 来源方向 来源方向有三个：横着来的horizontal，竖着来的vertical，对角线来的diagonal，其中horizontal，vertical对于gap，而diagonal对应mismatch和match（diagonal来源的比对可以是确实比对上，也可以是强行比对）。 ​ 打分矩阵 对于全局比对的Needleman-Wunsch算法而言：就考虑来自三个方向的分数情况，记录最大得分的来源 ​ 而对于局部比对的Smith-Waterman算法而言：还需要考虑得分&gt;=0，如果得分少于0，则不记录方向。 Attention! 对于diagonal方向的得分，有两种方式 一种就是看两个碱基match不match，match就+x分，mismatch就-y分 一种是替代矩阵M，M[A][B]为得分，经典的替代矩阵AM250和BLOSUM62，其中PAM250是基于高同源序列构建，BLOSUM62基于远程同源序列构建，因此寻找远程同源序列一般用BLOSUM62。 对于vertical和horizonal方向的**罚分，**也有流行的两种方式 一种是线性罚分，出现一个gap，我就扣k分 举例，设置gap_open=-2。连续出现三个gap的罚分就是−2×3=−6-2\\times3=-6−2×3=−6 另一种叫affine gap penalty，翻译叫仿射罚分，即在打开第一个gap的时候引入gap open罚分，而在该gap的基础上进行延续则采用gap extension罚分。之所以这样做，相比从生物学原理来说，应该更倾向于仅出现一段长gap而不是多个短gap。 举例，设置gap_open=-2,gap_extension=-1。连续出现三个gap的罚分就是−2+(3−1)×−1=−4-2+(3-1)\\times-1=-4−2+(3−1)×−1=−4 回溯 Needleman-Wunsch就是头对头、尾对尾算法，所以会从最右下角进行回溯 ​ Smith-Waterman只考虑找出最大得分的比对结果，所以会找出最高分的位置，开始回溯，直到cell的分数为0结束 Question： 回溯时，横着和竖着的方向代表存在gap，那怎么知道gap是在哪条序列上呢？ Answer：看方向，垂直箭头的那个序列，就在对应碱基前加一个gap。比如横着的箭头，说明左侧的seq存在gap，竖着的箭头，则是顶部的seq存在gap。 总结 Needleman-Wunsch Smith-Waterman 比对方式 全局比对 局部比对 初始化得分矩阵 第0行和第0列置GAP罚分 行列全部置0 得分方式 允许负分 负分置0 回溯方式 右下角-&gt;左上角 最高分开始-&gt;位点分数为0结束","tags":["作业","生信"],"categories":["技术博客"]},{"title":"【Github】cdn jsdelivr加速使用方法","path":"/posts/8b29a079.html","content":"前排 2022 年 4 月 28 日遭到 DNS 污染，自此大陆无法正常访问 jsDelivr，导致大批网站工作失常。jsDelivr 进出大陆的始末详见 【杂谈】jsDelivr域名遭到DNS污染。 2023 年 9 月 25日发现已可以使用，但是不再推荐使用jsdelivr用来加速图床，如果图床选用GitHub，建议不要cdn加速，图片链接直接用原本链接，起码能保证图片不失效。 基本使用方法 ​https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@branch/文件路径​ 1234567891011121314151617181920// 加载任何Github发布、提交或分支https://cdn.jsdelivr.net/gh/user/repo@version/file// 加载 jQuery v3.2.1https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js// 指定仓库的分支https://cdn.jsdelivr.net/gh/Achuan-2/PicBed@pic// 使用版本范围而不是特定版本https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js // 完全省略该版本以获取最新版本https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js // 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js // 在末尾添加 / 以获取资源目录列表https://cdn.jsdelivr.net/gh/jquery/jquery/ 注意： jsDelivr 不支持加载超过 20M 的资源 jsDelivr 只要加载过一次后，就会永久缓存，就算源码、原图片被删除，还是能加载！(好处是不怕丢，坏处是删不掉 😳） 版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源 补充： ‍ CDN 是一组分布在多个不同地方的 WEB 服务器，可以更加有效的向用户提供资源，会根据距离的远近来选择 。使用户能就近的获取请求数据，解决网络拥堵，提高访问速度，解决由于网络带宽小，用户访问量大，网点分布不均等原因导致的访问速度慢的问题。 cdn 请求分发原理 （1）用户向浏览器提供需要访问的域名； （2）浏览器调用域名解析库对域名进行解析，由于 CDN 对域名解析过程进行了调整，所以解析函数库一般得到的是该域名对应的 CNAME 记录，为了得到实际的 IP 地址，浏览器需要再次对获得的 CNAME 域名进行解析以得到实际的 IP 地址；在此过程中，使用的全局负载均衡 DNS 解析。如根据地理位置信息解析对应的 IP 地址，使得用户能就近访问； （3）此次解析得到 CDN 缓存服务器的 IP 地址，浏览器在得到实际的 ip 地址之后，向缓存服务器发出访问请求； （4）缓存服务器根据浏览器提供的要访问的域名，通过 Cache 内部专用 DNS 解析得到此域名的实际 IP 地址，再由缓存服务器向此实际 IP 地址提交访问请求； （5）缓存服务器从实际 IP 地址得到内容以后，一方面在本地进行保存，以备以后使用，二方面把获取的数据放回给客户端，完成数据服务过程； （6）客户端得到由缓存服务器返回的数据以后显示出来并完成整个浏览的数据请求过程。 ‍","tags":["Github","图床"],"categories":["技术博客"]},{"path":"/baidu_verify_code-cAW5DndWPk.html","content":"27736e647c1c61ccae4424c75c50dc1f"},{"title":"About","path":"/about/index.html","content":"Self-Introduction xxxx Educational experience 2022年9月-Now复旦大学 脑科学转化研究院 神经生物学专业2018年9月-2022年6月华中科技大学 生命科学与技术学院 生物信息学专业2015年9月-2018年6月福建省霞浦县第一中学2012年9月-2015年6月福建省宁德市霞浦县第十七中学2009年9月-2012年6月福建省宁德市霞浦县水潮小学2007年9月-2009年6月福建省泉州市丰泽区环清小学 Contact Email: achuan-2@outlook.com Wechat: achuan1037"},{"path":"/css/scrollbar.css","content":"/* from https: //github.com/weekdaycare/weekdaycare.github.io/blob/main/css/scrollbar.css */ /* 滚动条 */ ::-webkit-scrollbar { width: 8px; height: 8px; } ::-webkit-scrollbar-track { background-color: rgba(200, 155, 155, 0); border-radius: 2em; } ::-webkit-scrollbar-thumb { background-color: #c3c0c1 !important; /* background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent) !important; */ border-radius: 2em; } ::-webkit-scrollbar-corner { background-color: transparent; } [data-theme=\"dark\"] ::-webkit-scrollbar-thumb { background-color: #1f1f1f !important; }"},{"title":"说说","path":"/shuoshuo/index.html","content":""},{"path":"/google6abe3caffe3fcfdb.html","content":"google-site-verification: google6abe3caffe3fcfdb.html"},{"path":"/css/font.css","content":":root { --width-left: 288px; --width-main: 720px; --gap-l: 16px; --gap-p: 1rem; --gap-p-compact: 0.75rem; } @media screen and (min-width: 2048px) { :root { --gap-l: 32px; --width-left: 352px; --width-main: 780px; } } @media screen and (min-width: 2560px) { :root { --width-main: 860px; --gap-l: 64px; } } @media screen and (max-width: 768px) { :root { --width-left: 252px; } } @media screen and (max-width: 667px) { :root { --width-left: 288px; } } :root { --site-bg: #f9fafb; --card: #fff; --block: #f1f2f3; --block-border: #e3e5e8; --block-hover: #e9eaec; --text-p0: #000; --text-p1: #333; --text-p2: #4d4d4d; --text-p3: #808080; --text-p4: #999; --text-meta: #ccc; --text-code: #36a5a4; } @media (prefers-color-scheme: dark) { :root { --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --text-p0: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #ff6333; } } @media screen and (prefers-color-scheme: dark) and (max-width: 667px) { :root { --site-bg: #000; } } pre { font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, 'Courier New', monospace, sans-serif; font-size: 0.8125rem; tab-size: 4; -moz-tab-size: 4; -o-tab-size: 4; -webkit-tab-size: 4; } table:not([class]) { border-collapse: collapse; overflow: auto; display: block; margin: 1rem 0; max-width: 100%; vertical-align: text-top; font-size: 0.875rem; } table:not([class]) th { background: var(--block); } table:not([class]) td, table:not([class]) th { padding: 0.5em 1em; border: 1px solid var(--block-hover); line-height: 1.5; } table:not([class]) tr { word-break: keep-all; white-space: nowrap; } table:not([class]) tr:hover { background: var(--block); } blockquote { display: block; margin-left: 0; margin-right: 0; padding: 0.25rem 0.75rem; background: var(--block); border-left: 4px solid var(--text-meta); border-radius: 4px 6px 6px 4px; color: var(--text-p2); } :root { --blur-px: 12px; --blur-bg: rgba(255, 255, 255, 0.5); } @media (prefers-color-scheme: dark) { :root { --blur-bg: rgba(0, 0, 0, 0.5); } } .blur { background: var(--blur-bg); } @supports ( (-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px))) ) { .blur { background: var(--blur-bg) !important; backdrop-filter: saturate(200%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(200%) blur(var(--blur-px)); } } .blur:hover { background: var(--card); } @-moz-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-webkit-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-o-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } .dis-select { -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; } .mobile-only { display: none; } @media screen and (max-width: 667px) { .mobile-only { display: block !important; } } @media screen and (max-width: 667px) { .mobile-hidden { display: none !important; } } .float-panel { position: sticky; right: 0; bottom: 2rem; float: right; z-index: 10; display: flex; border-radius: 2rem; margin-right: 1rem; overflow: hidden; --blur-px: 16px; --blur-bg: rgba(255, 255, 255, 0.4); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } @media (prefers-color-scheme: dark) { .float-panel { --blur-bg: rgba(0, 0, 0, 0.4); } } .sidebar-toggle.mobile { cursor: pointer; color: var(--text-p0); background: none; padding: 0.5rem; line-height: 0; font-size: 20px; margin: 0; } .l_body.mobile.sidebar .float-panel { box-shadow: 0 4px 8px 0px rgba(0, 0, 0, 0.1); transform: translateY(-2px); } .l_body.mobile.sidebar .sidebar-toggle.mobile { background: var(--card); color: #7e57c2; border-color: var(--block-border); } code { -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; } p > code:not([class]), li > code:not([class]) { font-size: 85%; background: #f3f4f4 !important; box-shadow: #e7eaed 0px 0px 0px 1px; border-radius: 4px; color: var(--text-code); border: #babfc4 !important; padding: 0px 0.5em !important; } .md-text .highlight, pre:not([class]):has(> code) { margin: var(--gap-p) 0; border-radius: 12px; overflow: hidden; background: var(--block); line-height: 1.5; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, 'Courier New', monospace, sans-serif; box-sizing: border-box; } @media screen and (min-width: 500px) { .md-text .highlight, pre:not([class]):has(> code) { min-width: 180px; } } .md-text .highlight { position: relative; overflow: auto; display: block; } .md-text .highlight figcaption { color: var(--text-p2); font-size: 0.8125rem; font-weight: 500; margin-left: 0.5rem; display: inline-block; } .md-text .highlight figcaption span { padding: 4px 0.5rem; display: block; border-bottom-left-radius: 6px; border-bottom-right-radius: 6px; background: var(--block-hover); } .md-text .highlight > table { overflow: auto; display: block; margin: 0 !important; background: transparent; border: none; } .md-text .highlight > table td, .md-text .highlight > table th { padding: 0; border: none; line-height: 1.5; } .md-text .highlight > table::-webkit-scrollbar { height: 4px; width: 4px; } .md-text .highlight > table::-webkit-scrollbar-track-piece { background: transparent; } .md-text .highlight > table::-webkit-scrollbar-thumb { background: transparent; cursor: pointer; border-radius: 6px; } .md-text .highlight > table:hover::-webkit-scrollbar-thumb { background: var(--text-meta); } .md-text .highlight > table:hover::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .md-text .highlight > table tr { background: transparent; } .md-text .highlight > table tr:hover { background: transparent; } .md-text .highlight .gutter { pointer-events: none; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; text-align: right; padding: 0 1em; border-width: 0; margin-left: 0; left: 0; z-index: 1; } .md-text .highlight .gutter pre .line { color: var(--text-p4); } .md-text .highlight .code pre { display: block; padding: 0.5em 1rem; } .md-text .highlight .gutter + .code pre { padding-left: 0.25em; } .md-text .gist .gist-file { border: 1px solid var(--block-border); border-radius: 12px; } .md-text .gist .gist-data { border-bottom: 1px solid var(--block-border); } .md-text .gist .highlight { display: inherit; border: none; border-radius: 0; background: none; margin: 0; padding: 1em 0; } .md-text .gist .gist-meta { background: var(--block-border); } table:not([class]) { border-collapse: collapse; } .md-text pre > .caption { color: var(--text-p3); } .md-text pre > .hljs { padding: 1rem; border-radius: 12px; line-height: 1.5; box-sizing: border-box; } .md-text .highlight .code { vertical-align: top; } * { outline: none; } body { background: var(--site-bg); margin: 0; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-rendering: optimizelegibility; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); } div.lazy.img { width: 100%; height: 100%; background-position: center; background-size: cover; } input { background: none; border: none; } input.copy-area { display: block; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; font-size: 0.75rem; font-weight: 700; color: var(--text-p3); } svg.loading { display: block; position: absolute; color: var(--text-p3); z-index: -1; width: 100%; height: 2rem; margin: auto; animation: spin infinite 2s; animation-timing-function: linear; } @-moz-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-webkit-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-o-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } .loading-wrap { margin: 0; text-align: center; background: var(--block); border-radius: 12px; position: relative; padding: 2rem; } .loading-wrap svg { margin: 4px; } .loading-wrap:after { content: '∠( ᐛ 」∠)＿'; color: var(--text-p1); display: block; font-size: 14px; } .loading-wrap.error:after { content: 'Σ(っ °Д °;)っ'; } pre:not([class]):has(> code) { display: block; padding: 1rem; overflow: auto; } pre:not([class]):has(> code) code { padding: 0; } span.dot, span.sep { font-size: 0.9em; margin: 0 0.25em; } span.dot:before { content: '·'; font-weight: 900; } span.sep:before { content: '/'; padding-left: 2px; padding-right: 2px; } svg.icon { width: 1em; height: 1em; vertical-align: middle; fill: currentColor; overflow: hidden; } h1, .h1 { font-size: 1.75rem; font-weight: 700; } @media screen and (max-width: 500px) { h1, .h1 { font-size: 1.75rem; } } h2, .h2 { font-size: 1.5rem; } h3, .h3 { font-size: 1.375rem; } h4, .h4 { font-size: 1.125rem; } h5 { font-size: 0.9375rem; } h6 { font-size: 0.75rem; } .fs14 { font-size: 0.875rem; } .fs14 p { font-size: 0.875rem !important; } .fs14 li { font-size: 0.875rem !important; } .fs12 { font-size: 0.75rem; } .widgets .post-title { margin: 0.75rem 0; line-height: 1.2; display: block; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .widgets .post-title .cap { margin-bottom: 2px; opacity: 0.5; } .widgets .post-title a { color: inherit; font-weight: 500; } .widgets .post-title a:hover { color: #7e57c2; } div.toast { max-width: 60%; padding: 1rem 3rem; line-height: 1.5; color: var(--text-p1); font-weight: 500; text-align: center; border-radius: 12px; background: var(--card); position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 9; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; box-shadow: 0 4px 8px 0px rgba(0, 0, 0, 0.1); } :root { --heo-none: rgba(0, 0, 0, 0); --heo-main: var(--theme-link); --heo-snackbar-time: 5s; --heo-theme-none: rgba(66, 89, 239, 0.004); --heo-background: var(--site-bg); --heo-hovertext: var(--text-code); --heo-secondtext: var(--text-p0); --heo-scrollbar: rgba(60, 60, 67, 0.4); --heo-secondbg: var(--block); --heo-card-bg: var(--block); --heo-card-bg-none: rgba(255, 255, 255, 0); --heo-card-border: var(--block-border); --heo-shadow-border: 0 8px 16px -4px rgba(44, 45, 48, 0.047); --style-border: 1px solid var(--heo-card-border); --style-border-always: 1px solid var(--heo-card-border); } .post-TianliGPT { background: var(--block); border-radius: 12px; padding: 12px; line-height: 1.3; border: var(--style-border-always); margin: 16px 0; } @media screen and (max-width: 768px) { .post-TianliGPT .post-TianliGPT { margin-top: 22px; } } .tianliGPT-title { display: flex; color: var(--theme-link); border-radius: 8px; align-items: center; padding: 0 12px; cursor: default; user-select: none; } .tianliGPT-title-text { font-weight: bold; margin-left: 8px; line-height: 1; } .tianliGPT-explanation { margin-top: 12px; padding: 8px 12px; background: var(--card); border-radius: 8px; border: var(--style-border-always); font-size: 15px; line-height: 1.4; display: flex; } .tianliGPT-suggestions { display: flex; flex-wrap: wrap; } .tianliGPT-suggestions .tianliGPT-suggestions-item { margin-top: 12px; padding: 8px 12px; background: var(--card); border-radius: 8px 8px 8px 0; border: var(--style-border-always); font-size: 15px; line-height: 1.4; display: flex; width: fit-content; margin-right: 12px; cursor: pointer; transition: 0.3s; } .tianliGPT-suggestions .tianliGPT-suggestions-item:hover { background: var(--heo-main); color: var(--text-p0); } .blinking-cursor { background-color: var(--heo-main); width: 10px; height: 16px; display: inline-block; vertical-align: middle; animation: blinking-cursor 0.5s infinite; -webkit-animation: blinking-cursor 0.5s infinite; margin-left: 4px; } .tianliGPT-tag { font-size: 12px; background-color: var(--theme-link); color: var(--card); font-weight: bold; border-radius: 4px; margin-left: auto; line-height: 1; padding: 4px; display: flex; align-items: center; justify-content: center; cursor: pointer; transition: 0.3s; } .tianliGPT-tag:hover { background: var(--text-p2); color: var(--card); } ins.adsbygoogle { margin: 16px 0; background: var(--card); border-radius: 12px; overflow: hidden; border: var(--style-border-always); } #tianliGPT-Toggle { font-size: 12px; background: var(--theme-link); color: var(--card); padding: 4px; border-radius: 4px; margin-left: 6px; transform: scale(0.8); cursor: pointer; transition: 0.3s; font-weight: bold; } #tianliGPT-Toggle:hover { background: var(--block-hover); color: var(--card); } .tianliGPT-title-icon { width: 20px; height: 20px; } .tianliGPT-title-icon svg { width: 20px; height: 20px; fill: var(--heo-main); } .tianliGPT-title-icon svg path { fill: var(--heo-main); } @-moz-keyframes blinking-cursor { 0% { opacity: 1; } 40% { opacity: 1; } 50% { opacity: 0; } 90% { opacity: 0; } 100% { opacity: 1; } } @-webkit-keyframes blinking-cursor { 0% { opacity: 1; } 40% { opacity: 1; } 50% { opacity: 0; } 90% { opacity: 0; } 100% { opacity: 1; } } @-o-keyframes blinking-cursor { 0% { opacity: 1; } 40% { opacity: 1; } 50% { opacity: 0; } 90% { opacity: 0; } 100% { opacity: 1; } } @keyframes blinking-cursor { 0% { opacity: 1; } 40% { opacity: 1; } 50% { opacity: 0; } 90% { opacity: 0; } 100% { opacity: 1; } } .md-text .article-footer { margin-top: 4rem; padding: 1rem; background: var(--block); border-radius: 12px; border: 1px solid var(--block-border); } .md-text .article-footer:empty { display: none; } .md-text .article-footer .header { font-weight: 500; color: var(--text-p2); font-size: 1.125rem; } .md-text .article-footer .body input.copy-area { margin: 0.75rem 0; padding: 0; width: 100%; } .md-text .article-footer .body p { color: var(--text-p2); margin: 0.5em 0; } .md-text .article-footer .body p a { font-weight: unset; } .md-text .article-footer .body ul { margin: 0; overflow: hidden; } .md-text .article-footer .body .post-title { margin: 0.5rem 0; line-height: 1.2; word-break: break-all; } .md-text .article-footer section + section { margin-top: 1rem; padding-top: 1rem; border-top: 1px solid var(--block-border); } .md-text .article-footer .social-wrap { grid-gap: 0.5rem 1rem; margin: 0; } .md-text .article-footer .qrcode { width: 128px; padding: 4px; background: #fff; border-radius: 4px; box-shadow: 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 0 32px 0px rgba(0, 0, 0, 0.1); overflow: hidden; transition: height 0.2s ease-out; -moz-transition: height 0.2s ease-out; -webkit-transition: height 0.2s ease-out; -o-transition: height 0.2s ease-out; } .md-text .article-footer .qrcode img { object-fit: contain; } .md-text .article-footer .qrcode.display { margin: 2rem auto 1rem; height: 128px !important; visibility: visible !important; } .bread-nav { padding: 0.25rem 1rem 0; color: var(--text-p3); font-weight: 500; } .bread-nav div#breadcrumb { display: flex; align-items: center; flex-direction: row; } .bread-nav div#breadcrumb:not([style]) a { color: var(--theme-link); } .bread-nav div#breadcrumb[style] a { color: inherit; } .bread-nav div#breadcrumb span.sep { color: var(--text-p3); } .bread-nav div#breadcrumb a.cap:hover { color: #7e57c2; } .bread-nav div#post-meta { margin-top: 2px; } .l_cover { height: 100vh; text-align: center; display: flex; flex-direction: column; justify-content: center; align-items: center; position: relative; } .l_cover.post { height: inherit; } .l_cover .cover-wrap { margin-bottom: 0; display: flex; flex-direction: column; justify-content: center; align-items: center; } .l_cover .cover-wrap .cover-title { font-weight: 700; font-size: 1.5rem; margin: 1rem 0; line-height: 1.2; } .l_cover .cover-wrap .description { margin: 1rem 0; } .l_cover .cover-wrap .start-wrap { margin: 2rem 0; flex-shrink: 0; } .l_cover .cover-wrap .start-wrap a.start { display: inline-block; } .l_cover.post .cover { z-index: -1; width: 100%; height: 30vh; max-width: 2048px; min-height: 150px; max-height: 400px; } @media screen and (max-width: 768px) { .l_cover.post .cover { height: 25vh; } } @media screen and (max-width: 500px) { .l_cover.post .cover { height: 20vh; } } @media screen and (min-width: 2048px) { .l_cover.post .cover { margin-top: 4rem; } .l_cover.post .cover .img { border-radius: 2rem; } } .l_cover.post .cover-wrap { z-index: 1; } .l_cover.post .cover-wrap .article-title { text-align: center; padding: 1rem; margin: 1em 0 0 0; } @media screen and (min-width: 2048px) { .l_cover.post .cover-wrap .article-title { font-size: 3rem; } } .l_cover.wiki .cover-wrap { max-width: 500px; } .l_cover.wiki .cover-wrap .preview { margin-bottom: 2rem; } .l_cover.wiki .cover-wrap .preview img { object-fit: contain; max-height: 35vh; max-width: 100%; } @media screen and (max-width: 500px) { .l_cover.wiki .cover-wrap .preview img { max-width: 60%; } } .l_cover.wiki .cover-wrap .cover-title:first-child { font-size: 3rem; } .page-footer { margin: 4rem 1rem 3rem; color: var(--text-p3); } .page-footer a { color: var(--text-p3); } .page-footer a:hover { color: #7e57c2; } .page-footer .sitemap { margin: 0.5rem 0 2rem; display: grid; scrollbar-width: none; grid-gap: 1rem 1rem; grid-auto-flow: column dense; overflow: scroll; } .page-footer .sitemap::-webkit-scrollbar { height: 0; width: 0; } .page-footer .sitemap::-webkit-scrollbar-track-piece { background: transparent; } .page-footer .sitemap::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .page-footer .sitemap::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .page-footer .sitemap .sitemap-group { display: flex; flex-direction: column; align-items: flex-start; } .page-footer .sitemap .sitemap-group > span, .page-footer .sitemap .sitemap-group > a { text-decoration: none; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .page-footer .sitemap .sitemap-group > span { margin: 0.5rem 0; font-weight: 500; color: var(--text-p1); } .page-footer .sitemap .sitemap-group > a { margin: 0.2rem 0; } .page-footer .text p { margin: 4px 0; line-height: 1.5; } .page-footer .text a:not([class]) { text-decoration: underline; font-weight: 500; } .nav-wrap { position: sticky; position: -webkit-sticky; margin-top: -0.5rem; top: -2px; background: var(--site-bg); padding: 0 1rem; z-index: 8; margin-bottom: 1px; } .nav-wrap:after { content: ''; width: calc(100% - 2 * 1rem); height: 2px; border-radius: 2px; position: absolute; bottom: 0; left: 1rem; background: var(--block-hover); } nav.cap { display: flex; overflow: scroll visible; } nav.cap::-webkit-scrollbar { height: 0; width: 0; } nav.cap::-webkit-scrollbar-track-piece { background: transparent; } nav.cap::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } nav.cap::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } nav.cap > p { margin: 0; } nav.cap a { padding: 0.25rem 1rem; margin: 10px 0 8px 0; line-height: 2; color: var(--text-p3); border-radius: 4px; font-weight: 500; white-space: nowrap; position: relative; z-index: 1; } nav.cap a:after { height: 2px; position: absolute; bottom: -8px; left: 1rem; right: 1rem; background: #f4511e; border-radius: 2px; pointer-events: none; } nav.cap a:hover { background: var(--block-hover); } nav.cap a.active, nav.cap a:hover { color: var(--text-p1); } nav.cap a.active { background: var(--card); box-shadow: 0 0 2px 0px rgba(0, 0, 0, 0.04), 0 0 8px 0px rgba(0, 0, 0, 0.04); } nav.cap a.active:after { content: ''; } nav.cap a + a { margin-left: 4px; } @media screen and (max-width: 667px) { .nav-wrap { margin-top: 0; padding-left: 0; padding-right: 0; } .nav-wrap nav a:first-child { margin-left: 1rem; } .nav-wrap nav a:last-child { margin-right: 1rem; } } .paginator-wrap .current { font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; color: var(--text-p3); background: none; } .related-wrap { padding: 0 1rem; margin: 4rem 0; } .related-wrap:empty { display: none; } .related-wrap section.header { display: flex; justify-content: space-between; align-items: center; } .related-wrap section.header > span.title { padding: 0.25rem 0; } .related-wrap section.footer { margin-top: 1rem; } .related-wrap a.more { padding: 0.25rem 0.5rem; border-radius: 6px; color: var(--text-p1); } article.md-text.content + .related-wrap { margin-top: 0; } .related-posts { max-width: 100%; margin: 1rem 0; } .related-posts .item { line-height: 1.2; display: block; border-left: 0; margin-top: 1rem; } .related-posts .item .title { color: var(--text-p1); font-weight: 500; font-size: 1rem; transition: color 0.2s ease-out, border 0.2s ease-out; -moz-transition: color 0.2s ease-out, border 0.2s ease-out; -webkit-transition: color 0.2s ease-out, border 0.2s ease-out; -o-transition: color 0.2s ease-out, border 0.2s ease-out; position: relative; padding-bottom: 2px; border-bottom: 1px dashed var(--text-meta); line-height: 1.6; } .related-posts .item .excerpt { color: var(--text-p3); font-size: 0.75rem; margin-top: 0.5rem; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .related-posts .item:hover .title { color: #7e57c2; border-bottom: 1px solid #7e57c2; } .related-wrap#read-next .body { display: grid; grid-gap: 16px; grid-template-columns: repeat(auto-fill, calc((100% - 1 * 16px) / 2)); } .related-wrap#read-next .body .item { border-top: 1px dashed var(--block-border); border-bottom: 1px dashed var(--block-border); padding: 1rem 0; } .related-wrap#read-next .body .note { margin-bottom: 0.75rem; font-size: 0.75rem; color: var(--text-p4); font-weight: 500; } .related-wrap#read-next .body a { margin: 0; line-height: 1.2; color: var(--text-p1); font-size: 1.125rem; } .related-wrap#read-next .body a:hover { color: #7e57c2 !important; } .related-wrap#read-next .body #next { text-align: right; } .wiki + .related-wrap#read-next .item a { font-size: 1.375rem; } .wiki + .related-wrap#read-next .item#prev a { color: var(--text-p3); } .related-wrap#comments { padding: 0 1rem; } .related-wrap#comments .cmt-title p { margin: 0; font-size: inherit; } .related-wrap#comments .cmt-title p a { color: inherit; text-decoration: underline; } .related-wrap#comments .cmt-title p a:hover { color: #7e57c2; } .related-wrap#comments .cmt-title p a:before { display: none; } .related-wrap#comments .cmt-body { min-height: 150px; position: relative; } .related-wrap#comments .cmt-body svg.loading { top: 60px; } .tag-plugin.about { background: var(--block); border-radius: 12px; padding: 2rem; position: relative; } .tag-plugin.about .nav-back { display: none; position: absolute; line-height: 1; overflow: hidden; left: 0.75rem; top: 0.75rem; align-items: center; } @media screen and (max-width: 667px) { .tag-plugin.about .nav-back { display: flex; } } .tag-plugin.about .nav-back svg { width: 1rem; height: 1rem; } .tag-plugin.about .about-header { display: flex; justify-content: center; flex-wrap: wrap; margin: 1.5rem 0; } .tag-plugin.about .about-header img { object-fit: contain; } .tag-plugin.about .about-header > img { margin: auto 0; } .tag-plugin.about .about-header > p { font-size: 0.75rem; font-weight: 500; color: var(--text-p3); padding-top: 0.75rem; } .tag-plugin.about .about-header > p strong:first-child { font-size: 3rem; font-weight: 700; color: var(--text-p1); margin-right: 0.75rem; } .tag-plugin.about .about-header .avatar { display: inline-flex; margin: 0 1rem; } .tag-plugin.about .about-body > p { line-height: 1.5; } .tag-plugin.about .about-body > p:first-child { margin-top: 2.5rem; } .tag-plugin.about .about-body p + .tag-plugin.navbar .cap { margin-top: 1rem; } .tag-plugin.about .about-header + .about-body { margin-top: 2rem; } @media screen and (max-width: 500px) { .tag-plugin.about { padding: 2rem 1rem; } .tag-plugin.about .about-header p { width: 100%; } } .md-text .tag-plugin.checkbox { display: flex; align-items: center; font-size: 0.9375rem; line-height: 1.2; --gap-p: calc(var(--gap-p-compact) / 2); /* Checkbox */ /* Radio */ /* Colors */ } .md-text .tag-plugin.checkbox input { -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; position: relative; height: 16px; width: 16px; cursor: pointer; display: inline-block; outline: none; border-radius: 2px; flex-shrink: 0; margin-right: 8px; pointer-events: none; } .md-text .tag-plugin.checkbox input[type='checkbox']:before, .md-text .tag-plugin.checkbox input[type='checkbox']:after { position: absolute; content: ''; background: var(--site-bg); } .md-text .tag-plugin.checkbox input[type='checkbox']:before { left: 1px; top: 5px; width: 0px; height: 2px; transform: rotate(45deg); -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); } .md-text .tag-plugin.checkbox input[type='checkbox']:after { right: 7px; bottom: 3px; width: 2px; height: 0px; transform: rotate(40deg); -webkit-transform: rotate(40deg); -moz-transform: rotate(40deg); -ms-transform: rotate(40deg); -o-transform: rotate(40deg); } .md-text .tag-plugin.checkbox input[type='checkbox']:checked:before { left: 0px; top: 7px; width: 6px; height: 2px; } .md-text .tag-plugin.checkbox input[type='checkbox']:checked:after { right: 3px; bottom: 1px; width: 2px; height: 10px; } .md-text .tag-plugin.checkbox[symbol='minus'] input[type='checkbox']:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='minus'] input[type='checkbox']:after { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='minus'] input[type='checkbox']:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='minus'] input[type='checkbox']:checked:after { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='plus'] input[type='checkbox']:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='plus'] input[type='checkbox']:after { transform: rotate(0); left: 5px; top: 1px; width: 2px; height: 0px; } .md-text .tag-plugin.checkbox[symbol='plus'] input[type='checkbox']:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='plus'] input[type='checkbox']:checked:after { left: 5px; top: 1px; width: 2px; height: 10px; } .md-text .tag-plugin.checkbox[symbol='times'] input[type='checkbox']:before { transform: rotate(45deg); left: 3px; top: 1px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='times'] input[type='checkbox']:after { transform: rotate(135deg); right: 3px; top: 1px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='times'] input[type='checkbox']:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol='times'] input[type='checkbox']:checked:after { right: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox input[type='radio'] { border-radius: 50%; transform: translateY(-1px); } .md-text .tag-plugin.checkbox input[type='radio']:before { content: ''; display: block; width: 8px; height: 8px; border-radius: 50%; margin: 2px; transform: scale(0); } .md-text .tag-plugin.checkbox input[type='radio']:checked:before { transform: scale(1); } .md-text .tag-plugin.checkbox input { border: 2px solid var(--theme); } .md-text .tag-plugin.checkbox input[type='checkbox']:checked { background: var(--theme); } .md-text .tag-plugin.checkbox input[type='radio']:checked:before { background: var(--theme); } .tag-plugin.checkbox:not([color]) { --theme: #2196f3; } .tag-plugin { --theme: var(--text-p1); --theme-border: var(--block-border); --theme-bg1: #fcd9cf; --theme-bg2: var(--block); } .tag-plugin.tag { --text-p2: #742006; } .tag-plugin[color='red'] { --theme: #f44336; --theme-bg1: #fcd2cf; --theme-bg2: #fce9e8; --theme-border: #e6b6b3; --text-p0: #3f1512; --text-p1: #4f1b17; --text-p2: #740e06; } .tag-plugin[color='orange'] { --theme: #fa6400; --theme-bg1: #fce1cf; --theme-bg2: #fcf0e8; --theme-border: #e6c7b3; --text-p0: #3f2412; --text-p1: #4f2d17; --text-p2: #743206; } .tag-plugin[color='yellow'] { --theme: #ffbd2b; --theme-bg1: #fceecf; --theme-bg2: #fcf6e8; --theme-border: #e6d6b3; --text-p0: #3f3112; --text-p1: #4f3e17; --text-p2: #745206; } .tag-plugin[color='green'] { --theme: #3dc550; --theme-bg1: #cffcd5; --theme-bg2: #e8fceb; --theme-border: #b3e6ba; --text-p0: #123f19; --text-p1: #174f1f; --text-p2: #067416; } .tag-plugin[color='cyan'] { --theme: #1bcdfc; --theme-bg1: #cff3fc; --theme-bg2: #e8f8fc; --theme-border: #b3dbe6; --text-p0: #12363f; --text-p1: #17434f; --text-p2: #065d74; } .tag-plugin[color='blue'] { --theme: #2196f3; --theme-bg1: #cfe8fc; --theme-bg2: #e8f3fc; --theme-border: #b3cfe6; --text-p0: #122b3f; --text-p1: #17364f; --text-p2: #064374; } .tag-plugin[color='purple'] { --theme: #9c27b0; --theme-bg1: #f6cffc; --theme-bg2: #f9e8fc; --theme-border: #deb3e6; --text-p0: #39123f; --text-p1: #47174f; --text-p2: #640674; } .tag-plugin[color='light'] { --theme-bg1: #e0e0e0; --theme-bg2: #fff; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } .tag-plugin[color='dark'] { --theme-bg1: #1f1f1f; --theme-bg2: #333; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } .tag-plugin[color='warning'] { --theme: #ffbd2b; --theme-border: #ffe659; --theme-bg2: #ffe659; --theme-link: #ff453a; } .tag-plugin[color='error'] { --theme: #ffbd2b; --theme-border: #ff453a; --theme-bg2: #ff453a; --theme-link: #ffe659; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } @media (prefers-color-scheme: dark) { .tag-plugin.tag { --theme: #f4511e; --theme-bg1: #3d1e14; --theme-bg2: #2f2522; --theme-border: #5c2d1f; --text-p0: #ffc5b3; --text-p1: #dfaf9f; --text-p2: #f19a7e; } .tag-plugin[color='red'] { --theme: #f44336; --theme-bg1: #3d1714; --theme-bg2: #2f2322; --theme-border: #5c231f; --text-p0: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e; } .tag-plugin[color='orange'] { --theme: #fa6400; --theme-bg1: #3d2514; --theme-bg2: #2f2722; --theme-border: #5c371f; --text-p0: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e; } .tag-plugin[color='yellow'] { --theme: #ffbd2b; --theme-bg1: #3d3014; --theme-bg2: #2f2b22; --theme-border: #5c491f; --text-p0: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e; } .tag-plugin[color='green'] { --theme: #3dc550; --theme-bg1: #143d1a; --theme-bg2: #222f24; --theme-border: #1f5c27; --text-p0: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e; } .tag-plugin[color='cyan'] { --theme: #1bcdfc; --theme-bg1: #14353d; --theme-bg2: #222d2f; --theme-border: #1f4f5c; --text-p0: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1; } .tag-plugin[color='blue'] { --theme: #2196f3; --theme-bg1: #142b3d; --theme-bg2: #222a2f; --theme-border: #1f415c; --text-p0: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1; } .tag-plugin[color='purple'] { --theme: #9c27b0; --theme-bg1: #37143d; --theme-bg2: #2d222f; --theme-border: #531f5c; --text-p0: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1; } .tag-plugin[color='light'] { --theme-border: #fff; --theme-bg1: #e0e0e0; --theme-bg2: #fff; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } .tag-plugin[color='dark'] { --theme-border: #000; --theme-bg1: #1f1f1f; --theme-bg2: #111; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } .tag-plugin[color='warning'], .tag-plugin[color='light'] { --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } } .md-text .tag-plugin.copy { display: flex; justify-content: space-between; box-sizing: border-box; background: var(--block); border-radius: 6px; border: 1px solid var(--block-border); overflow: hidden; width: 320px; max-width: 100%; } .md-text .tag-plugin.copy[width='max'] { width: 100%; } @media screen and (max-width: 425px) { .md-text .tag-plugin.copy { min-width: 100%; } } .md-text .tag-plugin.copy input.copy-area { display: inline-block; padding: 0; width: 100%; color: var(--text-p2); line-height: 3; text-indent: 1rem; } .md-text .tag-plugin.copy button.copy-btn { margin: 0; line-height: 3; border-left: 1px solid var(--block-border); display: inline-block; background: var(--block-hover); line-height: 0; font-size: 1rem; padding: 0 0.75rem; color: var(--text-p2); } .md-text .tag-plugin.copy button.copy-btn:hover { background: var(--card); } .md-text .tag-plugin.emoji { display: inline-block; margin: -4px 2px 0; vertical-align: middle; } .md-text .tag-plugin.emoji img { display: block; object-fit: contain; height: 1.75em; } .tag-plugin.folders { margin: var(--gap-p) 0; font-size: 0.875rem; border-top: 1px solid var(--block-border); overflow: hidden; } .tag-plugin.folders .folder { border-bottom: 1px solid var(--block-border); padding: 1rem; } .tag-plugin.folders summary { cursor: pointer; color: var(--text-p2); font-weight: 500; position: relative; line-height: 1.2; outline: none; padding: 1rem; margin: -1rem; } .tag-plugin.folders summary:last-child { border-bottom: none; } .tag-plugin.folders summary > span { margin-left: 0.25em; } .tag-plugin.folders summary > p, .tag-plugin.folders summary > h1, .tag-plugin.folders summary > h2, .tag-plugin.folders summary > h3, .tag-plugin.folders summary > h4, .tag-plugin.folders summary > h5, .tag-plugin.folders summary > h6 { display: inline; border-bottom: none !important; } .tag-plugin.folders summary:hover { color: var(--text-p0); } .tag-plugin.folders summary:after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 1rem; } .tag-plugin.folders details[open] > summary { color: var(--text-p1); font-weight: 700; } .tag-plugin.folders details[open] > summary:after { content: '-'; } .tag-plugin.folders details[open] > div.body { font-size: 0.9375rem; } .tag-plugin.folders details[open] > div.body > :first-child { margin-top: 1rem; } .tag-plugin.folders details[open] > div.body > :last-child { margin-bottom: 0; } details.folding { display: block; padding: 1rem; margin: 1rem 0; border-radius: 12px; background: var(--theme-bg2); border: 1px solid var(--theme-border); } details.folding summary { cursor: pointer; padding: 1rem; margin: -1rem; color: var(--text-p2); font-weight: 500; font-size: 0.875rem; position: relative; line-height: 1.2; outline: none; } details.folding summary > span { margin-left: 0.25em; } details.folding summary > p, details.folding summary > h1, details.folding summary > h2, details.folding summary > h3, details.folding summary > h4, details.folding summary > h5, details.folding summary > h6 { display: inline; border-bottom: none !important; } details.folding summary:hover { color: var(--text-p0); } details.folding summary:after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 1rem; line-height: 1; } details.folding[open] > summary { color: var(--text-p1); font-weight: 700; z-index: 1; } details.folding[open] > summary:after { content: '-'; } details.folding[open] > div.body { padding: 0 1rem 1rem; margin: 0 -1rem -1rem; color: var(--text-p1); } details.folding[open] > div.body > :first-child { margin-top: 1rem; } details.folding[open] > div.body > :last-child { margin-bottom: 0; } details.folding[child='codeblock'] > div.body { padding: 0; background: transparent; overflow: hidden; } details.folding[child='codeblock'] > div.body .highlight { border: none; border-radius: 0; background: transparent; margin: 0; } details.folding[child='codeblock'] > div.body .highlight figcaption { display: none; } details.folding[child='codeblock'] > div.body .highlight .code:before { content: none; } details.folding[child='iframe'] { overflow: hidden; background: none; } details.folding[child='iframe'] > summary { background: none; } details.folding[child='iframe'] > div.body { padding: 0; background: none; overflow: hidden; } .md-text .frame-wrap { position: relative; overflow: hidden; margin: 0 auto; max-width: 100%; display: flex; flex-direction: column; align-items: center; } .md-text .frame-wrap img, .md-text .frame-wrap video { border-radius: 0; } .md-text .frame-wrap .frame { z-index: 1; display: block; position: absolute; background-size: 100%; background-repeat: no-repeat; overflow: hidden; } .md-text .tag-plugin.img-wrap .frame-wrap[focus] { height: auto; } .md-text .frame-wrap#iphone11 img, .md-text .frame-wrap#iphone11 video { width: 287px; margin-top: 19px; margin-bottom: 20px; } .md-text .frame-wrap#iphone11 .frame { background-image: url('https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/frame/iphone11.svg'); width: 329px; height: 658px; } .md-text .frame-wrap[focus='top'] img, .md-text .frame-wrap[focus='top'] video { margin-bottom: 0 !important; } .md-text .frame-wrap:not([focus='bottom']) .frame { top: 0; } .md-text .frame-wrap[focus='bottom'] img, .md-text .frame-wrap[focus='bottom'] video { bottom: 0; margin-top: 0 !important; } .md-text .frame-wrap[focus='bottom'] .frame { bottom: 0; } @media screen and (max-width: 500px) { .md-text .frame-wrap#iphone11 img, .md-text .frame-wrap#iphone11 video { width: 208px; margin-top: 13px; margin-bottom: 14px; } .md-text .frame-wrap#iphone11 .frame { width: 238px; height: 476px; } } .users-wrap { overflow: hidden; } .users-wrap .group-header { margin: 0 0 1rem; } .users-wrap .group-header p { margin: 0; font-size: 0.875rem; } .users-wrap .group-header p:first-child { font-size: 1.25rem; font-weight: 500; } .users-wrap .group-body { width: 100%; display: flex; flex-wrap: wrap; align-items: stretch; } .users-wrap .group-body + .group-header { margin-top: 2rem; } .users-wrap .stellar-friends-api { display: block; } .users-wrap .user-card { flex-shrink: 1; display: flex; align-items: stretch; width: 12.5%; } @media screen and (max-width: 980px) { .users-wrap .user-card { width: 14.28%; } } @media screen and (max-width: 900px) { .users-wrap .user-card { width: 16.66%; } } @media screen and (max-width: 820px) { .users-wrap .user-card { width: 20%; } } @media screen and (max-width: 667px) { .users-wrap .user-card { width: 16.66%; } } @media screen and (max-width: 500px) { .users-wrap .user-card { width: 25%; } } .users-wrap .user-card .card-link { margin: 0; width: 100%; color: var(--text-p1); font-size: 10px; font-weight: 500; display: flex; justify-content: flex-start; flex-direction: column; align-items: center; text-align: center; line-height: 1.2; border-radius: 4px; overflow: hidden; position: relative; padding: 1rem 0.5rem; } .users-wrap .user-card .card-link img { object-fit: cover; display: block; width: 48px; height: 48px; background: var(--card); border-radius: 64px; margin: 0 0 0.5rem; } .users-wrap .user-card .card-link > img { transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -moz-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -webkit-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -o-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; } .users-wrap .user-card .card-link:hover { background: var(--block-hover); } .users-wrap .user-card .card-link:hover img { transform: scale(1.2) rotate(8deg); box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); } .tag-plugin.ghcard { line-height: 0; } .tag-plugin.ghcard a.ghcard { display: inline-block; } .tag-plugin.grid { display: grid; grid-gap: 16px; grid-template-columns: repeat(auto-fill, calc((100% - 1 * 16px) / 2)); } .tag-plugin.grid > .cell { margin: 1rem 0; } .tag-plugin.grid > .cell p:first-child > strong:only-child { font-size: 1rem; } .tag-plugin.grid > .cell > p { line-height: 1.5; } .tag-plugin.grid > .cell > :first-child { margin-top: 0; } .tag-plugin.grid > .cell > :last-child { margin-bottom: 0; } .tag-plugin.grid > .cell > p:first-child { margin-top: -0.25em; } .tag-plugin.grid > .cell > p:last-child { margin-bottom: -0.25em; } .md-text .tag-plugin.grid { margin-top: -0.5rem; margin-bottom: -0.5rem; } @media screen and (max-width: 768px) { .tag-plugin.grid { display: block; } } .tag-plugin.grid[bg] > .cell { padding: 1rem; border-radius: 12px; } .tag-plugin.grid[bg='block'] > .cell { background: var(--block); } .tag-plugin.grid[bg='card'] > .cell { background: var(--card); box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.1); transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; } .tag-plugin.grid[bg='card'] > .cell:hover { transform: translateY(-1px); box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); } .tag-plugin.image { margin-top: 1rem; margin-bottom: 1rem; } .tag-plugin.image .image-bg { text-align: center; border-radius: 6px; position: relative; overflow: hidden; } .tag-plugin.image .image-bg:hover .image-download { opacity: 1 !important; } .tag-plugin.image .image-bg img { display: block; object-fit: cover; } .tag-plugin.image .image-bg .image-download { position: absolute; bottom: 8px; right: 8px; font-size: 1.125rem; padding: 6px; line-height: 0; border-radius: 4px; transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -moz-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -webkit-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -o-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; color: var(--text-p1); } .tag-plugin.image .image-bg .image-download:hover { background: var(--card) !important; color: #7e57c2; } .tag-plugin.image .image-meta { display: flex; justify-content: center; padding: 0.5rem 0; } .tag-plugin.image .image-meta .image-caption { display: inline-block; font-size: 0.75rem; color: var(--text-p2); line-height: 1.5; text-align: justify; } .tag-plugin.image .image-meta .image-caption:empty { display: none; } .md-text u { text-decoration: none; border-bottom: 2px solid #7e57c2; } .md-text emp { width: fit-content; text-decoration: none; border-bottom: 4px dotted #7e57c2; } .md-text wavy { text-decoration: underline wavy #7e57c2; } .md-text del { color: var(--text-p3); text-decoration: line-through var(--text-p3); } .md-text kbd { border-radius: 4px; border: 1px solid #d2d2d2; border-bottom-width: 2px; background: var(--card); padding: 2px 4px 1px 4px; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; font-weight: 700; } .md-text psw { color: transparent; background: #a1a1a1; border-radius: 2px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; margin: auto 2px; } .md-text psw:hover { color: inherit; background: none; } .md-text sup, .md-text sub { color: var(--theme); line-height: 1; font-weight: 700; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; } .md-text h1 sup, .md-text h2 sup, .md-text h3 sup, .md-text h4 sup, .md-text h1 sub, .md-text h2 sub, .md-text h3 sub, .md-text h4 sub { font-size: 0.85rem; } .md-text .tag-plugin.link { margin: 1em auto; display: flex; justify-content: center; } .md-text .link-card { background: var(--card); display: inline-flex; justify-content: space-between; align-items: center; cursor: pointer; width: 320px; max-width: 100%; box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.1); border-radius: 6px; transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; } .md-text .link-card:hover { box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); transform: translateY(-1px); } .md-text .link-card.plain { flex-direction: row; align-items: center; } .md-text .link-card.rich { flex-direction: column; align-items: stretch; width: 460px; text-align: justify; } .md-text .link-card > .left { overflow: hidden; margin: 0.75rem 0 0.75rem 0.75rem; } .md-text .link-card > .left .title { font-size: 0.875rem; } .md-text .link-card > .left span + span { margin-top: 0.25rem; } .md-text .link-card > .right { width: 2.75rem; height: 2.75rem; margin: 0.75rem; overflow: hidden; flex-shrink: 0; } .md-text .link-card > .top { display: flex; margin: 1rem 1rem 0.75rem; overflow: hidden; max-width: calc(100% - 1rem * 2); align-items: center; } .md-text .link-card > .top .img { line-height: 0; height: 16px; width: 16px; border-radius: 16px; margin-right: 8px; background-repeat: no-repeat; background-size: contain; background-position: left center; } .md-text .link-card > .top span { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%; } .md-text .link-card > .bottom { margin: 0 1rem 1rem; } .md-text .link-card > .bottom .title { font-size: 1rem; margin-bottom: 0.5rem; } .md-text .link-card { line-height: 1.2; } .md-text .link-card .title { display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .md-text .link-card .cap { flex-shrink: 0; color: var(--text-p3); } .md-text .link-card .link { line-height: 1.5; opacity: 0.75; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .md-text .link-card .desc { display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 3; } .md-text .link-card .img { border-radius: 4px; } .md-text .link-card span { margin: 0; display: block; } .md-text .link-card .title { font-weight: 500; color: var(--text-p1); } .md-text .tag-plugin.mark { padding: 0 1px; border-radius: 2px; background: var(--theme-bg2); border: 1px solid var(--theme-border); color: var(--text-p0); } .md-text .tag-plugin.mark[color='dark'] { border-color: var(--theme-bg2); } .md-text .tag-plugin.navbar { text-align: center; } .md-text .tag-plugin.navbar nav.cap { margin: 0; padding: 1px; background: var(--card); box-shadow: 0 0 2px 0px rgba(0, 0, 0, 0.04), 0 0 8px 0px rgba(0, 0, 0, 0.04); border-radius: 6px; display: inline-flex; max-width: 100%; } .md-text .tag-plugin.navbar nav.cap a { margin: 1px; padding: 0.25em 0.75rem; color: var(--text-p2); } .md-text .tag-plugin.navbar nav.cap a:after { display: none; } .md-text .tag-plugin.navbar nav.cap a:hover { background: var(--block); } .md-text .tag-plugin.navbar nav.cap a.active { background: var(--block); box-shadow: none; color: var(--text-p1); } .md-text .tag-plugin.note { position: relative; padding: 0.25rem 1rem; border-radius: 12px; background: var(--theme-bg2); overflow: hidden; color: var(--text-p1); } .md-text .tag-plugin.note > .title { font-size: 0.9375rem; line-height: 1.5; margin-top: var(--gap-p-compact); font-weight: 500; color: var(--text-p0); } .md-text .tag-plugin.note > .body { margin-top: var(--gap-p-compact); margin-bottom: var(--gap-p-compact); } .md-text .tag-plugin.note > .body, .md-text .tag-plugin.note > .body p { font-size: 0.875rem; line-height: 1.5; } .md-text .tag-plugin.note > .body:only-child { margin: calc(var(--gap-p) - 0.25rem) 0; } .md-text .tag-plugin.note[color] code { background: none; } .md-text .tag-plugin.note:not([color]) .highlight { background: var(--block-hover); } .md-text .tag-plugin.note[child='codeblock'] { padding: 0; } .md-text .tag-plugin.note[child='codeblock'] > .title, .md-text .tag-plugin.note[child='codeblock'] > .body:only-child { margin-top: 0; } .md-text .tag-plugin.note[child='codeblock'] > .body { margin-bottom: 0; } .md-text .tag-plugin.note[child='codeblock'] .highlight { margin: 0; border: none; background: none; } .md-text .tag-plugin.note[child='tabs'] > .body { margin: 0; } .md-text .tag-plugin.note[child='tabs'] > .body > .tabs { margin-top: 0.5rem; } .md-text .tag-plugin.note[child='iframe'] { padding: 0; } .md-text .tag-plugin.note[child='iframe'] > .body { margin: 0; } .md-text .tag-plugin.note[child='iframe'] > .body iframe { margin: 0; } .md-text .tag-plugin .tag-plugin.note { --gap-p: 1rem; } .tag-plugin.note blockquote, .tag-plugin.folding blockquote { border-top-left-radius: 0; border-bottom-left-radius: 0; background: none; padding-top: 0; padding-bottom: 0; } .tag-plugin.note table:not([class]) th, .tag-plugin.folding table:not([class]) th { background: var(--block-hover); } .tag-plugin.note table:not([class]) td, .tag-plugin.folding table:not([class]) td, .tag-plugin.note table:not([class]) th, .tag-plugin.folding table:not([class]) th { border-color: var(--block-border); } .md-text .tag-plugin.poetry { display: flex; flex-direction: column; align-items: center; } .md-text .tag-plugin.poetry .content > .title { font-weight: 500; font-size: 1rem; margin-top: var(--gap-p); } .md-text .tag-plugin.poetry .content > .meta { color: var(--text-p2); font-size: 0.75rem; font-weight: 500; } .md-text .tag-plugin.poetry .content > .meta span + span { margin-left: 4px; } .md-text .tag-plugin.poetry .content > .body { margin: var(--gap-p) 0; border-top: 1px dashed var(--block-border); border-bottom: 1px dashed var(--block-border); } .md-text .tag-plugin.poetry .content > .body p { font-size: 0.875rem; } .md-text .tag-plugin.poetry .content > .footer { font-style: italic; color: var(--text-p4); margin: var(--gap-p) 0; font-size: 0.75rem; } .md-text .tag-plugin.poetry .content { padding-left: 1rem; position: relative; } .md-text .tag-plugin.poetry .content:before { content: ''; position: absolute; width: 4px; left: -4px; top: 4px; bottom: 4px; border-radius: 4px; background: var(--block); } .md-text .tag-plugin.poetry .content > .title { position: relative; } .md-text .tag-plugin.poetry .content > .title:before { content: ''; position: absolute; width: 4px; left: calc(-1rem - 4px); top: 6px; bottom: 6px; border-radius: 4px; background: #d50000; } .md-text .tag-plugin.quot { text-align: center; align-items: center; display: flex; flex-direction: column; } .md-text .tag-plugin.quot .content { display: flex; align-items: center; border-bottom: none; font-weight: 700; padding: 16px 24px; line-height: 1.2; } .md-text .tag-plugin.quot .content a.headerlink:before { content: ''; } @media screen and (max-width: 500px) { .md-text .tag-plugin.quot .content { padding: 12px 20px; } } .md-text .tag-plugin.quot .content { max-width: 500px; position: relative; } .md-text.content .tag-plugin.quot h1 { font-size: 1.75rem; font-weight: 900; padding: 20px 32px 12px 32px; } @media screen and (max-width: 500px) { .md-text.content .tag-plugin.quot h1 { padding: 20px 24px 12px; } } .md-text.content .tag-plugin.quot h2, .md-text.content .tag-plugin.quot h3, .md-text.content .tag-plugin.quot h4, .md-text.content .tag-plugin.quot h5, .md-text.content .tag-plugin.quot h6 { font-size: 1.375rem; margin-top: 1em; margin-bottom: 0; } .md-text.content .tag-plugin.quot p { font-size: 1.125rem; color: var(--text-p0); } .md-text .tag-plugin.quot .content[type='text']:before, .md-text .tag-plugin.quot .content[type='text']:after { content: ''; position: absolute; width: 8px; height: 14px; } .md-text .tag-plugin.quot .content[type='text']:before { top: 8px; left: 0; border-top: 6px solid #d50000; border-left: 6px solid #d50000; } .md-text .tag-plugin.quot .content[type='text']:after { right: 0; bottom: 8px; border-right: 6px solid #d50000; border-bottom: 6px solid #d50000; } .md-text .tag-plugin.quot h1.content[type='text']:before, .md-text .tag-plugin.quot h1.content[type='text']:after { width: 12px; height: 20px; border-width: 8px; } .md-text .tag-plugin.quot .content[type='icon'] .icon { height: 1.5em; display: inline-block; color: #d50000; border-radius: 0; } .md-text .tag-plugin.quot .content[type='icon'] .icon.prefix { margin-left: -0.5rem; margin-right: 0.5rem; } .md-text .tag-plugin.quot .content[type='icon'] .icon.suffix { margin-left: 0.5rem; } .sites-wrap .group-header { margin: 1rem 0; } .sites-wrap .group-header p { margin: 0; font-size: 0.875rem; } .sites-wrap .group-header p:first-child { font-size: 1.25rem; font-weight: 500; } .sites-wrap .group-body { width: 100%; } .sites-wrap .group-body + .group-header { margin-top: 2rem; } .sites-wrap .stellar-sites-api { display: block; } .sites-wrap .group-body { display: grid; grid-gap: 1rem 1rem; grid-template-columns: repeat(auto-fill, calc((100% - 3 * 1rem) / 4)); } @media screen and (max-width: 1024px) { .sites-wrap .group-body { grid-template-columns: repeat(auto-fill, calc((100% - 2 * 1rem) / 3)); } } @media screen and (max-width: 900px) { .sites-wrap .group-body { grid-template-columns: repeat(auto-fill, calc((100% - 1 * 1rem) / 2)); } } @media screen and (max-width: 667px) { .sites-wrap .group-body { grid-template-columns: repeat(auto-fill, calc((100% - 2 * 1rem) / 3)); } } @media screen and (max-width: 500px) { .sites-wrap .group-body { grid-template-columns: repeat(auto-fill, calc((100% - 1 * 1rem) / 2)); } } .sites-wrap .group-body .site-card .card-link { width: 100%; display: flex; flex-direction: column; } .sites-wrap .group-body .site-card .card-link > img { width: 100%; height: 100px; object-fit: cover; box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.2); } @media screen and (max-width: 1024px) { .sites-wrap .group-body .site-card .card-link > img { height: 120px; } } @media screen and (max-width: 900px) { .sites-wrap .group-body .site-card .card-link > img { height: 150px; } } @media screen and (max-width: 768px) { .sites-wrap .group-body .site-card .card-link > img { height: 120px; } } .sites-wrap .group-body .site-card .card-link .info { margin-top: 0.5rem; line-height: 1.2; } .sites-wrap .group-body .site-card .card-link .info > img { width: 28px; height: 28px; border-radius: 28px; float: left; margin-right: 8px; margin-top: 2px; } .sites-wrap .group-body .site-card .card-link .info span { display: block; } .sites-wrap .group-body .site-card .card-link .info .title { font-weight: 500; color: var(--text-p1); font-size: 0.875rem; margin-top: 1px; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 1; } .sites-wrap .group-body .site-card .card-link .info .desc { font-size: 10px; margin-top: 2px; word-wrap: break-word; color: var(--text-p3); display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .sites-wrap .site-card .card-link > img { transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; } .sites-wrap .site-card .card-link:hover > img { box-shadow: 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); transform: translateY(-2px); } .tag-plugin.tabs { position: relative; margin-top: 1rem; margin-bottom: 1rem; display: flex; flex-direction: column; } .tag-plugin.tabs[align='left'] { align-items: flex-start; } .tag-plugin.tabs[align='left'] .nav-tabs { align-self: flex-start; } .tag-plugin.tabs[align='center'] { align-items: center; } .tag-plugin.tabs[align='right'] { align-items: flex-end; } .tag-plugin.tabs[align='right'] .nav-tabs { align-self: flex-end; } .tag-plugin.tabs .nav-tabs { display: flex; align-self: center; overflow: scroll visible; max-width: 100%; white-space: nowrap; margin: 0 !important; line-height: 1.5; position: relative; padding: 8px 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar { height: 0; width: 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-track-piece { background: transparent; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .tag-plugin.tabs .nav-tabs:after { content: ''; position: absolute; background: var(--block-hover); width: 100%; height: 2px; bottom: 0; left: 0; border-radius: 2px; } .tag-plugin.tabs .nav-tabs .tab { list-style-type: none; } .tag-plugin.tabs .nav-tabs .tab a { display: block; cursor: pointer; padding: 0.25rem 0.75rem; font-size: 0.8125rem; line-height: inherit; font-weight: 500; color: var(--text-p3); border-radius: 4px; position: relative; margin: 0 2px; } .tag-plugin.tabs .nav-tabs .tab a:hover { color: var(--text-p1); background: var(--block-hover); } .tag-plugin.tabs .nav-tabs .tab a i { pointer-events: none; } .tag-plugin.tabs .nav-tabs .tab.active a { cursor: default; color: var(--text-p1); background: var(--card); box-shadow: 0 0 2px 0px rgba(0, 0, 0, 0.04), 0 0 8px 0px rgba(0, 0, 0, 0.04); } .tag-plugin.tabs .nav-tabs .tab.active a:after { content: ''; z-index: 1; position: absolute; background: #f4511e; height: 2px; bottom: -8px; left: 0.75rem; right: 0.75rem; border-radius: 2px; } .tag-plugin.tabs .tab-content { max-width: 100%; text-align: justify; margin-top: 0.5rem; } .tag-plugin.tabs .tab-content .tab-pane:not(.active) { display: none; } .tag-plugin.tabs .tab-content .tab-pane.active { display: block; } .md-text.indent .tag-plugin.tabs .tab-content p:not([class]) { text-indent: calc(0.9375rem * 2); } .md-text.indent .tag-plugin.tabs .tab-content p:not([class]) a { text-indent: 0; } .md-text .tag-plugin.tag { padding: 0px 4px; border-radius: 2px; background: var(--theme-bg1); color: var(--text-p2); margin: 2px 0; display: inline-block; font-size: 0.875rem; transition: background 0.2s ease-out, color 0.2s ease-out; -moz-transition: background 0.2s ease-out, color 0.2s ease-out; -webkit-transition: background 0.2s ease-out, color 0.2s ease-out; -o-transition: background 0.2s ease-out, color 0.2s ease-out; } .md-text .tag-plugin.tag:hover { background: var(--text-p2); color: var(--theme-bg1); } .md-text .tag-plugin.timeline { position: relative; margin-top: 0; padding-left: 16px; } .md-text .tag-plugin.timeline:before { content: ''; position: absolute; z-index: 0; background: var(--block-hover); width: 4px; left: 0px; border-radius: 8px; top: 0.5rem; bottom: 0; } .md-text .tag-plugin.timeline:has(.loading-wrap) { padding-left: 0; } .md-text .tag-plugin.timeline:has(.loading-wrap):before { display: none; } .md-text .tag-plugin.timeline .timenode { position: relative; display: flex; flex-direction: column; align-items: flex-start; box-sizing: border-box; max-width: 100%; } .md-text .tag-plugin.timeline .timenode > .header, .md-text .tag-plugin.timeline .timenode > .body { box-sizing: border-box; max-width: 100%; } .md-text .tag-plugin.timeline .timenode[highlight] .header:before { background: #f4511e; } .md-text .tag-plugin.timeline .timenode + .timenode { margin-top: 1rem; } .md-text .tag-plugin.timeline .timenode:hover .header p { color: var(--text-p1); } .md-text .tag-plugin.timeline .timenode:hover .header .user-info { background: #f4511e; } .md-text .tag-plugin.timeline .timenode:hover .header .user-info span { color: var(--card); } .md-text .tag-plugin.timeline .timenode:hover .header:before { background: #f4511e; height: 16px; top: calc(50% - 0.5 * 16px); transform: scale(1); } .tag-plugin.timeline .timenode .header { display: flex; align-items: center; position: relative; margin: 0.25rem 0; font-size: 0.75rem; } .tag-plugin.timeline .timenode .header .user-info { display: flex; align-items: center; font-size: 0.75rem; font-weight: 500; color: var(--text-p1); margin-right: 4px; line-height: 1; border-radius: 16px; padding-right: 6px; transition: color 0.2s ease-out, background 0.2s ease-out; -moz-transition: color 0.2s ease-out, background 0.2s ease-out; -webkit-transition: color 0.2s ease-out, background 0.2s ease-out; -o-transition: color 0.2s ease-out, background 0.2s ease-out; } .tag-plugin.timeline .timenode .header .user-info img { background: #fff; height: 16px; border-radius: 16px; display: inline; margin: 0 4px 0 0; object-fit: contain; } .tag-plugin.timeline .timenode .header .user-info:hover { background: #7e57c2; } .tag-plugin.timeline .timenode .header, .tag-plugin.timeline .timenode .header p { font-weight: 500; color: var(--text-p3); transition: color 0.2s ease-out; -moz-transition: color 0.2s ease-out; -webkit-transition: color 0.2s ease-out; -o-transition: color 0.2s ease-out; line-height: 1; } .tag-plugin.timeline .timenode .header p { margin: 0 !important; font-size: 0.75rem !important; } .tag-plugin.timeline .timenode .header p a { color: inherit; font-weight: inherit; } .tag-plugin.timeline .timenode .header:before { content: ''; position: absolute; left: -16px; width: 4px; border-radius: 12px; height: 4px; top: calc(50% - 0.5 * 4px); background: var(--text-meta); transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -moz-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -o-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; transform: scale(2); } .tag-plugin.timeline .body { background: var(--card); border-radius: 12px; border-top-left-radius: 2px; padding: 0.5rem 1rem; margin-top: 4px; box-shadow: 0 1px 4px 0px rgba(0, 0, 0, 0.02), 0 2px 8px 0px rgba(0, 0, 0, 0.02); } .tag-plugin.timeline .body p { font-size: 0.875rem; } .tag-plugin.timeline .body p img { display: block; } .tag-plugin.timeline .body:empty { display: none; } .tag-plugin.timeline .body p, .tag-plugin.timeline .body .highlight, .tag-plugin.timeline .body ol, .tag-plugin.timeline .body ul, .tag-plugin.timeline .body .tag-plugin { margin: 0.5rem 0; } .tag-plugin.timeline .body .tag-plugin.copy { width: 240px; } .tag-plugin.timeline[api].stellar-fcircle-api .timenode:hover .header .user-info { background: inherit; } .tag-plugin.timeline[api].stellar-fcircle-api .timenode:hover .header .user-info span { color: inherit; } .tag-plugin.timeline[api] a.body { display: block; color: var(--text-p1); line-height: 1.25; padding: 0.75rem 1rem; } .tag-plugin.timeline[api] .body p.title { font-size: 1rem; font-weight: 700; margin: 0.5rem 0 0.75rem; line-height: 1.25; } .tag-plugin.timeline[api] .body p.title:only-child { margin-bottom: 0.5rem; font-weight: 500; } .tag-plugin.timeline[api] .body p.title a { color: inherit; } .tag-plugin.timeline[api] .body p.title a:hover { color: #7e57c2; } .tag-plugin.timeline[api] .body a:has(img):after { display: none; } .tag-plugin.timeline[api] .body a img { margin: 0 auto; } .tag-plugin.timeline[api] .body img { margin: 0.5rem auto; } .tag-plugin.timeline[api] .body pre code { font-size: 0.75rem; } .tag-plugin.timeline[api] .body .footer { margin: 0 0 -0.5rem; padding: 0.5rem 0 1rem; user-select: none; font-weight: 500; display: flex; flex-wrap: wrap; justify-content: space-between; align-items: stretch; background: var(--card); } .tag-plugin.timeline[api] .body .footer span { line-height: 1.8; } .tag-plugin.timeline[api] .body .footer:empty { display: none; } .tag-plugin.timeline[api] .body .footer .flex { display: flex; flex-wrap: wrap; font-size: 0.75rem; align-items: stretch; } .tag-plugin.timeline[api] .body .footer .item { border-width: 1px; border-style: solid; margin: 2px; border-radius: 4px; padding: 0 0.5rem; display: flex; align-items: center; } .tag-plugin.timeline[api] .body .footer .item:first-child { margin-left: 0; } .tag-plugin.timeline[api] .body .footer .item:last-child { margin-right: 0; } .tag-plugin.timeline[api] .body .footer .reaction { border-color: var(--block); } .tag-plugin.timeline .body blockquote { background: none; border-radius: 0; padding: 0 0.5rem; margin: 0.75rem 0; } .tag-plugin.timeline .body blockquote p { font-size: 0.8125rem; margin: 0.25rem; } .tag-plugin.timeline .body { line-height: 1.5; } .tag-plugin.timeline .body h1, .tag-plugin.timeline .body h2 { font-size: 1.25rem; margin: 1rem 0; line-height: 1.2; } .tag-plugin.timeline .body h3, .tag-plugin.timeline .body h4 { font-size: 1rem; margin: 0.75rem 0; line-height: 1.2; } .tag-plugin.timeline .body h5, .tag-plugin.timeline .body h6 { font-size: 0.9375rem; margin: 0.5rem 0; line-height: 1.2; } details.toc { background: var(--block); border: 1px solid var(--block-border); border-radius: 6px; overflow: hidden; color: var(--text-p2); } details.toc summary { cursor: pointer; padding: 0 0.5rem; line-height: 2; color: var(--text-p2); font-size: 0.8125rem; font-weight: 500; } details.toc summary:hover { background: var(--block-hover); } details.toc > div.body { margin: var(--gap-p) 1rem 1rem; } details.toc[open] > summary { border-bottom: 1px solid transparent; } details.toc[open] > summary:hover { border-bottom-color: var(--block-border); } details.toc[open] > div.body section + section { margin-top: 1rem; } details.toc[open] > div.body section .header { line-height: 2; font-weight: 500; } details.toc[open] > div.body section .header + .doc_tree { margin-top: 0; } @media screen and (max-width: 667px) { .tag-plugin.toc[display='mobile'] { display: block !important; } } .l_left > .footer { margin: 0.5rem var(--gap-l) 1rem; } .social-wrap { display: grid; grid-gap: 0.25rem 0.25rem; grid-template-columns: repeat(auto-fill, 32px); } .social-wrap a.social { line-height: 0; display: inline-block; padding: 6px; border-radius: 4px; filter: grayscale(100%); overflow: hidden; background: transparent; transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; } .social-wrap a.social:hover { color: #7e57c2; z-index: 1; filter: unset; transform: translateY(-1px); background: linear-gradient(145deg, #ddd, #fff); box-shadow: 2px 4px 8px #ddd, -2px -4px 8px #fff; } @media (prefers-color-scheme: dark) { .social-wrap a.social:hover { box-shadow: none; } } .proj-wrap { display: grid; grid-gap: 0.25rem 0.25rem; } .proj-wrap a.item { border-radius: 4px; font-size: 0.8125rem; font-weight: 500; color: var(--text-p2); background: var(--block); border: 1px solid var(--block-border); overflow: hidden; padding: 0.75em; text-align: center; } .proj-wrap a.item svg { margin-right: 0.5em; } .proj-wrap a.item:hover { color: #7e57c2; background: var(--card); } .l_left nav.menu { margin-bottom: 0; } nav.menu { margin: 1rem 0; background: var(--block); border: 1px solid var(--block-border); border-radius: 6px; display: flex; flex-wrap: wrap; } nav.menu::-webkit-scrollbar { display: none; } nav.menu::-webkit-scrollbar-track-piece { background: transparent; } nav.menu::-webkit-scrollbar-thumb { display: none; } nav.menu a.nav-item { text-overflow: ellipsis; word-break: keep-all; margin: 1px; border-radius: 4px; font-size: 0.875rem; font-weight: 500; overflow: hidden; padding: 0.375rem 0.5rem; color: var(--text-p3); text-align: center; } nav.menu a.nav-item.active, nav.menu a.nav-item:hover { color: var(--text-p1); background: var(--card); box-shadow: 0 0 2px 0px rgba(0, 0, 0, 0.04), 0 0 8px 0px rgba(0, 0, 0, 0.04); } .l_left .menu a.nav-item { flex-grow: 1; } .logo-wrap { display: flex; align-items: center; overflow: hidden; } .logo-wrap a { color: inherit; display: flex; align-items: center; } .logo-wrap a.avatar { display: block; position: relative; width: 50px; height: 50px; flex-shrink: 0; border-radius: 50px; overflow: hidden; margin-right: 1rem; } .logo-wrap a.avatar div.bg { width: 100%; height: 100%; background-size: cover; } .logo-wrap a.avatar img.avatar { margin: 2px; object-fit: cover; width: calc(100% - 2 * 2px); height: calc(100% - 2 * 2px); border-radius: calc(100% - 2 * 2px); } .logo-wrap a.title { font-size: 1.75rem; font-weight: 900; color: inherit; line-height: 1.2; display: block; position: relative; } .logo-wrap a.title .main { color: var(--text-p0); } .logo-wrap a.title .sub { color: var(--text-p1); transition: opacity 0.2s ease-out, transform 0.2s ease-out; -moz-transition: opacity 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: opacity 0.2s ease-out, transform 0.2s ease-out; -o-transition: opacity 0.2s ease-out, transform 0.2s ease-out; white-space: nowrap; } .logo-wrap a.title .hover { position: absolute; bottom: 0; transform: translateY(8px); overflow: visible; } .logo-wrap a.title:hover .normal { opacity: 0; transform: translateY(-8px); } .logo-wrap a.title:hover .hover { transform: translateY(0); opacity: 1 !important; } .l_left { display: flex; flex-direction: column; word-break: break-all; text-align: justify; height: 100vh; } .l_left .header { margin: var(--gap-l) var(--gap-l) 0; margin-top: calc(2 * var(--gap-l)); } @media screen and (min-width: 667px) { .l_left > .widgets:first-child > .widget-wrapper:first-child { margin-top: calc(2 * var(--gap-l)); } } @media screen and (max-width: 667px) { .l_left { height: 100vh; } } .l_left[layout='wiki'] { padding-bottom: 0; height: 100vh; } @media screen and (max-width: 667px) { .l_left[layout='wiki'] { height: 100vh; } } .l_left[layout='wiki'] .widgets > :last-child { margin-bottom: 6rem; } .l_left .widgets .widget-wrapper.logo-wrap.wiki .widget-body { display: flex; margin-bottom: 1.5rem; flex-direction: column; align-items: flex-start; } .l_left .widgets .widget-wrapper.logo-wrap.wiki .widget-body a.wiki-home { margin-bottom: 0.5rem; color: var(--text-p1); } .l_left .widgets .widget-wrapper.logo-wrap.wiki .widget-body a.wiki-home svg { margin-right: 2px; } .l_left .widgets .widget-wrapper.logo-wrap.wiki .widget-body a.wiki-home:hover { color: #7e57c2; filter: unset !important; } .widget-wrapper.ghrepo .repo { display: block; padding: 0.75rem 0.5rem; color: var(--text-p2); background: var(--card); border-radius: 12px; box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.1); transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; } .widget-wrapper.ghrepo .repo > div + div { margin-top: 0.5rem; } .widget-wrapper.ghrepo .repo span { color: var(--text-p2); } .widget-wrapper.ghrepo .repo:hover { box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); transform: translateY(-1px); } .widget-wrapper.ghrepo .repo svg { margin-right: 4px; } .widget-wrapper.ghrepo .repo .flex-row { display: flex; align-items: center; } .widget-wrapper.ghrepo .repo .repo-name { font-size: 0.875rem; font-weight: 700; color: var(--text-p1); } .widget-wrapper.ghrepo .repo .repo-desc { font-size: 0.8125rem; margin-left: 2px; margin-right: 2px; } .widget-wrapper.ghrepo .repo .grid { font-size: 0.8125rem; display: grid; grid-gap: 2px; grid-template-columns: repeat(auto-fill, calc((100% - 2 * 2px) / 3)); } .widget-wrapper.ghuser .widget-header + .widget-body { margin: 0.75rem 0; } .widget-wrapper.ghuser .widget-body { text-align: center; background: var(--card); border-radius: 12px; padding: 1rem; box-shadow: 0 1px 2px 0px rgba(0, 0, 0, 0.1); } .widget-wrapper.ghuser .avatar { display: block; border-radius: 100%; margin: 1rem auto 1.25rem auto; max-width: 75%; overflow: hidden; } .widget-wrapper.ghuser .avatar img { display: block; } @media screen and (max-width: 768px) { .widget-wrapper.ghuser .avatar { max-width: 50%; } } .widget-wrapper.ghuser .username { font-weight: 900; font-size: 1.5rem; color: var(--text-p0); margin: 0.5rem 0; } .widget-wrapper.ghuser .bio { font-size: 0.8125rem; margin: 0.5rem 0; } .widget-wrapper.ghuser .follow { font-weight: 500; border-radius: 64px; padding: 0.5rem 1rem; background: #f4511e; color: var(--card); font-size: 1rem; align-self: stretch; text-align: center; line-height: 1.5; display: flex; align-items: center; justify-content: center; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widget-wrapper.ghuser .follow svg { margin-right: 6px; } .widget-wrapper.ghuser .menu { margin-bottom: 0; background: none; border: 0; } .widget-wrapper.ghuser .menu a { margin: 0; } .widget-wrapper.ghuser .menu a.active { box-shadow: none; position: relative; background: none; } .widget-wrapper.ghuser .menu a.active:after { content: ''; position: absolute; height: 3px; bottom: 0; width: 32px; left: calc(50% - 0.5 * 32px); border-radius: 4px; } .widget-wrapper.ghuser .menu a:hover { box-shadow: none; background: var(--block); } .widget-wrapper.ghuser .buttons { margin: 1rem 0; align-self: stretch; display: grid; grid-gap: 2px; grid-template-columns: repeat(auto-fill, calc((100% - 2 * 2px) / 3)); } .widget-wrapper.ghuser .btn { display: flex; flex-direction: column; align-items: center; color: inherit; border: 1px solid transparent; border-radius: 4px; padding: 0.25rem 0; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widget-wrapper.ghuser .btn:hover { background: var(--block); } .widget-wrapper.ghuser .btn .title { font-size: 1rem; font-weight: 700; } .widget-wrapper.ghuser .btn .desc { font-size: 0.75rem; color: var(--text-p3); font-weight: 500; } .widget-wrapper.recent .widget-body { display: flex; flex-direction: column; align-items: flex-start; margin-top: 0.25rem; } .widget-wrapper.recent .widget-body a { line-height: 1.2; font-size: 0.8125rem; margin: 0.25rem 0; } .widget-wrapper.recent .widget-body a .title { font-size: 0.8125rem; color: var(--text-p2); } .widget-wrapper.related .widget-body a { margin-top: 0.5rem; margin-bottom: 1rem; } .widget-wrapper.related .widget-body a .title { font-weight: 700; font-size: 0.875rem; } .widget-wrapper.related .widget-body a .excerpt { -webkit-line-clamp: 3; } .widgets .widget-wrapper.search { margin-top: 1rem; margin-bottom: 0; } .search-wrapper { width: 100%; } .search-wrapper > .search-form { position: sticky; top: 1rem; display: flex; flex-direction: row; align-items: center; transition: 0.38s ease-out; z-index: 0; } .search-wrapper > .search-form:after { content: ''; position: absolute; left: 0; right: 0; bottom: 0; height: 2px; border-radius: 4px; background: #e0e0e0; background-size: 200%; animation: glow 10s linear infinite; } @-moz-keyframes glow { from { background-position: 0%; } to { background-position: 200%; } } @-webkit-keyframes glow { from { background-position: 0%; } to { background-position: 200%; } } @-o-keyframes glow { from { background-position: 0%; } to { background-position: 200%; } } @keyframes glow { from { background-position: 0%; } to { background-position: 200%; } } .search-wrapper .search-input { width: 100%; padding: 0.5rem 0; line-height: 1; box-sizing: border-box; color: var(--text-p0); } .search-wrapper .search-no-result { display: none; margin: 1em auto; color: var(--text-p1); text-align: center; font-size: 0.875rem; padding: 2rem; background: var(--block); border-radius: 6px; } .search-wrapper #search-result ul.search-result-list { padding: 0; margin: 0; list-style-type: none; } .search-wrapper #search-result li { margin: 1em auto; } .search-wrapper #search-result li:hover .search-result-title { color: #7e57c2; } .search-wrapper #search-result .search-result-title { color: var(--text-p1); font-weight: 700; line-height: 1.2; } .search-wrapper #search-result .search-result-content { overflow: hidden; color: var(--text-p3); margin: 0.4em auto; max-height: 13em; text-align: justify; font-size: 0.75rem; line-height: 1.2; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 3; } .search-wrapper #search-result .search-keyword { border-bottom: 1px dashed #7e57c2; color: #7e57c2; font-weight: bold; } .search-wrapper.noresult .search-no-result { display: block; } .widget-wrapper .search-form { top: 0; background: var(--site-bg); } .widget-wrapper .search-input { padding-left: 1.5rem; } .widget-wrapper .search-icon { position: absolute; margin-left: 0.25rem; left: 0; pointer-events: none; color: var(--text-p2); } .widget-wrapper #search-result, .widget-wrapper .search-no-result { margin-top: 1rem; } .widget-wrapper:not(:first-child) .search-wrapper { margin-top: -1rem; } .widget-wrapper.tagcloud .widget-body { margin-top: 0.25rem; } .widget-wrapper.tagcloud .widget-body a { word-break: break-word; color: var(--text-p2); line-height: 1.5; } .widget-wrapper.tagcloud .widget-body a:hover { color: #7e57c2; } .widget-wrapper.timeline .widget-body { margin-top: 0.5rem; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header { margin-bottom: 0.5rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header .user-info { background: var(--block); } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header .user-info:hover { background: #7e57c2; color: var(--card); } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header:before { display: none; } .widget-wrapper.timeline .tag-plugin.timeline .timenode + .timenode { margin-top: 0.75rem; } .widget-wrapper.toc.single .doc-tree.active > .toc { border-left: 2px solid var(--block-hover); } .widget-wrapper.toc .widget-header { margin-top: 1rem; } .widget-wrapper.toc.single .widget-header { font-weight: 500; font-size: 0.75rem; } .widget-wrapper.toc.single .widget-header > span { margin: 0.5rem 0; } .widget-wrapper.toc .widget-body { margin-top: 0; } .widget-wrapper.toc .widget-body ul ul, .widget-wrapper.toc .widget-body ul ol { padding-left: 0; } .widget-wrapper.toc .widget-body ol ul, .widget-wrapper.toc .widget-body ol ol { padding-left: 0; } .widget-wrapper.toc .widget-body .doc-tree { margin: 4px 0; } .widget-wrapper.toc .widget-body .toc { padding: 0; margin: 0; padding-left: 0.25rem; } .widget-wrapper.toc .widget-body .toc .toc-item .toc-link { padding: 0.5rem; font-weight: 500; font-size: 0.8125rem; color: var(--text-p2); } .widget-wrapper.toc .widget-body .toc .toc-child .toc-item .toc-link { padding: 0.25rem 0.5rem 0.25rem 1.3rem; font-weight: 400; color: var(--text-p2); } .widget-wrapper.toc .widget-body .toc .toc-child .toc-child .toc-item .toc-link { padding-left: 2.1rem; font-size: 0.75rem; color: var(--text-p3); } .widget-wrapper.toc .widget-body .toc .toc-child .toc-child .toc-child .toc-item .toc-link { padding-left: 2.9rem; } .widget-wrapper.toc .toc-item { color: var(--text-p2); font-size: 0.75rem; padding: 0; list-style: none; } .widget-wrapper.toc .toc-item .toc-child .toc-item { padding: 0; } .widget-wrapper.toc a.toc-link { color: inherit; display: block; line-height: 1.2; border-radius: 4px; position: relative; } .widget-wrapper.toc a.toc-link:before { content: ''; position: absolute; left: -6px; top: calc(50% - 6px); bottom: calc(50% - 6px); width: 2px; border-radius: 2px; visibility: hidden; } .widget-wrapper.toc a.toc-link:hover { background: var(--block-hover); } .widget-wrapper.toc a.toc-link.active:before { visibility: visible; } .widget-wrapper.toc.multi .widget-header { color: var(--text-p1); font-size: 0.875rem; } .widget-wrapper.toc.multi .doc-tree { border-radius: 6px; background: var(--block); overflow: hidden; border: 1px solid var(--block-border); } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link { color: var(--text-p2); padding: 0.5rem; display: block; font-size: 0.75rem; font-weight: 500; position: relative; } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link:after { position: absolute; right: 0.5rem; } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link.active { color: var(--text-p1); } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link.active:only-child { background: var(--card); } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link:hover { background: var(--block-hover); } .widget-wrapper.toc.multi .doc-tree a.doc-tree-link:hover:after { content: '+'; } .widget-wrapper.toc.multi .doc-tree.active a.doc-tree-link { background: var(--block); font-weight: 700; } .widget-wrapper.toc.multi .doc-tree.active a.doc-tree-link:not(:only-child) { border-bottom: 1px solid var(--block-border); } .widget-wrapper.toc.multi .doc-tree.active a.doc-tree-link:hover:after { content: none; } .widget-wrapper.toc.multi .doc-tree.active > .toc { padding: 4px; background: var(--card); } .widget-wrapper.toc.multi .doc-tree.active > .toc a.toc-link:before { left: -2px; width: 4px; } .widget-wrapper.toc.multi .doc-tree.active > .toc a.toc-link:hover { background: var(--block); } .widgets .loading-wrap { margin: 0.5rem 0; } .widgets { overflow: scroll; flex-grow: 1; scrollbar-width: none; z-index: 1; line-height: 1.2; } .widgets::-webkit-scrollbar { height: 0; width: 0; } .widgets::-webkit-scrollbar-track-piece { background: transparent; } .widgets::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .widgets::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .widgets .widget-wrapper .widget-header { padding-left: var(--gap-l); padding-right: var(--gap-l); display: flex; justify-content: space-between; align-items: center; font-weight: 500; position: sticky; top: -2px; background: var(--site-bg); padding-top: 2px; z-index: 1; } .widgets .widget-wrapper .widget-header .item { display: block; } .widgets .widget-wrapper .widget-header > span { margin: 0.25rem 0; text-align: left; } .widgets .widget-wrapper .widget-header:empty { display: none; } .widgets .widget-wrapper .widget-header .cap-action { border-radius: 4px; padding: 4px 4px; transition: color 0.2s ease-out, background 0.2s ease-out; -moz-transition: color 0.2s ease-out, background 0.2s ease-out; -webkit-transition: color 0.2s ease-out, background 0.2s ease-out; -o-transition: color 0.2s ease-out, background 0.2s ease-out; line-height: 0; color: var(--text-meta); transition: color 0.2s ease-out, background 0.2s ease-out; -moz-transition: color 0.2s ease-out, background 0.2s ease-out; -webkit-transition: color 0.2s ease-out, background 0.2s ease-out; -o-transition: color 0.2s ease-out, background 0.2s ease-out; } .widgets .widget-wrapper .widget-header .cap-action:hover { background: var(--block-hover); } .widgets .widget-wrapper .widget-header .cap-action .icon { fill: var(--text-meta); } .widgets .widget-wrapper .widget-header .cap-action:hover { color: #7e57c2; } .widgets .widget-wrapper .widget-header .cap-action:hover .icon { fill: #7e57c2; } .widgets .widget-wrapper .widget-body { margin: 0.5rem var(--gap-l); color: var(--text-p1); } .widgets .widget-wrapper .widget-body p { margin-top: 0.5em; margin-bottom: 0.5em; line-height: 1.5; } .widgets .widget-wrapper .widget-header + .widget-body { margin-top: 0; } .widgets .widget-wrapper + .widget-wrapper .widget-header { margin-top: 3rem; } .widgets .widget-wrapper + .widget-wrapper.toc .widget-header { margin-top: 1rem; } .widget-wrapper { display: block; margin: 2rem 0; } .post-list #archive { padding: 1rem; } .post-list #archive .archive-header { display: inline-block; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; font-weight: 700; line-height: 1.2; margin-bottom: 0.5em; position: relative; padding: 4px 0; color: var(--text-p3); } .post-list #archive .archive-header:after { content: ''; position: absolute; height: 4px; bottom: 0; left: 0; right: 0; z-index: -1; border-radius: 4px; background: var(--block-border); } .post-list #archive a.post { display: inline-flex; align-items: baseline; margin: 0.25rem 0; color: var(--text-p1); } .post-list #archive a.post:hover { color: #7e57c2; } .post-list #archive a.post time { font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; margin-right: 1em; font-weight: 700; flex-shrink: 0; opacity: 0.5; } .post-list #archive:hover .archive-header { color: var(--text-p1); } .post-list #archive:hover .archive-header:after { background: #f4511e; } .post-list #cats { padding: 0; } .post-list #cats a.cat { display: flex; padding: 0.5em 1rem; border-radius: 6px; color: var(--text-p2); align-items: center; justify-content: space-between; font-weight: 500; font-size: 0.875rem; } .post-list #cats a.cat.child { padding-left: 2rem; } .post-list #cats a.cat .badge { font-weight: 700; font-family: 'Cascadia Code', Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif; opacity: 0.5; font-size: 0.75rem; } .post-list #cats a.cat:hover { background: var(--block-hover); color: var(--text-p0); } .post-list #tags { display: flex; flex-wrap: wrap; padding: 0; margin: 0 -4px; } .post-list #tags a.tag { display: inline-flex; align-items: center; position: relative; color: var(--text-p2); margin: 4px; padding: 0.5em 0.75rem; border-radius: 4px; background: var(--block); font-size: 0.8125rem; font-weight: 500; } .post-list #tags a.tag:before { content: '#'; margin-left: -2px; margin-right: 2px; opacity: 0.4; } .post-list #tags a.tag:hover { color: var(--text-p0); background: var(--block-hover); } .post-list #tags a.tag:hover:before { opacity: 1; } .md-text.error-page { text-align: center; margin-top: 2rem; } .md-text.error-page img#error { width: 30vw; max-height: 150px; margin-bottom: 2rem; } .md-text.error-page h1 { font-size: 4rem; margin-bottom: 0; } .md-text.error-page p.what, .md-text.error-page p.why { margin: 0.5em; } .md-text.error-page p.why { font-size: 0.8125rem; } .md-text.error-page a#back { margin: 2rem 0; display: inline-block; background: #fdb62f; color: #000; border: 2px solid #000; } @media screen and (max-width: 768px) { .md-text.error-page { margin-top: 4rem; } } .l_body { display: flex; margin: auto; padding: 0 var(--gap-l); justify-content: center; } .l_body .l_left { z-index: 8; width: var(--width-left); flex-shrink: 0; position: sticky; position: -webkit-sticky; top: 0; } .l_body .l_main { flex-shrink: 1; flex-grow: 1; width: 320px; max-width: var(--width-main); } @media screen and (max-width: 667px) { .mobile-only { display: block !important; } .l_body { padding: 0; } .l_body .l_left { position: fixed; transform: translateX(-320px); margin: 0; left: 0; background: var(--site-bg); box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 8px 0px rgba(0, 0, 0, 0.1), 0 8px 16px 0px rgba(0, 0, 0, 0.1); z-index: 9; } .l_body .l_main { max-width: 100%; } .l_body.mobile .l_left { transition: transform 0.3s ease-out; } .l_body.mobile.sidebar .l_left { transform: translateX(0px); } } .post-list { margin: 1rem; } .post-list .post-title:first-child { margin-top: 0.5rem; } .post-list .post-title { font-weight: 500; margin: 1.25rem 0 0.75rem 0; line-height: 1.2; font-size: 1.375rem; border-bottom: none; color: var(--text-p0); transition: color 0.2s ease-out; -moz-transition: color 0.2s ease-out; -webkit-transition: color 0.2s ease-out; -o-transition: color 0.2s ease-out; } @media screen and (max-width: 500px) { .post-list .post-title { font-size: 1.125rem; margin: 0.5rem 0; } } .post-list .wiki .post-title { margin-top: 0.5rem; } .post-list .post-card { display: block; margin: 1rem 0; border-radius: 12px; box-shadow: 0 2px 8px 0px rgba(0, 0, 0, 0.02); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; overflow: hidden; z-index: 0; background: var(--card); position: relative; } .post-list .post-card .excerpt { margin: 1rem 0; } @media screen and (max-width: 500px) { .post-list .post-card .excerpt { margin: 0.5rem 0; } } .post-list .post-card .excerpt > p { margin: 1rem 0; line-height: 1.5; } @media screen and (max-width: 500px) { .post-list .post-card .excerpt > p { margin: 0.5rem 0; } } .post-list .post-card .meta.cap { display: flex; flex-wrap: wrap; align-items: center; margin: 0.25rem 0; line-height: 1.5; } .post-list .post-card .meta.cap span + span { margin-left: 0.3rem; } .post-list .post-card .meta.cap span.pin { line-height: 0; } .post-list .post-card .meta.cap span.pin img { object-fit: contain; height: 1.5em; } .post-list .post-card:hover { box-shadow: 0 1px 4px 0px rgba(0, 0, 0, 0.1), 0 4px 16px 0px rgba(0, 0, 0, 0.1); } .post-list .post-card:hover img { transform: scale(1.02); filter: brightness(80%); } .post-list .md-text { padding: 1rem; } @media screen and (max-width: 500px) { .post-list .md-text { padding: 0.5rem 1rem; } } .post-list .md-text p { color: var(--text-p2); font-size: 0.875rem; } .post-list .post-card .post-cover { overflow: hidden; width: calc(100% + 2 * 1rem); border-radius: 0; margin-left: -1rem; margin-top: -1rem; margin-right: -1rem; background: var(--block); } .post-list .post-card .post-cover:not(.lazy) { transition: transform 1s ease-out; -moz-transition: transform 1s ease-out; -webkit-transition: transform 1s ease-out; -o-transition: transform 1s ease-out; } .post-list .post-card .post-cover img { object-fit: cover; width: 100%; border-radius: 0; height: 280px; } @media screen and (max-width: 900px) { .post-list .post-card .post-cover img { height: 240px; } } @media screen and (max-width: 768px) { .post-list .post-card .post-cover img { height: 220px; } } @media screen and (max-width: 425px) { .post-list .post-card .post-cover img { height: 200px; } } @media screen and (max-width: 375px) { .post-list .post-card .post-cover img { height: 180px; } } .post-list .post-card.post.photo .cover { position: relative; line-height: 0; } .post-list .post-card.post.photo .cover img { width: 100%; } .post-list .post-card.post.photo .cover .cover-info { padding: 1.5rem 1rem; position: absolute; line-height: 1.2; width: calc(100% - 1rem * 2); color: var(--text-p0); } .post-list .post-card.post.photo .cover .cover-info[position='top'] { top: 0; background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0)); } .post-list .post-card.post.photo .cover .cover-info[position='bottom'] { bottom: 0; background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2)); } .post-list .post-card.post.photo .cover .cover-info div + div { margin-top: 4px; } .post-list .post-card.post.photo .cover .cover-info .cap { font-size: 0.8125rem; color: unset; } .post-list .post-card.post.photo .cover .cover-info .title { font-weight: 500; font-size: 1.375rem; } @media screen and (max-width: 500px) { .post-list .post-card.post.photo .cover .cover-info { padding: 1rem; } .post-list .post-card.post.photo .cover .cover-info div + div { margin-top: 2px; } .post-list .post-card.post.photo .cover .cover-info .title { font-size: 1.125rem; } .post-list .post-card.post.photo .cover .cover-info .cap { font-size: 0.75rem; } } .post-list .post-card.post.photo h2 { margin: 0.25rem 0; font-size: 1.125rem; } .post-list .post-card.wiki article { display: flex; flex-wrap: wrap; transition: box-shadow 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out; justify-content: center; padding: 1rem 0.5rem; } .post-list .post-card.wiki article .preview { display: flex; width: 200px; margin: 1rem 0.5rem; align-items: center; } @media screen and (min-width: 950px) { .post-list .post-card.wiki article .preview { margin: 1rem; } } .post-list .post-card.wiki article .preview img { object-fit: contain; } .post-list .post-card.wiki article .preview img:not(.lazy) { transition: transform 0.75s ease-out; -moz-transition: transform 0.75s ease-out; -webkit-transition: transform 0.75s ease-out; -o-transition: transform 0.75s ease-out; } .post-list .post-card.wiki article .excerpt { margin: 1rem 0.5rem; min-width: 280px; flex: 1; overflow: hidden; word-wrap: break-word; } @media screen and (min-width: 950px) { .post-list .post-card.wiki article .excerpt { margin-right: 2rem; } } .post-list .post-card.wiki article .excerpt p:last-child { margin-bottom: 0; } .l_main { position: relative; padding-bottom: calc(1 * var(--gap-l)); } @media screen and (min-width: 1400px) { .l_main { margin-left: calc(2 * var(--gap-l)); margin-right: calc(2 * var(--gap-l) + var(--width-left) / 2); } } @media screen and (min-width: 667px) { .l_main { padding-top: calc(2 * var(--gap-l)); } } @media screen and (max-width: 667px) { .l_main { padding-top: 1rem; } } .l_main header { margin: 2rem 1rem 1rem; } .l_main header .logo-wrap { margin: 0; } .md-text { max-width: 100%; padding: 1rem; color: var(--text-p1); line-height: 1.7; word-break: break-word; } .md-text:first-child { margin-top: 0; } .md-text.excerpt p { font-size: 0.875rem; margin: 1em 0; } h1.article-title { margin-top: 0.5em; margin-bottom: 1em; line-height: 1.2; color: var(--text-p0); } .md-text.content { position: relative; padding-bottom: 2rem; overflow: hidden; } .md-text.content.indent > p:not([class]) { text-indent: calc(0.9375rem * 2); text-align: left; } .md-text.content.indent > p:not([class]) a { text-indent: 0; } .md-text.content.indent h1, .md-text.content.indent h2, .md-text.content.indent h3, .md-text.content.indent h4, .md-text.content.indent h5, .md-text.content.indent h6 { text-align: center; } .md-text.content.indent > h2:not([class]) { border-bottom: none; } .md-text.content > :first-child:not(h1) { margin-top: 0; } .md-text.content h1:not(:first-child) { margin-top: 2em; } .md-text.content h2 { margin-bottom: 1rem; } .md-text.content h3, .md-text.content h4, .md-text.content h5, .md-text.content h6 { margin-bottom: 0.5rem; } .md-text.content h2, .md-text.content h3, .md-text.content h4, .md-text.content h5, .md-text.content h6 { color: var(--text-p0); padding-top: 1rem; line-height: 1.8; } .md-text.content h2:hover a.headerlink:before, .md-text.content h3:hover a.headerlink:before, .md-text.content h4:hover a.headerlink:before, .md-text.content h5:hover a.headerlink:before, .md-text.content h6:hover a.headerlink:before { opacity: 1; } .md-text.content:first-child { padding-top: 0; } .md-text ul:not(:last-child), .md-text ol:not(:last-child) { padding-bottom: 0.5rem; margin: 0; } .md-text blockquote p, .md-text ul p, .md-text ol p, .md-text blockquote ul, .md-text ul ul, .md-text ol ul, .md-text blockquote ol, .md-text ul ol, .md-text ol ol { font-size: 0.875rem; line-height: 1.5; } .md-text blockquote p code, .md-text ul p code, .md-text ol p code, .md-text blockquote ul code, .md-text ul ul code, .md-text ol ul code, .md-text blockquote ol code, .md-text ul ol code, .md-text ol ol code { font-size: inherit; padding: 0; background: none; } .md-text p *, .md-text blockquote *, .md-text .tag-plugin *, .md-text ul *, .md-text ol *, .md-text .highlight *, .md-text table * { --gap-p: var(--gap-p-compact); } .md-text p, .md-text ul, .md-text ol { margin-top: calc(var(--gap-p) - 4px); margin-bottom: calc(var(--gap-p) - 4px); } .md-text .tag-plugin, .md-text iframe { margin-top: var(--gap-p); margin-bottom: var(--gap-p); } .md-text iframe { display: block; } .md-text.content a.headerlink:before { opacity: 0; content: '#'; position: absolute; margin-left: -0.75em; } .md-text.content h2 { margin-top: 2rem; border-bottom: 1px solid var(--block-border); font-weight: 400; } .md-text.content h3 { margin-top: 1.5rem; font-weight: 400; } .md-text.content h4, .md-text.content h5, .md-text.content h6 { font-weight: 500; } .md-text.content h1 + h2 { margin-top: -0.5rem; } .md-text.content h2 + h3 { margin-top: -0.5rem; } .md-text.content h3 + h4 { margin-top: -0.5rem; } .md-text.content h4 + h5 { margin-top: -0.5rem; } .md-text.content h5 + h6 { margin-top: -0.5rem; } .md-text p { font-size: 0.9375rem; } .md-text pre { -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; } .md-text .center { align-self: center; } .md-text > div { margin: var(--gap-p) 0; } .md-text img { border-radius: 6px; margin: auto; display: block; } .md-text p:not([class]) a:not([class]), .md-text li:not([class]) a:not([class]) { position: relative; padding: 2px 0; text-decoration: none; line-height: 1.2; } .md-text p:not([class]) a:not([class]):before, .md-text li:not([class]) a:not([class]):before { content: ''; position: absolute; border-radius: 2px; bottom: 0; left: 0; right: 0; height: 1px; opacity: 0.8; background: var(--theme-link); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } .md-text p:not([class]) a:not([class]):hover, .md-text li:not([class]) a:not([class]):hover { border-bottom: none; color: var(--theme-link); z-index: 0; } .md-text p:not([class]) a:not([class]):hover:before, .md-text li:not([class]) a:not([class]):hover:before { height: 100%; opacity: 0.2; z-index: -1; bottom: 0; left: -2px; right: -2px; } .md-text .aplayer { border-radius: 12px; } img.lazy { transition: transform 0.5s ease-out, filter 0.28s ease-out; -moz-transition: transform 0.5s ease-out, filter 0.28s ease-out; -webkit-transition: transform 0.5s ease-out, filter 0.28s ease-out; -o-transition: transform 0.5s ease-out, filter 0.28s ease-out; } img.lazy:not(.loaded) { filter: blur(8px); -webkit-filter: blur(8px); } img.lazy.loaded, img.lazy.error { filter: none; -webkit-filter: none; } .group-body .site-card .card-link > img { transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out; } .group-body .user-card .card-link > img { transition: box-shadow 0.2s ease-out, transform 0.2s ease-out, filter 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out, filter 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out, filter 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, transform 0.2s ease-out, filter 0.2s ease-out; } :root { --swiper-theme-color: #f4511e !important; } .swiper { width: 100%; border-radius: 4px; --gap-p: 2rem; } .swiper:not(.swiper-initialized) { display: none; } div.swiper-slide { text-align: center; display: -webkit-box; display: -ms-flexbox; display: -webkit-flex; display: flex; align-self: center; -webkit-box-pack: center; -ms-flex-pack: center; -webkit-justify-content: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; -webkit-align-items: center; align-items: center; width: 50%; } div.swiper-slide img { border-radius: 4px; } .swiper[width='max'] .swiper-slide { width: 100%; } .swiper[width='min'] .swiper-slide { width: 25%; } .swiper[effect='cards'] .swiper-slide { max-width: 75%; } .swiper-button-prev, .swiper-button-next { padding: 1rem 0.25rem; margin-top: -2rem !important; border-radius: 40px; background: rgba(255, 255, 255, 0.25); transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; --swiper-theme-color: var(--text-p0) !important; } .swiper-button-prev:after, .swiper-button-next:after { font-size: 1.2rem !important; font-weight: 700 !important; color: var(--swiper-theme-color); } .swiper-button-prev:hover, .swiper-button-next:hover { background: #fff !important; --swiper-theme-color: #7e57c2 !important; } .swiper-button-prev:after { transform: translateX(-1px); } .swiper-button-next:after { transform: translateX(1px); } img[fancybox='true'] { cursor: zoom-in; } .swiper-slide { cursor: zoom-in; } .highlight { position: relative; } .highlight .code .copy-btn { position: absolute; top: 0; right: 0; padding: 4px 0.5rem; opacity: 0; font-weight: 700; color: var(--theme); cursor: pointer; } .highlight:hover .copy-btn { opacity: 0.25; } .highlight .code .copy-btn:hover { color: var(--theme); opacity: 0.75; } .highlight .code .copy-btn.success { color: #3dc550; opacity: 0.75; } .highlight .code .copy-btn.warning { color: #fa6400; opacity: 0.75; } .cmt-body.twikoo { --twikoo-lighttext: #ef794f; --twikoo-secondtext: #909094; --twikoo-emoji-background: #f8f8f8; --twikoo-theme: #f4511e; margin-top: 1.5rem; } .cmt-body.twikoo .tk-content .vemoji, .cmt-body.twikoo .tk-content .tk-owo-emotion { width: unset; border-radius: 0; max-height: 24px; max-width: 100px; } .cmt-body.twikoo .tk-content img { max-width: 400px; max-height: 400px; border-radius: 8px; } .OwO .OwO-body { background: var(--twikoo-emoji-background) !important; color: var(--text-p1) !important; } .OwO .OwO-body .OwO-items .OwO-item img { max-height: 26px; width: unset; } .twikoo .el-input-group__append, .twikoo .el-input-group__prepend, .twikoo .el-input__inner, .twikoo .el-textarea__inner, .twikoo .el-button:not(.el-button--primary):not(.el-button--text), .twikoo .tk-comments-count, .twikoo .tk-content, .twikoo .tk-preview-container { color: var(--text-p1) !important; } .twikoo .el-button:not(.el-button--primary):not(.el-button--text):active, .twikoo .el-button:not(.el-button--primary):not(.el-button--text):focus, .twikoo .el-button:not(.el-button--primary):not(.el-button--text):hover { color: var(--twikoo-theme) !important; } .twikoo .tk-action-icon svg { color: var(--text-p1) !important; } .twikoo b, .twikoo strong { color: var(--twikoo-lighttext); } .twikoo a { cursor: pointer; } .twikoo .tk-time, .twikoo .tk-extras { color: var(--twikoo-secondtext); } .twikoo .tk-expand { width: auto; border: none; padding: 6px 2rem; border-radius: 4px; background: var(--block); color: var(--text-p1); line-height: 2; font-size: 14px; font-weight: 500; } .twikoo .tk-expand:hover { background: var(--block-hover); } .twikoo .tk-comment { margin-top: 0 !important; margin-bottom: 1rem; border: 1px dashed var(--block-border); padding: 1rem; border-radius: 4px; background: var(--card); } .twikoo .tk-comment:hover { border-color: var(--twikoo-theme); } .twikoo .tk-main .tk-comment { margin-top: 1rem !important; margin-bottom: 0; } .twikoo .tk-submit { padding: 1rem 1rem 0 1rem; border-radius: 4px; background: var(--card); } .twikoo .tk-tag { vertical-align: 0.1em !important; } .twikoo .tk-comments-title .tk-comments-count { margin-top: 15px; color: var(--text-p1); } .twikoo .tk-comments-title .tk-comments-count span:nth-child(1) { font-size: 1.5rem; font-weight: 700; } .twikoo .tk-comments-title .tk-comments-count span:nth-child(2) { font-size: 1rem; } .twikoo .tk-comments-no { color: var(--text-p1); } @media (prefers-color-scheme: dark) { .cmt-body.twikoo { --twikoo-lighttext: #f2b94b; --twikoo-secondtext: #a1a2b8; --twikoo-theme: #409eff; } } /* 文章显示标签 */ .bread-nav #tag .breadcrumb-link, .post-list .post-card span.tag { background-color: #76a3b3cc; color: #fff; padding: 0em 0.375em 0.08em !important; border-radius: 0.3em; margin: 0.25em !important; display: inline-flex; }"},{"title":"Friends","path":"/friends/index.html","content":"⚠添加友链 请在本人的动态友链仓库issues，根据模板提交信息，待管理员审核通过即可。 若您不方便使用 Github Issue，也可以直接在本贴下留言 我的友链 12345678&#123; &quot;title&quot;: &quot;Achuan-2&quot;, &quot;url&quot;: &quot;https://achuan-2.github.io/&quot;, &quot;avatar&quot;: &quot;https://fastly.jsdelivr.net/gh/Achuan-2/Picbed@pic/assets/1666805474234Achuan.jpg&quot;, &quot;screenshot&quot;: &quot;https://fastly.jsdelivr.net/gh/Achuan-2/Picbed@pic/assets/1666805527244Snipaste_2022-10-27_01-31-59.png&quot;, &quot;description&quot;: &quot;一条没有故事的巛&quot;, &quot;keywords&quot;: &quot;生物信息, 编程&quot;&#125;"}]