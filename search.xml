<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生活窍门丨为什么油性笔可以写在塑料上</title>
      <link href="//post/life-tips-gun-why-can-oily-pen-can-be-written-on-plastic-1ruwyi.html"/>
      <url>//post/life-tips-gun-why-can-oily-pen-can-be-written-on-plastic-1ruwyi.html</url>
      
        <content type="html"><![CDATA[<p>之前都是用水性签字笔写标签纸，写完很容易被弄花<br>今天才发现用油性笔写，简直速干，完全不用怕字迹会被弄花，可以轻松写在塑料、金属、陶瓷上。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/image-20240921143634-pafxno2.png"></div></div><h2 id="思考为什么油性笔可以写在塑料上"><a class="markdownIt-Anchor" href="#思考为什么油性笔可以写在塑料上"></a> 思考：为什么油性笔可以写在塑料上</h2><p>油性笔的墨水通常由以下几种成分组成：</p><ol><li><strong>溶剂</strong>：油性笔的墨水中含有有机溶剂，如甲苯、二甲苯或醇类。这些溶剂能够迅速挥发，使墨水在塑料表面快速干燥。</li><li><strong>颜料或染料</strong>：这些是墨水中的着色成分，提供颜色。</li><li><strong>树脂</strong>：树脂成分使墨水具有粘性，能够附着在光滑的表面上，如塑料。</li><li><strong>添加剂</strong>：这些成分可以改善墨水的流动性、耐水性和耐光性。</li></ol><p>塑料表面通常是光滑且非多孔的，这使得普通的水性笔墨水难以附着。然而，油性笔的墨水由于其特殊的成分，可以很好地附着在这些光滑的表面上</p><p>油性笔中的有机溶剂能够轻微溶解塑料表面的一层薄膜，使墨水中的颜料和树脂更容易嵌入到塑料表面。同时，有机溶剂迅速挥发，使墨水在塑料表面快速干燥，树脂成分也提供了足够的粘附力，使得墨水能够牢固地附着在塑料表面，不容易被擦掉。</p><p>综上所述，油性笔能够在塑料上书写，主要是因为其墨水中含有的有机溶剂和树脂成分能够有效地附着在光滑的塑料表面，并且快速干燥形成牢固的标记。这些特性使得油性笔成为在塑料等光滑表面上书写的理想工具。</p>]]></content>
      
      
      <categories>
          
          <category> 生活百科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>协方差分析 (ANCOVA)</title>
      <link href="//post/jiefang-poor-analysis-ancova-rxm1i.html"/>
      <url>//post/jiefang-poor-analysis-ancova-rxm1i.html</url>
      
        <content type="html"><![CDATA[<p>协方差分析（Analysis of Covariance，简称ANCOVA）是一种将回归分析与方差分析相结合的一种分析方法。用来比较不同组之间的均值，同时控制一个或多个协变量（即可能影响结果的连续变量）的影响。</p><p>多组数据的比较可以用方差分析，但是如果不同样本的基线本来就不一致，直接分析测试结果数据，直接用方差分析可能存在问题。这时候就需要使用协方差分析。</p><p><strong>协方差分析基本思想</strong>是将难以控制的因素对因变量Y的影响看作是协变量X，建立协变量X与因变量Y的线性回归关系，利用该回归关系将协变量X的值化为相等，计算因变量Y的修正，再对因变量Y的修正均数进行比较。</p><p><strong>协方差分析的例子：</strong></p><ul><li>在研究不同教学方法对学生考试成绩的影响时，学生的初始能力（比如之前的考试成绩）也会影响最终成绩。为了公平地比较不同教学方法的效果，要去除培训前成绩差异的影响。</li><li>研究对象分为两组，接受不同治疗（如治疗组和安慰组），每组分别在治疗前和治疗后测量观察指标（如血压值），比较治疗前后的血压值时，需要去除不同研究对象本身血压值就有差异的影响。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240909003917-xwflnz1.png"></div></div><h2 id="科学研究中的协方差分析应用"><a class="markdownIt-Anchor" href="#科学研究中的协方差分析应用"></a> 科学研究中的协方差分析应用</h2><blockquote><p>来源：<a href="https://zhuanlan.zhihu.com/p/80420026">通过一个简单例子，通俗讲下协方差分析 - 知乎 (zhihu.com)</a></p></blockquote><p>临床中经常碰到这种设计：研究对象分为两组，接受不同治疗（如治疗组和安慰组），每组分别在治疗前和治疗后测量观察指标（如血压值）。目的是比较两种治疗方式是否有差异。这种情况你会怎么处理呢？</p><p>我看过不少国内的文章，<strong>他们的做法有这么几种：</strong> （1）直接比较治疗后的两组指标，如血压值，用t检验比较；（2）先比较治疗前两组的差异，证明无统计学意义，然后再比较治疗后两组的差异；（3）先比较试验组治疗前和治疗后差异，再比较对照组治疗前和治疗后差异，如果试验组治疗后和治疗前差异更大，说明试验组更有效。</p><p><strong>第一种做法</strong>是肯定有问题的，因为它根本不考虑两组在疗前的差异。<strong>为什么有问题呢？</strong> 比方说，下面这个简单的例子：</p><p>有甲乙丙3个学生，期末考试成绩分别为90、85、80，如果让你判断，你觉得哪个学生更优秀一些（只考虑成绩）？当然了，你可以毫不犹豫地说，甲最优秀，因为成绩最高。但确实如此吗？</p><p>再给你一组数据，甲乙丙3个人的刚入学时的成绩，分别是95、85、60。这时候再让你说，谁更优秀呢？我想，你可能要犹豫一下了。虽然甲的期末成绩最高，但是相比入学成绩而言，他是下降了。丙的期末成绩最低，可是相对入学成绩而言，他上升了很多。作为一个老师，也许他不会说，甲最优秀，而会说，丙最优秀。因为成绩上升很快。</p><p>所以，很明显，我们是<strong>不应该只看治疗后两组差异的</strong>，这说明不了什么问题。</p><p><strong>第二种做法，相对好一些</strong>，起码通过统计学方法说明两组治疗前无统计学差异。但是，统计学差异有时未必可靠，跟例数有关的，如果例数少的话，即使两组治疗前差别较大，也是无统计学差异。所以，也不是很好。</p><p><strong>第三种做法</strong>，听起来似乎也有理，但仔细想想。试验组的治疗后和治疗前差异比对照组的大，是反映了一种真实情况吗？还是需要有统计学来证实的。比如，试验组的血压值治疗后与治疗前相比，降低了2mmHg，对照组降低了1.8mmHg，仅从数字来看，试验组降低更多，但有意义吗？很难说。</p><p><strong>比较两组差异的正确做法</strong></p><p>真正想说明两组差异的话，<strong>比较好的做法有两种：</strong></p><p>（1）采用<strong>倍差法</strong>，具体是：两组分别求出服药后和服药前的血压值差值，这样就变成了两组差值的比较，可采用t检验或方差分析。由于做了两次差值，所以叫倍差法。</p><p>（2）采用<strong>协方差分析</strong>，比较两组治疗后的血压值，但是以服药前血压值作为协变量，校正其影响。实际上是比较两组校正的服药后血压值。</p><p>第一种方法很简单，只是一种思路而已，仍然是t检验或方差分析。这里就不多说。第二种方法是协方差分析，本文主要介绍一下。</p><p><strong>协方差分析的思想大概就是：</strong> 把治疗前两组的数值作为一个协变量，比较两组治疗后差异的时候，校正这一协变量。这样可以得到校正后的两组治疗后均值，比较两组的校正均值。比如说，a和b两组治疗后均值分别为62和56，但是如果校正协变量后，很可能就变成了59和59，这样比较两个校正均值59和59，两组就没有统计学差异了。</p><h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2><p><strong>协变量、因变量、自变量</strong></p><ul><li><p>协变量（Covariate）</p><p>协变量是那些可能影响因变量的变量，但不是主要研究对象。通过控制这些变量，可以更准确地评估自变量对因变量的影响。比如研究教学方法对学生成绩影响时，协变量是学生之前的成绩。</p></li><li><p>因变量（Dependent Variable）</p><p>因变量是研究中被测量的结果或反应变量。比如研究教学方法对学生成绩影响时，因变量是不同的研究教学方法。</p></li><li><p>自变量（Independent Variable）</p><p>自变量是研究中被操纵或分类的变量，用于探讨其对因变量的影响。比如研究教学方法对学生成绩影响时，自变量是学生之后的成绩。</p></li></ul><p><strong>主效应和交互效应</strong></p><ul><li><strong>主效应</strong>：自变量对因变量的直接影响，不考虑协变量。</li><li><strong>交互效应</strong>：自变量和协变量之间的交互作用对因变量的影响</li></ul><h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2><ol><li>所关注的变量应该是连续的、正态分布的，各组方差齐性。各组应该是独立的（互不相关），并且应该有足够的数据（每组有 5 个以上的值）。</li><li>因变量与协变量之间的回归关系必须是线性的。</li><li>自变量与因变量之间没有交互作用。<strong>交互作用也可以认为代表斜率，没有显著作用，说明斜率不存在显著差异。</strong> 只有当分类变量和连续变量之间<strong>没有显著的交互作用，才可以进行协方差分析。</strong></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240908221542-z8o47a0.png" alt="以协变量为x轴，以因变量为y轴，如果交互作用显著，则会出现类似左图和中图的情况。"></div><div class="image-meta"><span class="image-caption center">以协变量为x轴，以因变量为y轴，如果交互作用显著，则会出现类似左图和中图的情况。</span></div></div><h2 id="分析策略"><a class="markdownIt-Anchor" href="#分析策略"></a> 分析策略</h2><ul><li>如果只有组别变量显著，则放弃协变量。 从模型中删除变量，这样就得到了一个<strong>方差分析</strong>。</li><li>如果只有协变量显著，则放弃组别变量。 从模型中提取一个变量，就可以得到一个<strong>简单的线性回归</strong>结果</li><li>如果交互作用显著，即协变量对因变量的影响因组别的不同而不同。在这种情况下，<strong>需要考虑交互作用对因变量的影响</strong>。可以对不同组别分别进行回归分析，以更详细地了解协变量在不同组别中的效应。</li></ul><h2 id="matlab-实现ancova-分析示例"><a class="markdownIt-Anchor" href="#matlab-实现ancova-分析示例"></a> Matlab 实现ANCOVA 分析示例</h2><p>数据：记录不同学生经过不同的教学方法后的考试成绩前后变化</p><p>分析：需要知道不同教学方法有无差异。考虑到不同学生的考试成绩水平不一样，不能仅仅只考虑教学后的考试成绩，还需要考虑到不同学生的原本水平。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 定义数据</span></span><br><span class="line">Method  = repelem(&#123;<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>&#125;, <span class="number">4</span>)&#x27;;</span><br><span class="line">InitialScore = [<span class="number">67</span>, <span class="number">88</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">92</span>, <span class="number">77</span>, <span class="number">74</span>, <span class="number">88</span>, <span class="number">91</span>, <span class="number">88</span>, <span class="number">82</span>, <span class="number">80</span>]&#x27;;</span><br><span class="line">FinalScore= [<span class="number">77</span>, <span class="number">89</span>, <span class="number">74</span>, <span class="number">69</span>, <span class="number">88</span>, <span class="number">93</span>, <span class="number">94</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">81</span>, <span class="number">83</span>, <span class="number">79</span>]&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 将Method转换为分类变量</span></span><br><span class="line">Method = categorical(Method);</span><br><span class="line"><span class="comment">% 创建表格</span></span><br><span class="line">data = <span class="built_in">table</span>(Method, InitialScore, FinalScore);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">data =</span><br><span class="line"></span><br><span class="line">  <span class="number">12</span>×<span class="number">3</span> <span class="built_in">table</span></span><br><span class="line"></span><br><span class="line">    Method    InitialScore    FinalScore</span><br><span class="line">    ______    ____________    __________</span><br><span class="line"></span><br><span class="line">      A            <span class="number">67</span>             <span class="number">77</span>  </span><br><span class="line">      A            <span class="number">88</span>             <span class="number">89</span>  </span><br><span class="line">      A            <span class="number">75</span>             <span class="number">74</span>  </span><br><span class="line">      A            <span class="number">85</span>             <span class="number">69</span>  </span><br><span class="line">      B            <span class="number">92</span>             <span class="number">88</span>  </span><br><span class="line">      B            <span class="number">77</span>             <span class="number">93</span>  </span><br><span class="line">      B            <span class="number">74</span>             <span class="number">94</span>  </span><br><span class="line">      B            <span class="number">88</span>             <span class="number">90</span>  </span><br><span class="line">      C            <span class="number">91</span>             <span class="number">85</span>  </span><br><span class="line">      C            <span class="number">88</span>             <span class="number">81</span>  </span><br><span class="line">      C            <span class="number">82</span>             <span class="number">83</span>  </span><br><span class="line">      C            <span class="number">80</span>             <span class="number">79</span>  </span><br></pre></td></tr></table></figure><p>Matlab 有aoctool函数，可以进行ANCOVA分析</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% 使用aoctool进行ANCOVA分析</span><br><span class="line">alpha = 0.05;</span><br><span class="line"></span><br><span class="line">aoctool(InitialScore, FinalScore, Method, alpha);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-09-09_00-12-22-20240909001223-fhrn7hm.png"></div></div><p>会绘制三个Figure</p><ol><li>ANOCOVA Prediction Plot：绘制三组协变量和因变量的相关性，并进行回归。可以简单查看协变量和因变量是否成线性相关关系，若不成立，则不能进行ANOCOVA分析</li><li>ANOCOVA Coefficients：展示三组回归的系数</li><li>ANOCOVA Test Results：展示自变量、协变量和自变量与协变量相互作用对因变量的影响，如果相互作用的pvalue&lt;0.05，则说明三组斜率显著不一样，则不能进行ANOCOVA分析</li></ol><p>ANOCOVA Test Results的结果其实等效于线性回归模型<code>FinalScore ~ InitialScore * Method</code>经过ANOVA分析：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 拟合线性模型</span></span><br><span class="line">model = fitlm(data, <span class="string">&#x27;FinalScore ~ InitialScore * Method&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示ANOVA表格</span></span><br><span class="line">anovaTable = anova(model);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示结果</span></span><br><span class="line"><span class="built_in">disp</span>(anovaTable);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">                       SumSq     DF    MeanSq       F         pValue </span><br><span class="line">                       ______    __    ______    ________    ________</span><br><span class="line"></span><br><span class="line">Method                 <span class="number">387.51</span>    <span class="number">2</span>     <span class="number">193.76</span>      <span class="number">5.5648</span>    <span class="number">0.042975</span></span><br><span class="line">InitialScore           <span class="number">1.4047</span>    <span class="number">1</span>     <span class="number">1.4047</span>    <span class="number">0.040343</span>     <span class="number">0.84745</span></span><br><span class="line">Method:InitialScore    <span class="number">49.186</span>    <span class="number">2</span>     <span class="number">24.593</span>     <span class="number">0.70633</span>     <span class="number">0.53031</span></span><br><span class="line">Error                  <span class="number">208.91</span>    <span class="number">6</span>     <span class="number">34.818</span>   </span><br></pre></td></tr></table></figure><p>从结果表格可以看到，交互作用项不显著，这意味着InitialScore对FinalScore影响在不同教学方法之间没有差异。因此可以舍弃交互作用项，方差分析模型变为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 拟合线性模型</span></span><br><span class="line">model = fitlm(data, <span class="string">&#x27;FinalScore ~ InitialScore + Method&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示ANOVA表格</span></span><br><span class="line">anovaTable = anova(model);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示结果</span></span><br><span class="line"><span class="built_in">disp</span>(anovaTable);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">                SumSq     DF    MeanSq       F        pValue </span><br><span class="line">                ______    __    ______    _______    ________</span><br><span class="line"></span><br><span class="line">Method          <span class="number">387.51</span>    <span class="number">2</span>     <span class="number">193.76</span>     <span class="number">6.0057</span>    <span class="number">0.025542</span></span><br><span class="line">InitialScore    <span class="number">1.4047</span>    <span class="number">1</span>     <span class="number">1.4047</span>    <span class="number">0.04354</span>     <span class="number">0.83993</span></span><br><span class="line">Error            <span class="number">258.1</span>    <span class="number">8</span>     <span class="number">32.262</span>   </span><br></pre></td></tr></table></figure><p>由于输出显示InitialScore对FinalScore的影响也不显著，因此也去掉了这一项，最终模型为</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">% 拟合线性模型</span><br><span class="line">model = fitlm(data, &#x27;FinalScore ~ Method&#x27;);</span><br><span class="line"></span><br><span class="line">% 显示ANOVA表格</span><br><span class="line">anovaTable = anova(model);</span><br><span class="line"></span><br><span class="line">% 显示结果</span><br><span class="line">disp(anovaTable);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">          SumSq    DF    MeanSq      F        pValue </span><br><span class="line">          _____    __    ______    ______    ________</span><br><span class="line"></span><br><span class="line">Method    <span class="number">405.5</span>    <span class="number">2</span>     <span class="number">202.75</span>    <span class="number">7.0318</span>    <span class="number">0.014485</span></span><br><span class="line">Error     <span class="number">259.5</span>    <span class="number">9</span>     <span class="number">28.833</span>    </span><br></pre></td></tr></table></figure><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><ul><li><p>协方差分析为什么要看协变量和组别的相互作用</p><ul><li>ANCOVA假设协变量和因变量之间的关系在所有组别中是一致的。如果协变量和组别之间存在显著的相互作用，这意味着协变量对因变量的影响在不同组别之间是不一致的。</li></ul></li><li><p>如何理解“ANCOVA建立协变量X与因变量Y的线性回归关系，利用该回归关系将协变量X的值化为相等，计算因变量Y的修正均值，再对因变量Y的修正均数进行比较。”这句话</p><p>可以看下图</p></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-09-09_00-21-45-20240909002155-bat9f04.png"></div></div><p>ANCOVA就是以协变量为x轴，以因变量为y轴，对各组进行回归分析，看各组因变量随着协变量的变化是否有显著差异。从上图中就可以看到，当各组协变量通过回归都相等时，各组因变量值的差异，从而计算显著差异。</p><p><strong>❓但是说计算因变量Y的修正均值我没有搞懂是怎么计算修正均值的？是直接线性回归模型套ANOVA就可以计算均值并计算显著性了嘛？</strong></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-09-09_00-46-50-20240909004654-szt9lvd.png"></div></div><p>调整均数是对各组求协变量的均值，然后得到一个总协变量均值，根据回归关系，得到各组的调整均值</p><p>公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mi>i</mi></msub><mo>−</mo><msub><mi>β</mi><mrow><mi>y</mi><mi>x</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">(</mo><msub><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bar{y}&#x27;_i = \bar{y}_i - \beta_{yx(e)} (\bar{x}_i - \bar{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">x</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><strong>❓那么是怎么根据校正均值进行方差分析的？</strong></p><p>暂时不管了</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/80420026">通过一个简单例子，通俗讲下协方差分析 - 医小咖的文章 - 知乎</a></li><li><a href="https://www.cnblogs.com/think-and-do/p/6536106.html">第十章 协方差分析 - Thinkando - 博客园 (cnblogs.com)</a></li><li><a href="https://en.wikipedia.org/wiki/Analysis_of_covariance">Analysis of covariance - Wikipedia</a></li><li><a href="https://www.reneshbedre.com/blog/ancova.html">ANCOVA using R and Python (with examples and code) (reneshbedre.com)</a></li><li><a href="https://www.geeksforgeeks.org/how-to-perform-an-ancova-in-python/">How to Perform an ANCOVA in Python - GeeksforGeeks</a></li><li><a href="https://ww2.mathworks.cn/help/stats/analysis-of-covariance.html">Analysis of Covariance - MATLAB &amp; Simulink - MathWorks 中国</a></li><li><a href="https://r.qcbs.ca/workshop04/book-en/analysis-of-covariance-ancova.html">Chapter 6 Analysis of covariance (ANCOVA) | Workshop 4: Linear models (qcbs.ca)</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 统计分析 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ANOVA方差分析</title>
      <link href="//post/anova-variance-analysis-g7i0c.html"/>
      <url>//post/anova-variance-analysis-g7i0c.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是anova方差分析"><a class="markdownIt-Anchor" href="#什么是anova方差分析"></a> 什么是ANOVA方差分析？</h2><p>ANOVA（Analysis of Variance，方差分析）是一种统计方法，在某些场合也被称为F检验（不过F检验指的实际是方差齐性检验），它用于比较三个或更多样本组之间的均值差异。它通过分析组内和组间的方差，来判断不同组别之间的均值是否存在显著差异。ANOVA的基本思想是，如果不同组的均值存在显著差异，那么这些组之间的方差应当大于组内的方差。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902165630-1e0jixr.png" alt="如果不同组的均值存在显著差异，那么这些组之间的方差应当大于组内的方差"></div><div class="image-meta"><span class="image-caption center">如果不同组的均值存在显著差异，那么这些组之间的方差应当大于组内的方差</span></div></div><p>方差分析依靠F-分布为概率分布的依据，利用平方和（Sum of square）与自由度（Degree of freedom）所计算的组间与组内均方（Mean of square）估计出F值，若有显著差异则考量进行事后比较或称多重比较（Multiple comparison），较常见的为<a href="https://en.wikipedia.org/wiki/Scheff%C3%A9%27s_method">Scheffé's method</a>、<a href="https://en.wikipedia.org/wiki/Tukey%27s_range_test" title="en:Tukey's range test">Tukey's range test</a>与<a href="https://zh.wikipedia.org/wiki/%E9%82%A6%E8%B4%B9%E7%BD%97%E5%B0%BC%E6%A0%A1%E6%AD%A3">Bonferroni correction</a>，用于具体探讨其各组之间的差异。。</p><p>在方差分析的基本运算概念下，依照所感兴趣的因子数量而可分为单因子方差分析、双因子方差分析、多因子方差分析三大类，依照因子的特性不同而有三种类型，固定效应方差分析（fixed-effect analysis of variance）、随机效应方差分析（random-effect analysis of variance）与混合效应方差分析（Mixed-effect analaysis of variance）</p><p>方差分析优于两组比较的T检验之处，在于后者会导致多重比较（multiple comparisons）的问题而致使<a href="https://zh.wikipedia.org/wiki/%E5%9E%8B%E4%B8%80%E9%8C%AF%E8%AA%A4%E8%88%87%E5%9E%8B%E4%BA%8C%E9%8C%AF%E8%AA%A4" title="第一类错误与第二类错误">第一类错误</a>（假阳性导致的假科学论断）的机会增高，因此比较多组平均数是否有差异则是方差分析的主要命题。</p><h2 id="anova分析的适用条件"><a class="markdownIt-Anchor" href="#anova分析的适用条件"></a> ANOVA分析的适用条件</h2><ul><li><strong>数据独立性</strong>：各组样本之间必须是独立的。</li><li><strong>正态性</strong>：各组样本数据应服从正态分布。</li><li><strong>方差齐性</strong>：各组样本的方差应该相等。</li><li><strong>因变量是连续变量</strong>：因变量通常是连续的，且是定量数据。</li></ul><p>注意，ANOVA可以用于不均衡样本</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902193654-o01z626.png"></div></div><h2 id="anova-方差分析与其他检验方法的关系"><a class="markdownIt-Anchor" href="#anova-方差分析与其他检验方法的关系"></a> ANOVA 方差分析与其他检验方法的关系</h2><h3 id="t检验"><a class="markdownIt-Anchor" href="#t检验"></a> T检验</h3><ul><li><strong>t检验</strong>：主要用于比较两个独立样本或配对样本的均值差异。常见的有独立样本t检验和配对样本t检验。</li><li><strong>ANOVA</strong>：当需要比较三个或更多组的均值差异，不适合用t检验，适合用ANOVA方差分析。最常见的是单因素方差分析（One-Way ANOVA），它用于比较一个因素的多个水平对因变量的影响。</li></ul><h3 id="非参数检验替代方法"><a class="markdownIt-Anchor" href="#非参数检验替代方法"></a> 非参数检验替代方法</h3><p>ANOVA（Analysis of Variance）是一种常见的分析方法，但要求数据满足正态性、同方差等假设，适用范围受限。</p><p>下面是其非参数检验的替代方法</p><ul><li><strong>Kruskal-Wallis检验</strong>：这是单因素ANOVA的非参数替代方法，是非参数版的anova1。它用于比较三个或更多独立组的中位数是否相等。Kruskal-Wallis检验是基于数据的秩而非原始数据值的，实质上是两独立样本时的Mann-Whitney检验在多个独立样本下的推广。</li><li><strong>Friedman检验</strong>：Friedman检验又被称之为双因素秩方差分析，是非参数版的anova2。同anova2一样，待检验的数据也必须是均衡的。但是需要特别注意的是，Friedman检验和anova2检验不完全相同，anova2同时注意两个因素对待检验数据的影响，但是，Friedman检验只注重2个因素中的其中一个对待检验数据的影响，而另一个因素则是用来区分区组用的。（见<a href="https://blog.csdn.net/weixin_46271668/article/details/124339774">Frideman检验及matlab代码_friedman aligned rank代码检验-CSDN博客</a>）</li></ul><h2 id="anova分析的分类"><a class="markdownIt-Anchor" href="#anova分析的分类"></a> ANOVA分析的分类</h2><h3 id="根据因子数量分类"><a class="markdownIt-Anchor" href="#根据因子数量分类"></a> 根据因子数量分类</h3><ul><li><strong>单因子方差分析</strong>：用于一个因子下多个水平的均值比较。</li><li><strong>双因子方差分析</strong>：用于两个因子及其交互作用的分析。</li><li><strong>多因子方差分析</strong>：用于三个或更多因子的主效应和交互作用分析。</li></ul><h4 id="单因子方差分析"><a class="markdownIt-Anchor" href="#单因子方差分析"></a> 单因子方差分析</h4><p>单因子方差分析用于比较多个组的均值，只涉及一个因子（自变量）。</p><p><strong>例如</strong>：为了研究氮肥料使用量对水稻产量的影响，氮肥用量设低、中、高三个水平，分布使用N1，N2和N3表示</p><h4 id="双因子方差分析"><a class="markdownIt-Anchor" href="#双因子方差分析"></a> 双因子方差分析</h4><p>双因素方差分析分为<strong>无交互作用/有交互作用</strong>，对于<strong>有交互作用</strong>的双因素方差分析，则需要做<strong>重复实验</strong></p><p><strong>例如</strong>：为了研究肥料使用量对水稻产量的影响，某研究所做了氮（因素A）、磷（因素B）两种肥料施用量的二因素试验。氮肥用量设低、中、高三个水平，分布使用N1，N2和N3表示；磷肥用量设低、高2个水平，分别用P1，P2表示。</p><h4 id="多因子方差分析"><a class="markdownIt-Anchor" href="#多因子方差分析"></a> 多因子方差分析</h4><p><strong>定义</strong>：多因子方差分析涉及三个或更多因子，研究它们对因变量的影响及其交互作用。</p><p><strong>例如</strong>：研究教学方法、学习时间和学生背景（如性别、年龄）对考试成绩的影响。</p><h3 id="根据因子类型分类"><a class="markdownIt-Anchor" href="#根据因子类型分类"></a> 根据因子类型分类</h3><h4 id="固定效应模式fixed-effects-models"><a class="markdownIt-Anchor" href="#固定效应模式fixed-effects-models"></a> 固定效应模式（Fixed-effects models）</h4><p>用于方差分析模型中所考虑的因子为固定的情况，换言之，其所感兴趣的因子是来自于特定的范围。</p><p>例如，要比较五种不同的汽车销售量的差异，感兴趣的因子为五种不同的汽车，反因变量为销售量，该命题即限定了特定范围，因此模型的推论结果也将全部着眼在五种汽车的销售差异上，故此种状况下的因子便称为固定效应。</p><h4 id="随机效应模式random-effects-models"><a class="markdownIt-Anchor" href="#随机效应模式random-effects-models"></a> 随机效应模式（Random-effects models）</h4><p>不同于固定效应模式中的因子特定性，在随机效应中所考量的因子是来自于所有可能的母群体中的一组样本，因子方差分析所推论的并非着眼在所选定的因子上，而是推论到因子背后的母群体。</p><p>例如，借由一间拥有全部车厂种类的二手车公司，从所有车厂中随机挑选5种车厂品牌，用于比较其销售量的差异，最后推论到这间二手公司的销售状况。因此在随机效应模型下，研究者所关心的并非局限在所选定的因子上，而是希望借由这些因子推论<strong>背后的母群体特征</strong>。</p><h4 id="混合效应模式mixed-effects-models"><a class="markdownIt-Anchor" href="#混合效应模式mixed-effects-models"></a> 混合效应模式（Mixed-effects models）</h4><p>此种混合效应不会出现在单因子方差分析中，当双因子或多因子方差分析同时存在固定效应与随机效应时，此种模型便是典型的混合型模式。</p><h2 id="anova-分析的计算原理"><a class="markdownIt-Anchor" href="#anova-分析的计算原理"></a> ANOVA 分析的计算原理</h2><p>Anova的核心思想是将总体方差分解为两部分：</p><ol><li>组间方差（Between-group variance）：反映不同组别之间的差异。</li><li>组内方差（Within-group variance）：反映每个组内部的随机变异。</li></ol><p>Anova通过比较这两种方差，计算F统计量：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>组间方差</mtext><mtext>组内方差</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">F = \dfrac{\text{组间方差}}{\text{组内方差}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">组内方差</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">组间方差</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>这里的方差等于平方和除以自由度，组间的自由度为(组数-1)，组内自由度为组数*（样本量-1），方差分析各组的样本量可以不一样。</p><p><strong>如果F值较大，说明组间差异显著大于组内随机变异，我们就有理由认为各组之间存在真实差异</strong>。</p><p>具体公式：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902174356-89vlhqe.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902174400-ezackyr.png"></div></div><p>‍</p><h2 id="anova的应用步骤"><a class="markdownIt-Anchor" href="#anova的应用步骤"></a> Anova的应用步骤</h2><ol><li><p>提出假设：</p><ul><li>零假设（H0）：所有组别的均值相等</li><li>备择假设（H1）：至少有两个组别的均值不相等</li></ul></li><li><p>收集数据并计算F值</p></li><li><p>确定显著性水平（通常为0.05）</p></li><li><p>比较计算得到的F值与临界F值</p></li><li><p>得出结论：如果计算的F值大于临界F值，则拒绝零假设，认为存在显著差异</p></li></ol><h2 id="anova的代码实现"><a class="markdownIt-Anchor" href="#anova的代码实现"></a> Anova的代码实现</h2><h3 id="matlab"><a class="markdownIt-Anchor" href="#matlab"></a> Matlab</h3><p>文档：<a href="https://ww2.mathworks.cn/help/stats/analysis-of-variance-and-covariance_zh_CN.html">方差与协方差分析 - MATLAB &amp; Simulink - MathWorks 中国</a></p><p>相关函数：anova、anova1、anova2、anovan</p><p>anova函数是Matlab 2022b新出的函数，可以直接执行单因素和多因素方差分析，不需要再区别使用anova1、anova2、anovan。</p><h4 id="单因素方差分析"><a class="markdownIt-Anchor" href="#单因素方差分析"></a> 单因素方差分析</h4><p>加载爆米花产量数据：数据为6×3 的矩阵，包含三种不同品牌的爆米花产量观测值（以杯为单位的）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load popcorn.mat</span><br><span class="line">popcorn</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">popcorn =</span><br><span class="line"></span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">4.5000</span>    <span class="number">3.5000</span></span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">4.5000</span>    <span class="number">4.0000</span></span><br><span class="line">    <span class="number">6.0000</span>    <span class="number">4.0000</span>    <span class="number">3.0000</span></span><br><span class="line">    <span class="number">6.5000</span>    <span class="number">5.0000</span>    <span class="number">4.0000</span></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">5.5000</span>    <span class="number">5.0000</span></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">5.0000</span>    <span class="number">4.5000</span></span><br></pre></td></tr></table></figure><p>进行单因素方差分析，检验爆米花产量不受爆米花品牌影响的零假设。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">factors = [<span class="built_in">repmat</span>(<span class="string">&quot;Gourmet&quot;</span>,<span class="number">6</span>,<span class="number">1</span>); <span class="built_in">repmat</span>(<span class="string">&quot;National&quot;</span>,<span class="number">6</span>,<span class="number">1</span>); <span class="built_in">repmat</span>(<span class="string">&quot;Generic&quot;</span>,<span class="number">6</span>,<span class="number">1</span>)];</span><br><span class="line">aov = anova(factors,popcorn(:),<span class="string">&quot;FactorNames&quot;</span>,<span class="string">&quot;Brand&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">aov = </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>-way anova, constrained (Type III) sums of squares.</span><br><span class="line"></span><br><span class="line">Y ~ <span class="number">1</span> + Brand</span><br><span class="line"></span><br><span class="line">             SumOfSquares    DF    MeanSquares     F        pValue  </span><br><span class="line">             ____________    __    ___________    ____    __________</span><br><span class="line"></span><br><span class="line">    Brand       <span class="number">15.75</span>         <span class="number">2</span>        <span class="number">7.875</span>      <span class="number">18.9</span>    <span class="number">7.9603e-05</span></span><br><span class="line">    Error        <span class="number">6.25</span>        <span class="number">15</span>      <span class="number">0.41667</span>                      </span><br><span class="line">    Total          <span class="number">22</span>        <span class="number">17</span>                                   </span><br></pre></td></tr></table></figure><p>F 统计量的p 值足够小，可以在 0.01 的显著性水平上拒绝零假设。因此，爆米花品牌对爆米花产量有显著影响。</p><p>但是我们只知道爆米花品牌对爆米花产量有显著影响，依然不知道这几个品牌两两之间的爆米花产量有显著差异。</p><p><strong>可以再进行多重比较</strong>：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multcompare(aov)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">3</span>×<span class="number">6</span> <span class="built_in">table</span></span><br><span class="line"></span><br><span class="line">      Group1        Group2      MeanDifference    MeanDifferenceLower    MeanDifferenceUpper      pValue  </span><br><span class="line">    __________    __________    ______________    ___________________    ___________________    __________</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>     <span class="string">&quot;National&quot;</span>          <span class="number">1.5</span>               <span class="number">0.53198</span>                 <span class="number">2.468</span>            <span class="number">0.0029743</span></span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>     <span class="string">&quot;Generic&quot;</span>          <span class="number">2.25</span>                 <span class="number">1.282</span>                 <span class="number">3.218</span>           <span class="number">6.3839e-05</span></span><br><span class="line">    <span class="string">&quot;National&quot;</span>    <span class="string">&quot;Generic&quot;</span>          <span class="number">0.75</span>              <span class="number">-0.21802</span>                 <span class="number">1.718</span>              <span class="number">0.14337</span></span><br></pre></td></tr></table></figure><p>可以知道品牌1和品牌2、品牌1和品牌3有显著差异，品牌2和品牌3无显著差异</p><p>还可以绘制平均值差异，交互式查看组间差异</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotComparisons(aov);</span><br></pre></td></tr></table></figure><p>蓝色代表的是当前选择的组，红色代表是与当前组显著差异的组，灰色代表的是无显著差异的组</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902202544-r92jo13.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902202602-ngxdzj2.png"></div></div><p><strong>绘制箱式图</strong></p><p>直观展示各个品牌的爆米花产量</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boxchart(aov)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240902200328-nuddw5q.png"></div></div><h4 id="双因素方差分析"><a class="markdownIt-Anchor" href="#双因素方差分析"></a> 双因素方差分析</h4><p>加载爆米花产量数据：数据为6×3 的矩阵，包含三种不同品牌的爆米花产量观测值（以杯为单位的）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load popcorn.mat</span><br><span class="line">popcorn</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">popcorn =</span><br><span class="line"></span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">4.5000</span>    <span class="number">3.5000</span></span><br><span class="line">    <span class="number">5.5000</span>    <span class="number">4.5000</span>    <span class="number">4.0000</span></span><br><span class="line">    <span class="number">6.0000</span>    <span class="number">4.0000</span>    <span class="number">3.0000</span></span><br><span class="line">    <span class="number">6.5000</span>    <span class="number">5.0000</span>    <span class="number">4.0000</span></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">5.5000</span>    <span class="number">5.0000</span></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">5.0000</span>    <span class="number">4.5000</span></span><br></pre></td></tr></table></figure><p>使用<code>repmat</code>和<code>table</code>函数创建一个表格，其中包含品牌、爆米花机类型和爆米花产量的变量。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brand = [<span class="built_in">repmat</span>(<span class="string">&quot;Gourmet&quot;</span>,<span class="number">6</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;National&quot;</span>,<span class="number">6</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;Generic&quot;</span>,<span class="number">6</span>,<span class="number">1</span>)];</span><br><span class="line">poppertype = [<span class="built_in">repmat</span>(<span class="string">&quot;air&quot;</span>,<span class="number">3</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;oil&quot;</span>,<span class="number">3</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;air&quot;</span>,<span class="number">3</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;oil&quot;</span>,<span class="number">3</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;air&quot;</span>,<span class="number">3</span>,<span class="number">1</span>);<span class="built_in">repmat</span>(<span class="string">&quot;oil&quot;</span>,<span class="number">3</span>,<span class="number">1</span>)];</span><br><span class="line">tbl = <span class="built_in">table</span>(brand,poppertype,popcorn(:),VariableNames=[<span class="string">&quot;Brand&quot;</span> <span class="string">&quot;PopperType&quot;</span> <span class="string">&quot;PopcornYield&quot;</span>]);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">tbl =</span><br><span class="line"></span><br><span class="line">  <span class="number">18</span>×<span class="number">3</span> <span class="built_in">table</span></span><br><span class="line"></span><br><span class="line">      Brand       PopperType    PopcornYield</span><br><span class="line">    __________    __________    ____________</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;air&quot;</span>           <span class="number">5.5</span>   </span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;air&quot;</span>           <span class="number">5.5</span>   </span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;air&quot;</span>             <span class="number">6</span>   </span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;oil&quot;</span>           <span class="number">6.5</span>   </span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;oil&quot;</span>             <span class="number">7</span>   </span><br><span class="line">    <span class="string">&quot;Gourmet&quot;</span>       <span class="string">&quot;oil&quot;</span>             <span class="number">7</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;air&quot;</span>           <span class="number">4.5</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;air&quot;</span>           <span class="number">4.5</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;air&quot;</span>             <span class="number">4</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;oil&quot;</span>             <span class="number">5</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;oil&quot;</span>           <span class="number">5.5</span>   </span><br><span class="line">    <span class="string">&quot;National&quot;</span>      <span class="string">&quot;oil&quot;</span>             <span class="number">5</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;air&quot;</span>           <span class="number">3.5</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;air&quot;</span>             <span class="number">4</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;air&quot;</span>             <span class="number">3</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;oil&quot;</span>             <span class="number">4</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;oil&quot;</span>             <span class="number">5</span>   </span><br><span class="line">    <span class="string">&quot;Generic&quot;</span>       <span class="string">&quot;oil&quot;</span>           <span class="number">4.5</span>   </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进行双因素方差分析，零假设设置为三个品牌和两种爆米花机的爆米花产量相同。</p><p>先假设品牌和爆米花机类型是独立的，没有交互作用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aovLinear = anova(tbl,<span class="string">&quot;PopcornYield ~ Brand + PopperType&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">aovLinear = </span><br><span class="line"><span class="number">2</span>-way anova, constrained (Type III) sums of squares.</span><br><span class="line"></span><br><span class="line">PopcornYield ~ <span class="number">1</span> + Brand + PopperType</span><br><span class="line"></span><br><span class="line">                  SumOfSquares    DF    MeanSquares     F       pValue  </span><br><span class="line">                  ____________    __    ___________    ___    __________</span><br><span class="line"></span><br><span class="line">    Brand            <span class="number">15.75</span>         <span class="number">2</span>       <span class="number">7.875</span>        <span class="number">63</span>         <span class="number">1e-07</span></span><br><span class="line">    PopperType         <span class="number">4.5</span>         <span class="number">1</span>         <span class="number">4.5</span>        <span class="number">36</span>    <span class="number">3.2548e-05</span></span><br><span class="line">    Error             <span class="number">1.75</span>        <span class="number">14</span>       <span class="number">0.125</span>                    </span><br><span class="line">    Total               <span class="number">22</span>        <span class="number">17</span>                                </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再假设品牌和爆米花机类型有交互作用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aovInteraction = anova(tbl,<span class="string">&quot;PopcornYield ~ Brand + PopperType + Brand:PopperType&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">aovInteraction = </span><br><span class="line"><span class="number">2</span>-way anova, constrained (Type III) sums of squares.</span><br><span class="line"></span><br><span class="line">PopcornYield ~ <span class="number">1</span> + Brand*PopperType</span><br><span class="line"></span><br><span class="line">                        SumOfSquares    DF    MeanSquares     F        pValue  </span><br><span class="line">                        ____________    __    ___________    ____    __________</span><br><span class="line"></span><br><span class="line">    Brand                    <span class="number">15.75</span>       <span class="number">2</span>        <span class="number">7.875</span>      <span class="number">56.7</span>     <span class="number">7.679e-07</span></span><br><span class="line">    PopperType                 <span class="number">4.5</span>       <span class="number">1</span>          <span class="number">4.5</span>      <span class="number">32.4</span>    <span class="number">0.00010037</span></span><br><span class="line">    Brand:PopperType      <span class="number">0.083333</span>       <span class="number">2</span>     <span class="number">0.041667</span>       <span class="number">0.3</span>       <span class="number">0.74622</span></span><br><span class="line">    Error                   <span class="number">1.6667</span>      <span class="number">12</span>      <span class="number">0.13889</span>                      </span><br><span class="line">    Total                       <span class="number">22</span>      <span class="number">17</span>                                   </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>aovInteraction的方差分析模型包括交互项<code>Brand:PopperType</code>。Brand:PopperType项的p 值大于 0.05。因此，<strong>没有足够证据</strong>证明品牌和爆米花机类型对爆米花产量有交互影响。</p><p><code>anova</code>对象的<code>Metrics</code>属性提供了有关方差分析模型拟合度的统计数据。要确定哪种模型更适合响应数据，请显示<code>aovLinear</code>和<code>aovInteraction</code> 的<code>Metrics</code>属性。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aovLinear.Metrics</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ans</span>=<span class="number">1</span>×<span class="number">7</span> <span class="built_in">table</span></span><br><span class="line">     MSE      RMSE      SSE      SSR     SST    RSquared    AdjustedRSquared</span><br><span class="line">    _____    _______    ____    _____    ___    ________    ________________</span><br><span class="line"></span><br><span class="line">    <span class="number">0.125</span>    <span class="number">0.35355</span>    <span class="number">1.75</span>    <span class="number">20.25</span>    <span class="number">22</span>     <span class="number">0.92045</span>         <span class="number">0.88731</span>   </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aovInteraction.Metrics</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ans</span>=<span class="number">1</span>×<span class="number">7</span> <span class="built_in">table</span></span><br><span class="line">      MSE       RMSE       SSE       SSR      SST    RSquared    AdjustedRSquared</span><br><span class="line">    _______    _______    ______    ______    ___    ________    ________________</span><br><span class="line"></span><br><span class="line">    <span class="number">0.13889</span>    <span class="number">0.37268</span>    <span class="number">1.6667</span>    <span class="number">20.333</span>    <span class="number">22</span>     <span class="number">0.92424</span>         <span class="number">0.78535</span>   </span><br></pre></td></tr></table></figure><p>线性模型的均方误差（MSE）略小于交互模型。线性模型的调整 R 平方值更高。这些指标共同表明，线性模型比交互模型更适合爆米花数据。</p><h4 id="随机效应anova"><a class="markdownIt-Anchor" href="#随机效应anova"></a> 随机效应ANOVA</h4><p>我记录了大鼠不同行为（移动、饲养、梳理…）的钙信号（使用纤维光度计），每只大鼠的每种行为都有很多次，每次记录时间为 5 分钟（每次记录相隔几天）。</p><p>分析时间、行为、大鼠编号、每次记录对钙信号的影响</p><p>由于每只老鼠都是一个随机因素，每次会话也是一个随机因素，所以将其设置为随机效应因子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成随机数据</span></span><br><span class="line">tbl = <span class="built_in">table</span>(<span class="built_in">randn</span>(<span class="number">100</span>,<span class="number">1</span>), (<span class="number">1</span>:<span class="number">100</span>)&#x27;, randi([<span class="number">1</span>,<span class="number">3</span>],<span class="number">100</span>,<span class="number">1</span>), ...</span><br><span class="line">            randi([<span class="number">1</span>,<span class="number">10</span>],<span class="number">100</span>,<span class="number">1</span>), randi([<span class="number">1</span>,<span class="number">20</span>],<span class="number">100</span>,<span class="number">1</span>), ...</span><br><span class="line">            <span class="string">&#x27;VariableNames&#x27;</span>, &#123;<span class="string">&#x27;CalciumResponse&#x27;</span>, <span class="string">&#x27;Time&#x27;</span>, <span class="string">&#x27;Behavior&#x27;</span>, <span class="string">&#x27;Rat&#x27;</span>, <span class="string">&#x27;Session&#x27;</span>&#125;);</span><br><span class="line">tbl.Behavior = categorical(tbl.Behavior);</span><br><span class="line">tbl.Rat = categorical(tbl.Rat);</span><br><span class="line">tbl.Session = categorical(tbl.Session);</span><br><span class="line"><span class="comment">% Perform  ANOVA with Random Effects</span></span><br><span class="line">aov = anova(tbl, <span class="string">&#x27;CalciumResponse&#x27;</span>, ...</span><br><span class="line">            <span class="string">&#x27;CategoricalFactors&#x27;</span>, [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], ...</span><br><span class="line">            <span class="string">&#x27;RandomFactors&#x27;</span>, [<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">aov = anova(tbl, <span class="string">&#x27;CalciumResponse ~ Time * Behavior + Rat + Session&#x27;</span>, ...</span><br><span class="line">            <span class="string">&#x27;CategoricalFactors&#x27;</span>, [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], ...</span><br><span class="line">            <span class="string">&#x27;RandomFactors&#x27;</span>, [<span class="number">3</span>,<span class="number">4</span>]);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">aov = </span><br><span class="line"></span><br><span class="line">N-way anova, constrained (Type III) sums of squares.</span><br><span class="line"></span><br><span class="line">CalciumResponse ~ <span class="number">1</span> + Rat + Session + Time*Behavior</span><br><span class="line"></span><br><span class="line">                     SumOfSquares    DF    MeanSquares       F       pValue </span><br><span class="line">                     ____________    __    ___________    _______    _______</span><br><span class="line"></span><br><span class="line">    Time               <span class="number">0.63547</span>        <span class="number">1</span>      <span class="number">0.63547</span>      <span class="number">0.59586</span>    <span class="number">0.44292</span></span><br><span class="line">    Behavior            <span class="number">1.2215</span>        <span class="number">2</span>      <span class="number">0.61076</span>      <span class="number">0.57269</span>    <span class="number">0.56678</span></span><br><span class="line">    Rat                 <span class="number">8.0684</span>        <span class="number">9</span>      <span class="number">0.89649</span>      <span class="number">0.84061</span>    <span class="number">0.58172</span></span><br><span class="line">    Session             <span class="number">16.935</span>       <span class="number">19</span>      <span class="number">0.89133</span>      <span class="number">0.83577</span>    <span class="number">0.65822</span></span><br><span class="line">    Time:Behavior       <span class="number">1.1771</span>        <span class="number">2</span>      <span class="number">0.58853</span>      <span class="number">0.55184</span>    <span class="number">0.57852</span></span><br><span class="line">    Error               <span class="number">70.387</span>       <span class="number">66</span>       <span class="number">1.0665</span>                      </span><br><span class="line">    Total               <span class="number">97.922</span>       <span class="number">99</span>   </span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[~,ems] = stats(aov)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ems =</span><br><span class="line"></span><br><span class="line">  <span class="number">6</span>×<span class="number">5</span> <span class="built_in">table</span></span><br><span class="line"></span><br><span class="line">                       Type                      ExpectedMeanSquares                    MeanSquaresDenominator    DFDenominator    FDenominator</span><br><span class="line">                     ________    ___________________________________________________    ______________________    _____________    ____________</span><br><span class="line"></span><br><span class="line">    Time             <span class="string">&quot;fixed&quot;</span>     <span class="string">&quot;54736.8*Q(Time)+18245.6*Q(Time:Behavior)+V(Error)&quot;</span>            <span class="number">1.0665</span>                  <span class="number">66</span>          MS(Error)  </span><br><span class="line">    Behavior         <span class="string">&quot;fixed&quot;</span>     <span class="string">&quot;6.00085*Q(Behavior)+V(Error)&quot;</span>                                 <span class="number">1.0665</span>                  <span class="number">66</span>          MS(Error)  </span><br><span class="line">    Rat              <span class="string">&quot;random&quot;</span>    <span class="string">&quot;7.83495*V(Rat)+V(Error)&quot;</span>                                      <span class="number">1.0665</span>                  <span class="number">66</span>          MS(Error)  </span><br><span class="line">    Session          <span class="string">&quot;random&quot;</span>    <span class="string">&quot;4.30322*V(Session)+V(Error)&quot;</span>                                  <span class="number">1.0665</span>                  <span class="number">66</span>          MS(Error)  </span><br><span class="line">    Time:Behavior    <span class="string">&quot;fixed&quot;</span>     <span class="string">&quot;20371.8*Q(Time:Behavior)+V(Error)&quot;</span>                            <span class="number">1.0665</span>                  <span class="number">66</span>          MS(Error)  </span><br><span class="line">    Error            <span class="string">&quot;random&quot;</span>    <span class="string">&quot;V(Error)&quot;</span>                                                                                                  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li>matlab实现anova分析：<a href="https://ww2.mathworks.cn/help/stats/anova.html">Analysis of variance (ANOVA) results - MATLAB - MathWorks 中国</a></li><li><a href="https://www.bilibili.com/video/BV1V24y1j7z8/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">什么是ANOVA和F值｜说人话的统计学_哔哩哔哩_bilibili</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90">方差分析 - 维基百科，自由的百科全书 (wikipedia.org)</a></li><li><a href="https://zhuanlan.zhihu.com/p/503071438">方差分析（ANOVA）分类、应用举例及matlab代码 - 知乎 (zhihu.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 统计分析 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 深度学习丨基于ResNet的新冠肺炎X光胸片检测</title>
      <link href="//post/matlab-deep-learning-gun-new-coronary-pneumonia-x-ray-chest-test-based-on-resnet-z1ibtf8.html"/>
      <url>//post/matlab-deep-learning-gun-new-coronary-pneumonia-x-ray-chest-test-based-on-resnet-z1ibtf8.html</url>
      
        <content type="html"><![CDATA[<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>本笔记改编自《深度学习经典案例解析：基于MATLAB》一书中的内容，使用ResNet网络来对X光胸片进行检测，判断是否有肺炎。</p><p>不过老实说，这个数据集数量太少。并且我自己也无法通过肉眼分辨X光胸片到底有没有肺炎。</p><p>所以本笔记更多的是介绍Matlab 如何调用ResNet、如何做数据增强等知识点。</p><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><h3 id="数据集"><a class="markdownIt-Anchor" href="#数据集"></a> 数据集</h3><p>在新冠肺炎诊断过程中，除了病毒核酸检测外，X射线的胸正位图像也是其中一个重要环节。</p><p>在本节中，我们将使用开源胸片数据集，训练一个ResNet网络，用以分类一张胸片是属于健康人，还是属于新冠肺炎患者，以期帮助医生更准确地做出判断。所使用的图像数据集由Adrian Rosebrock博士发布，可以直接从网址（<a href="https://www.pyimagesearch.com/2020/03/16/detecting-covid-19-in-x-ray-images-with-keras-tensorflow-and-deep-learning/">https://www.pyimagesearch.com/2020/03/16/detecting-covid-19-in-x-ray-images-with-keras-tensorflow-and-deep-learning/</a>）下载。其中包含25张健康人胸片和25张新冠肺炎患者胸片，原作者还提供了Python的Keras库和VGG16网络的代码，本文只用了其中的数据集，ResNet网络程序由MATLAB实现。</p><h3 id="resnet网络简介"><a class="markdownIt-Anchor" href="#resnet网络简介"></a> ResNet网络简介</h3><p>ResNet是深度残差网络（Residual Network）的简称，由微软的何凯明等人于2015年提出，一举夺得当年ImageNet大规模视觉识别竞赛图像分类和物体识别的冠军。其核心思想是在每2个网络层之间加入一个残差连接，缓解深层网络中的梯度消失问题，使得训练数百甚至数千层成为可能。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240803184018-1xfdt57.png"></div></div><p>在图像处理领域，一般认为神经网络更深的网络层能够提取出更加“高级”的图像特征。为了实现先进的性能，网络往往都需要数十甚至数百层，此时，梯度消失和梯度爆炸问题成为训练深层网络的一大障碍，可能导致网络无法收敛。通过在常规网络中引入残差连接，极大地缓解了网络梯度消失的问题。除此之外，残差连接还具有实现简单、计算开销小、对原有网络结构影响小等优点。因此，无论在图像处理领域，还是在自然语言处理领域，现有的很多最先进的深度神经网络都将残差连接作为一种常用技巧。</p><h2 id="实战笔记"><a class="markdownIt-Anchor" href="#实战笔记"></a> 实战笔记</h2><h3 id="加载数据集"><a class="markdownIt-Anchor" href="#加载数据集"></a> 加载数据集</h3><p>通过资源管理器查看数据集</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-03_18-50-51-20240803185101-4pmue85.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-03_18-51-25-20240803185127-yxucltu.png"></div></div><p>加载数据集</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 加载图像数据</span></span><br><span class="line">dataset_path = <span class="string">&#x27;dataset&#x27;</span>;</span><br><span class="line"></span><br><span class="line">imds = imageDatastore(dataset_path,...</span><br><span class="line">    <span class="string">&#x27;IncludeSubfolders&#x27;</span>, <span class="built_in">true</span>, ...</span><br><span class="line">    <span class="string">&#x27;LabelSource&#x27;</span>, <span class="string">&#x27;foldernames&#x27;</span>);</span><br><span class="line">total_split = countEachLabel(imds);</span><br><span class="line">total_split </span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Label</th><th style="text-align:center">Count</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">covid</td><td style="text-align:center">25</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">normal</td><td style="text-align:center">25</td></tr></tbody></table><p>查看数据集</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 随机显示数据集中的部分图像</span></span><br><span class="line">numPreviewImages = <span class="number">4</span>; <span class="comment">% 每类预览多少张</span></span><br><span class="line">imdsPreview = splitEachLabel(imds, numPreviewImages, <span class="string">&#x27;randomize&#x27;</span>);</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">tiledlayout(<span class="string">&#x27;flow&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">numel</span>(imdsPreview.Labels)</span><br><span class="line">    nexttile</span><br><span class="line">    I = readimage(imdsPreview,<span class="built_in">i</span>);</span><br><span class="line">    imshow(I)</span><br><span class="line">    title(imdsPreview.Labels(<span class="built_in">i</span>),fontsize = <span class="number">8</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/figure_0-20240803184911-kesbqul.png"></div></div><h3 id="分割测试集和训练集"><a class="markdownIt-Anchor" href="#分割测试集和训练集"></a> 分割测试集和训练集</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 分割测试集和训练集</span></span><br><span class="line">[img_ds_Train,img_ds_Test] = splitEachLabel(imds,<span class="number">0.7</span>,<span class="string">&quot;randomized&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="加载预训练好的网络"><a class="markdownIt-Anchor" href="#加载预训练好的网络"></a> 加载预训练好的网络</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 确定训练数据中新冠图片标签类别数量：2类</span></span><br><span class="line">numClasses = <span class="built_in">numel</span>(categories(img_ds_Train.Labels));</span><br><span class="line"></span><br><span class="line"><span class="comment">% 加载ResNet50网络（注：该网络需要提前下载，当输入下面命令时按要求下载即可）</span></span><br><span class="line"></span><br><span class="line">net = imagePretrainedNetwork(<span class="string">&quot;resnet50&quot;</span>,NumClasses=numClasses); <span class="comment">% 将全连接层的分类数设置为与新数据中的分类数相同。</span></span><br><span class="line"></span><br><span class="line">analyzeNetwork(net)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-03_18-58-03-20240803185811-yqhush0.png"></div></div><p>根据新数据设定新的全连接层的参数，</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net = setLearnRateFactor(net,<span class="string">&quot;fc1000/Weights&quot;</span>,<span class="number">10</span>);</span><br><span class="line">net = setLearnRateFactor(net,<span class="string">&quot;fc1000/Bias&quot;</span>,<span class="number">10</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据增强"><a class="markdownIt-Anchor" href="#数据增强"></a> 数据增强</h3><p>数据增强，目的是增加数据，增加模型鲁棒性</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 数据增强的参数</span></span><br><span class="line">augmenter = imageDataAugmenter(...</span><br><span class="line">    <span class="string">&#x27;RandRotation&#x27;</span>,[<span class="number">-5</span> <span class="number">5</span>],...</span><br><span class="line">    <span class="string">&#x27;RandXReflection&#x27;</span>,<span class="number">1</span>,...</span><br><span class="line">    <span class="string">&#x27;RandYReflection&#x27;</span>,<span class="number">1</span>,...</span><br><span class="line">    <span class="string">&#x27;RandXShear&#x27;</span>,[<span class="number">-0.05</span> <span class="number">0.05</span>],...</span><br><span class="line">    <span class="string">&#x27;RandYShear&#x27;</span>,[<span class="number">-0.05</span> <span class="number">0.05</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 将批量训练图像的大小调整为与输入层的大小相同</span></span><br><span class="line">aug_img_ds_train = augmentedImageDatastore([<span class="number">224</span> <span class="number">224</span>],img_ds_Train,<span class="string">&#x27;DataAugmentation&#x27;</span>,augmenter,<span class="string">&#x27;ColorPreprocessing&#x27;</span>,<span class="string">&#x27;gray2rgb&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 将批量测试图像的大小调整为与输入层的大小相同</span></span><br><span class="line">aug_img_ds_test = augmentedImageDatastore([<span class="number">224</span> <span class="number">224</span>], img_ds_Test,<span class="string">&#x27;ColorPreprocessing&#x27;</span>,<span class="string">&#x27;gray2rgb&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="对网络进行训练"><a class="markdownIt-Anchor" href="#对网络进行训练"></a> 对网络进行训练</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 对训练参数进行设置</span></span><br><span class="line">options = trainingOptions(<span class="string">&quot;adam&quot;</span>, ...</span><br><span class="line">    MiniBatchSize=<span class="number">8</span>, ...</span><br><span class="line">    MaxEpochs=<span class="number">30</span>, ...</span><br><span class="line">    Metrics=<span class="string">&quot;accuracy&quot;</span>, ...</span><br><span class="line">    InitialLearnRate=<span class="number">1e-4</span>, ...</span><br><span class="line">    LearnRateDropFactor=<span class="number">0.01</span>, ...</span><br><span class="line">    LearnRateDropPeriod=<span class="number">5</span>, ...</span><br><span class="line">    Shuffle=<span class="string">&quot;every-epoch&quot;</span>, ...</span><br><span class="line">    Verbose=<span class="built_in">false</span>, ...</span><br><span class="line">    Plots=<span class="string">&quot;training-progress&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 用训练图像对网络进行训练</span></span><br><span class="line">netTransfer = trainnet(aug_img_ds_train,net,<span class="string">&quot;crossentropy&quot;</span>,options);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-03_19-10-15-20240803191017-6jbxcbi.png"></div></div><h3 id="进行测试并查看结果"><a class="markdownIt-Anchor" href="#进行测试并查看结果"></a> 进行测试并查看结果</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">classNames = categories(imds.Labels)</span><br><span class="line">scores = minibatchpredict(netTransfer,aug_img_ds_test);</span><br><span class="line">YPred = scores2label(scores,classNames);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 对训练好的网络采用验证数据集进行验证</span></span><br><span class="line"></span><br><span class="line">idx = randperm(<span class="built_in">numel</span>(aug_img_ds_test.Files),<span class="number">10</span>);</span><br><span class="line">imgs = read(aug_img_ds_test);</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">tiledlayout(<span class="string">&quot;flow&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    nexttile</span><br><span class="line">    I = imgs&#123;idx(<span class="built_in">i</span>),<span class="number">1</span>&#125;&#123;<span class="number">1</span>&#125;;</span><br><span class="line">    imshow(I)</span><br><span class="line">    label = YPred(idx(<span class="built_in">i</span>));</span><br><span class="line">    title(string(label));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-03_19-26-02-20240803192604-a9e5y8s.png"></div></div><p>计算分类准确率</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YTest = img_ds_Test.Labels;</span><br><span class="line">accuracy = <span class="built_in">mean</span>(YPred == YTest)</span><br></pre></td></tr></table></figure><blockquote><p><code>accuracy = 0.9286</code></p></blockquote><p>创建并显示混淆矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">figure</span></span><br><span class="line">confusionchart(YTest,YPred)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240803192545-hpj1afv.png"></div></div><h2 id="知识点"><a class="markdownIt-Anchor" href="#知识点"></a> 知识点</h2><ul><li><p>matlab如何调用预训练的ResNet网络</p><ul><li><p>官方提供了三个型号的resnet：<code>&quot;resnet18&quot;</code>、<code>&quot;resnet50&quot;</code>、<code>&quot;resnet101&quot;</code></p></li><li><p>Matlab 2024a起，推荐使用imagePretrainedNetwork来加载预训练模型，可以直接指定输出分类数目，更方便迁移学习</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net = imagePretrainedNetwork(<span class="string">&quot;resnet50&quot;</span>,NumClasses=numClasses);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>matlab如何做数据增强</p><ul><li><p>augmentedImageDatastore</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 数据增强的参数</span></span><br><span class="line">augmenter = imageDataAugmenter(...</span><br><span class="line">    <span class="string">&#x27;RandRotation&#x27;</span>,[<span class="number">-5</span> <span class="number">5</span>],...</span><br><span class="line">    <span class="string">&#x27;RandXReflection&#x27;</span>,<span class="number">1</span>,...</span><br><span class="line">    <span class="string">&#x27;RandYReflection&#x27;</span>,<span class="number">1</span>,...</span><br><span class="line">    <span class="string">&#x27;RandXShear&#x27;</span>,[<span class="number">-0.05</span> <span class="number">0.05</span>],...</span><br><span class="line">    <span class="string">&#x27;RandYShear&#x27;</span>,[<span class="number">-0.05</span> <span class="number">0.05</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 将批量训练图像的大小调整为与输入层的大小相同</span></span><br><span class="line">aug_img_ds_train = augmentedImageDatastore([<span class="number">224</span> <span class="number">224</span>],img_ds_Train,<span class="string">&#x27;DataAugmentation&#x27;</span>,augmenter,<span class="string">&#x27;ColorPreprocessing&#x27;</span>,<span class="string">&#x27;gray2rgb&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 将批量测试图像的大小调整为与输入层的大小相同</span></span><br><span class="line">aug_img_ds_test = augmentedImageDatastore([<span class="number">224</span> <span class="number">224</span>], img_ds_Test,<span class="string">&#x27;ColorPreprocessing&#x27;</span>,<span class="string">&#x27;gray2rgb&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>沉浸式翻译终于支持富文本翻译了</title>
      <link href="//post/immersive-translation-finally-supports-rich-text-translation-z1hrao8.html"/>
      <url>//post/immersive-translation-finally-supports-rich-text-translation-z1hrao8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>沉浸式翻译终于支持富文本翻译了，以后在网页读论文更舒服了，可以在翻译内容里，直接进行图的跳转</p></blockquote><p>没有富文本翻译</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-10_10-51-54-20240810105158-pxvcw1g.png"></div></div><p>富文本翻译</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-08-10_10-51-20-20240810105125-4clg5p9.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS丨MutationObserver（DOM 变动观察器）</title>
      <link href="//post/js-gun-mutationobserver-dom-change-observer-z1ygppd.html"/>
      <url>//post/js-gun-mutationobserver-dom-change-observer-z1ygppd.html</url>
      
        <content type="html"><![CDATA[<p><code>MutationObserver</code> 可以观察 DOM 元素，并在检测到更改时触发回调。特别适用于监控元素的属性、子节点或者文本内容的变化。这个 API 提供了一个高效的机制来追踪这些变化，避免了频繁的轮询操作，可以提升代码性能。</p><h2 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h2><h3 id="1-创建-mutationobserver-实例"><a class="markdownIt-Anchor" href="#1-创建-mutationobserver-实例"></a> 1. <strong>创建</strong> <strong><code>MutationObserver</code></strong> <strong>实例</strong></h3><p>首先，需要创建一个 <code>MutationObserver</code> 实例，并传入一个回调函数，该回调函数将在监听的 DOM 变化时被调用。回调函数接受两个参数：</p><ul><li><p><code>mutationsList</code>：一个包含所有发生变化的 <code>MutationRecord</code> 对象的列表。</p><p><a href="https://dom.spec.whatwg.org/#mutationrecord">MutationRecord</a> 对象具有以下属性：</p><ul><li><p><code>type</code> —— 变动类型，以下类型之一：</p><ul><li><code>&quot;attributes&quot;</code>：特性被修改了，</li><li><code>&quot;characterData&quot;</code>：数据被修改了，用于文本节点，</li><li><code>&quot;childList&quot;</code>：添加/删除了子元素。</li></ul></li><li><p><code>target</code> —— 更改发生在何处：<code>&quot;attributes&quot;</code> 所在的元素，或 <code>&quot;characterData&quot;</code> 所在的文本节点，或 <code>&quot;childList&quot;</code> 变动所在的元素，</p></li><li><p><code>addedNodes/removedNodes</code> —— 添加/删除的节点，</p></li><li><p><code>previousSibling/nextSibling</code> —— 添加/删除的节点的上一个/下一个兄弟节点，</p></li><li><p><code>attributeName/attributeNamespace</code> —— 被更改的特性的名称/命名空间（用于 XML），</p></li><li><p><code>oldValue</code> —— 之前的值，仅适用于特性或文本更改，如果设置了相应选项 <code>attributeOldValue</code>/<code>characterDataOldValue</code>。</p></li></ul></li><li><p><code>observer</code>：指向 <code>MutationObserver</code> 实例本身的引用。</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">(<span class="params">mutationsList, observer</span>) =&gt;</span> &#123;</span><br><span class="line">    mutationsList.<span class="title function_">forEach</span>(<span class="function"><span class="params">mutation</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(mutation); <span class="comment">// 处理每个 MutationRecord的回调函数</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2-配置observe选项"><a class="markdownIt-Anchor" href="#2-配置observe选项"></a> 2. <strong>配置</strong><code>observe</code>选项</h3><p>在开始观察 DOM 变化之前，需要通过 <code>observe</code> 方法指定要观察的目标节点和相应的配置选项。</p><p><code>config</code> 是一个具有布尔选项的对象，该布尔选项表示“将对哪些更改做出反应”，配置选项包括：：</p><ul><li><code>childList</code> —— <code>node</code> 的直接子节点的更改，</li><li><code>subtree</code> —— <code>node</code> 的所有后代的更改，</li><li><code>attributes</code> —— <code>node</code> 的特性（attribute），</li><li><code>attributeFilter</code> —— 特性名称数组，只观察选定的特性。</li><li><code>characterData</code> —— 是否观察 <code>node.data</code>（文本内容），</li><li><code>attributeOldValue</code> —— 如果为 <code>true</code>，则将特性的旧值和新值都传递给回调（参见下文），否则只传新值（需要 <code>attributes</code> 选项），</li><li><code>characterDataOldValue</code> —— 如果为 <code>true</code>，则将 <code>node.data</code> 的旧值和新值都传递给回调（参见下文），否则只传新值（需要 <code>characterData</code> 选项）。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    <span class="attr">childList</span>: <span class="literal">true</span>,          <span class="comment">// 观察子节点的变化</span></span><br><span class="line">    <span class="attr">attributes</span>: <span class="literal">true</span>,         <span class="comment">// 观察属性的变化</span></span><br><span class="line">    <span class="attr">characterData</span>: <span class="literal">true</span>,      <span class="comment">// 观察文本数据的变化</span></span><br><span class="line">    <span class="attr">subtree</span>: <span class="literal">true</span>,            <span class="comment">// 观察所有后代节点的变化</span></span><br><span class="line">    <span class="attr">attributeOldValue</span>: <span class="literal">true</span>,  <span class="comment">// 记录属性变化前的值</span></span><br><span class="line">    <span class="attr">characterDataOldValue</span>: <span class="literal">true</span> <span class="comment">// 记录文本数据变化前的值</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-开始观察"><a class="markdownIt-Anchor" href="#3-开始观察"></a> 3. 开始观察</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">observer.<span class="title function_">observe</span>(targetNode, config);</span><br></pre></td></tr></table></figure><h3 id="4-停止观察"><a class="markdownIt-Anchor" href="#4-停止观察"></a> 4. <strong>停止观察</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">observer.<span class="title function_">disconnect</span>();</span><br></pre></td></tr></table></figure><h3 id="5-获取已观察的记录"><a class="markdownIt-Anchor" href="#5-获取已观察的记录"></a> 5. 获取已观察的记录</h3><p>返回自上次调用以来的所有 <code>MutationRecord</code> 对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mutations = observer.<span class="title function_">takeRecords</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常见用例"><a class="markdownIt-Anchor" href="#常见用例"></a> <strong>常见用例</strong></h2><ul><li>动态内容的更新监控：比如监听笔记软件添加内容等操作，运行特定代码。</li><li>内容的监听：表单元素的变化监控。</li><li>属性变化的监听：如按钮状态、样式的变化。</li></ul><h2 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> <strong>示例代码</strong></h2><p>监听「<strong>思源笔记代码块更改代码语言高亮</strong>」的操作，对代码语言进行排序</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数：监控dom变化</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">observeDomChange</span>(<span class="params">targetNode, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> config = &#123; <span class="attr">childList</span>: <span class="literal">true</span>, <span class="attr">subtree</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">    <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">(<span class="params">mutationsList</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> mutation <span class="keyword">of</span> mutationsList) &#123;</span><br><span class="line">            <span class="comment">// console.log(mutation.target.classList);</span></span><br><span class="line">            <span class="keyword">if</span> (mutation.<span class="property">type</span> === <span class="string">&#x27;childList&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// console.log(mutation.target.classList);</span></span><br><span class="line">                <span class="title function_">callback</span>(mutation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    observer.<span class="title function_">observe</span>(targetNode, config);</span><br><span class="line">    <span class="comment">// 返回observer，用于停止观察</span></span><br><span class="line">    <span class="comment">// observer.disconnect();</span></span><br><span class="line">    <span class="keyword">return</span> observer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用代码</span></span><br><span class="line"><span class="keyword">const</span> layoutCenter = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.layout__center&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> observer = <span class="title function_">observeDomChange</span>(layoutCenter, <span class="function">(<span class="params">mutation</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 监听代码列表的弹窗事件</span></span><br><span class="line">    <span class="keyword">if</span>(mutation.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&quot;protyle-util&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">const</span> codeList = mutation.<span class="property">target</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.b3-list--background&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(codeList)&#123;</span><br><span class="line">            <span class="keyword">const</span> firstChild = codeList.<span class="property">firstElementChild</span>;</span><br><span class="line">            <span class="title function_">sortLangList</span>([...recentlyCodeLang, ...topCodeLang], codeList, firstChild);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(codeList, <span class="string">&#x27;codeList&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 深度学习丨使用深度学习对网络摄像头图像进行分类</title>
      <link href="//post/matlab-deep-learning-gun-use-deep-learning-to-classify-network-camera-images-kbghh.html"/>
      <url>//post/matlab-deep-learning-gun-use-deep-learning-to-classify-network-camera-images-kbghh.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>好久没有更Matlab和深度学习的笔记了，这次搬运一波Matlab深度学习的官方示例，使用 GoogleNet 来实时对相机采集的图片进行分类 立一个flag，以后一周更一篇Matlab和深度学习的笔记。</p></blockquote><h2 id="资料"><a class="markdownIt-Anchor" href="#资料"></a> 资料</h2><ul><li>使用深度学习对网络摄像头图像进行分类：<a href="https://ww2.mathworks.cn/help/deeplearning/ug/classify-images-from-webcam-using-deep-learning.html">https://ww2.mathworks.cn/help/deeplearning/ug/classify-images-from-webcam-using-deep-learning.html</a></li></ul><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li><p>使用webcam调用相机/网络摄像头进行拍摄获取图片</p></li><li><p>使用 GoogleNet 来对相机得到的图片进行分类</p></li><li><p>为了能够实时调用模型进行分类，使用循环不断获取相机的实时画面</p><ul><li>使用<code>h = figure;while ishandle(h)</code>可以通过关闭figure来结束循环，这个Tips可以学习下</li></ul></li></ul><h2 id="使用深度学习对网络摄像头图像进行分类"><a class="markdownIt-Anchor" href="#使用深度学习对网络摄像头图像进行分类"></a> 使用深度学习对网络摄像头图像进行分类</h2><p>此示例说明如何使用预训练的深度卷积神经网络 GoogLeNet 实时对来自网络摄像头的图像进行分类。</p><p>使用 MATLAB®、普通的网络摄像头和深度神经网络来识别周围环境中的对象。此示例使用 GoogLeNet，它是预训练的深度卷积神经网络（CNN 或 ConvNet），已基于超过一百万个图像进行训练，可以将图像分为 1000 个对象类别（例如键盘、咖啡杯、铅笔和多种动物）。您可以下载 GoogLeNet 并使用 MATLAB 实时连续处理相机图像。</p><p>GoogLeNet 已基于大量图像学习了丰富的特征表示。它以图像作为输入，然后输出图像中对象的标签以及每个对象类别的概率。您可以用周围的物品进行试验，以了解 GoogLeNet 对图像进行分类的准确程度。要了解有关网络对象分类的详细信息，可以实时显示排名前五的类的分数，而不是只显示最终的类决策。</p><h3 id="加载相机和预训练网络"><a class="markdownIt-Anchor" href="#加载相机和预训练网络"></a> 加载相机和预训练网络</h3><p>连接到相机并加载预训练的 GoogLeNet 网络。您可以在此步骤使用任何预训练网络。该示例需要 MATLAB Support Package for USB Webcams，以及 Deep Learning Toolbox™ Model <em>for GoogLeNet Network</em>。如果没有安装所需的支持包，软件会提供下载链接。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">camera = webcam;</span><br><span class="line">net = googlenet;</span><br></pre></td></tr></table></figure><p>如果要再次运行该示例，请先运行命令 <code>clear camera</code>，其中 <code>camera</code> 是与网络摄像头的连接。否则将出现错误，因为您不能创建与同一网络摄像头的另一连接。</p><h3 id="对相机快照进行分类"><a class="markdownIt-Anchor" href="#对相机快照进行分类"></a> 对相机快照进行分类</h3><p>要对图像进行分类，必须将其大小调整为网络的输入大小。获取网络的图像输入层的 <code>InputSize</code> 属性的前两个元素。图像输入层是网络的第一层。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inputSize = net.Layers(<span class="number">1</span>).InputSize(<span class="number">1</span>:<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inputSize =</span><br><span class="line"></span><br><span class="line">   <span class="number">224</span>   <span class="number">224</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示来自相机的图像以及预测的标签及其概率。在调用 <code>classify</code> 之前，必须将图像大小调整为网络的输入大小。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">figure</span></span><br><span class="line">im = snapshot(camera);</span><br><span class="line">image(im)</span><br><span class="line">im = imresize(im,inputSize);</span><br><span class="line">[label,score] = classify(net,im);</span><br><span class="line">title(&#123;char(label),num2str(<span class="built_in">max</span>(score),<span class="number">2</span>)&#125;);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/ClassifyImagesFromWebcamUsingDeepLearningExample_01-20240714172409-8yhwec3.png"></div></div><h3 id="连续对相机图像进行分类"><a class="markdownIt-Anchor" href="#连续对相机图像进行分类"></a> 连续对相机图像进行分类</h3><p>要连续对相机图像进行分类，请将前面的步骤放入一个循环。在图窗打开时运行该循环。要停止实时预测，只需关闭图窗。在每次迭代结束时使用 <code>drawnow</code> 更新图窗。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h = <span class="built_in">figure</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ishandle(h)</span><br><span class="line">    im = snapshot(camera);</span><br><span class="line">    image(im)</span><br><span class="line">    im = imresize(im,inputSize);</span><br><span class="line">    [label,score] = classify(net,im);</span><br><span class="line">    title(&#123;char(label), num2str(<span class="built_in">max</span>(score),<span class="number">2</span>)&#125;);</span><br><span class="line">    drawnow</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="显示排名靠前的预测值"><a class="markdownIt-Anchor" href="#显示排名靠前的预测值"></a> 显示排名靠前的预测值</h3><p>预测出的类可能快速更改。因此，将排名靠前的预测值显示在一起会有所帮助。您可以通过绘制预测分数靠前的类来显示排名前五的预测值及其概率。</p><p>对相机的快照进行分类。显示来自相机的图像以及预测的标签及其概率。使用 <code>classify</code> 函数的 <code>score</code> 输出显示排名前五的预测值的概率直方图。</p><p>创建图窗窗口。首先，调整窗口大小以使宽度增加一倍，并创建两个子图。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h = <span class="built_in">figure</span>;</span><br><span class="line">h.Position(<span class="number">3</span>) = <span class="number">2</span>*h.Position(<span class="number">3</span>);</span><br><span class="line">ax1 = subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">ax2 = subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>在左侧子图中，将图像和分类显示在一起。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">im = snapshot(camera);</span><br><span class="line">image(ax1,im)</span><br><span class="line">im = imresize(im,inputSize);</span><br><span class="line">[label,score] = classify(net,im);</span><br><span class="line">title(ax1,&#123;char(label),num2str(<span class="built_in">max</span>(score),<span class="number">2</span>)&#125;);</span><br></pre></td></tr></table></figure><p>通过选择分数最高的类来选择排名前五的预测值。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[~,idx] = <span class="built_in">sort</span>(score,<span class="string">&#x27;descend&#x27;</span>);</span><br><span class="line">idx = idx(<span class="number">5</span>:<span class="number">-1</span>:<span class="number">1</span>);</span><br><span class="line">classes = net.Layers(<span class="keyword">end</span>).Classes;</span><br><span class="line">classNamesTop = string(classes(idx));</span><br><span class="line">scoreTop = score(idx);</span><br></pre></td></tr></table></figure><p>将排名前五的预测值显示为直方图。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">barh(ax2,scoreTop)</span><br><span class="line">xlim(ax2,[<span class="number">0</span> <span class="number">1</span>])</span><br><span class="line">title(ax2,<span class="string">&#x27;Top 5&#x27;</span>)</span><br><span class="line">xlabel(ax2,<span class="string">&#x27;Probability&#x27;</span>)</span><br><span class="line">yticklabels(ax2,classNamesTop)</span><br><span class="line">ax2.YAxisLocation = <span class="string">&#x27;right&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/ClassifyImagesFromWebcamUsingDeepLearningExample_02-20240714172409-2185cq5.png"></div></div><h3 id="连续分类图像并显示排名靠前的预测值"><a class="markdownIt-Anchor" href="#连续分类图像并显示排名靠前的预测值"></a> 连续分类图像并显示排名靠前的预测值</h3><p>要连续对来自相机的图像进行分类并显示排名靠前的预测值，请将前面的步骤放入一个循环。在图窗打开时运行该循环。要停止实时预测，只需关闭图窗。在每次迭代结束时使用 <code>drawnow</code> 更新图窗。</p><p>创建图窗窗口。首先调整窗口大小以使宽度增加一倍，并创建两个子图。要防止坐标区大小改变，请将 <code>PositionConstraint</code> 属性设置为 <code>'innerposition'</code>。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h = <span class="built_in">figure</span>;</span><br><span class="line">h.Position(<span class="number">3</span>) = <span class="number">2</span>*h.Position(<span class="number">3</span>);</span><br><span class="line">ax1 = subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">ax2 = subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">ax2.PositionConstraint = <span class="string">&#x27;innerposition&#x27;</span>;</span><br></pre></td></tr></table></figure><p>连续显示并分类图像，同时显示排名前五的预测值的直方图。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ishandle(h)</span><br><span class="line">    <span class="comment">% Display and classify the image</span></span><br><span class="line">    im = snapshot(camera);</span><br><span class="line">    image(ax1,im)</span><br><span class="line">    im = imresize(im,inputSize);</span><br><span class="line">    [label,score] = classify(net,im);</span><br><span class="line">    title(ax1,&#123;char(label),num2str(<span class="built_in">max</span>(score),<span class="number">2</span>)&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% Select the top five predictions</span></span><br><span class="line">    [~,idx] = <span class="built_in">sort</span>(score,<span class="string">&#x27;descend&#x27;</span>);</span><br><span class="line">    idx = idx(<span class="number">5</span>:<span class="number">-1</span>:<span class="number">1</span>);</span><br><span class="line">    scoreTop = score(idx);</span><br><span class="line">    classNamesTop = string(classes(idx));</span><br><span class="line"></span><br><span class="line">    <span class="comment">% Plot the histogram</span></span><br><span class="line">    barh(ax2,scoreTop)</span><br><span class="line">    title(ax2,<span class="string">&#x27;Top 5&#x27;</span>)</span><br><span class="line">    xlabel(ax2,<span class="string">&#x27;Probability&#x27;</span>)</span><br><span class="line">    xlim(ax2,[<span class="number">0</span> <span class="number">1</span>])</span><br><span class="line">    yticklabels(ax2,classNamesTop)</span><br><span class="line">    ax2.YAxisLocation = <span class="string">&#x27;right&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    drawnow</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB 深度学习丨可视化卷积神经网络CNN的激活图</title>
      <link href="//post/matlab-deep-learning-gun-activation-diagram-of-visualized-convolutional-neural-network-cnn-njgh6.html"/>
      <url>//post/matlab-deep-learning-gun-activation-diagram-of-visualized-convolutional-neural-network-cnn-njgh6.html</url>
      
        <content type="html"><![CDATA[<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li><p>Matlab使用<code>act1 = activations(net,im,'conv1');</code>可以查看神经网络模型中指定图生成的activation图</p></li><li><p><strong>激活图是什么</strong></p><ul><li><strong>由卷积层生成的特征图 (Feature Map) 经过激活函数 (Activation Function) 处理后的结果。</strong></li><li>激活图就像是CNN的&quot;思维过程&quot;，展示了网络在识别图像时各个层次的关注点。简单说，它让我们窥探AI是如何&quot;看&quot;世界的！</li></ul></li><li><p><strong>激活图的意义</strong></p><ul><li><strong>激活图上的每个值 (激活值) 代表了网络对该位置和对应特征的响应程度。</strong>  值越大，表示网络对该位置和特征越敏感，认为它越重要。</li><li><strong>越深的层的激活图提取的特征越来越抽象</strong>：大多数卷积神经网络在第一个卷积层中学习检测颜色和边缘等特征。在更深的卷积层中，网络学习检测更复杂的特征。通过可视化激活图，我们可以观察不同卷积层学习到的特征，以及这些特征如何随着网络深度的增加而变得更加抽象和高级。</li></ul></li></ul><h2 id="如何可视化卷积神经网络的激活"><a class="markdownIt-Anchor" href="#如何可视化卷积神经网络的激活"></a> 如何可视化卷积神经网络的激活</h2><p>此示例说明如何将图像馈送到卷积神经网络并显示网络的不同层的激活。通过将激活区域与原始图像进行比较，检查激活并发现网络学习的特征。发现较浅层中的通道学习颜色和边缘等简单特征，而较深层中的通道学习眼睛等复杂特征。以这种方式识别特征可以帮助您了解网络学习的内容。</p><p>该示例需要 Deep Learning Toolbox™ 和 Image Processing Toolbox™。</p><h3 id="加载预训练的网络和数据"><a class="markdownIt-Anchor" href="#加载预训练的网络和数据"></a> 加载预训练的网络和数据</h3><p>加载一个预训练的 SqueezeNet 网络。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net = squeezenet;</span><br></pre></td></tr></table></figure><p>读取并显示图像。保存图像大小，以便稍后使用。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">im = imread(<span class="string">&#x27;face.jpg&#x27;</span>);</span><br><span class="line">imshow(im)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_01-20240714171507-ibuuftc.png"></div></div><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imgSize = <span class="built_in">size</span>(im);</span><br><span class="line">imgSize = imgSize(<span class="number">1</span>:<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h3 id="查看网络架构"><a class="markdownIt-Anchor" href="#查看网络架构"></a> 查看网络架构</h3><p>分析该网络，了解您可以查看哪些层。卷积层使用可学习的参数执行卷积。网络学习识别有用的特征，通常每个通道对应一个特征。观察到第一个卷积层有 64 个通道。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">analyzeNetwork(net)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_02-20240714171507-3z1vzsl.png"></div></div><p>图像输入层指定输入大小。您可以在将图像通过网络之前调整图像大小，但网络也可以处理较大的图像。如果您为网络提供较大的图像，则激活也会变大。但是，由于网络是基于大小为 227×227 的图像进行训练的，因此无法识别超过该大小的对象或特征。</p><h3 id="显示第一个卷积层的激活"><a class="markdownIt-Anchor" href="#显示第一个卷积层的激活"></a> 显示第一个卷积层的激活</h3><p>观察卷积层中的哪些区域在图像上激活，并将其与原始图像中的相应区域进行比较，以研究特征。卷积神经网络的每层由许多称为<em>通道</em>的二维数组组成。用图像对网络进行一轮训练，并检查 <code>conv1</code> 层的输出激活。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">act1 = activations(net,im,<span class="string">&#x27;conv1&#x27;</span>);</span><br></pre></td></tr></table></figure><p>激活以三维数组的形式返回，其中第三个维度对 <code>conv1</code> 层上的通道进行索引。要使用 <code>imtile</code> 函数显示这些激活，请将数组重构为四维。<code>imtile</code> 的输入中的第三个维度表示图像颜色。将第三个维度的大小设置为 1，因为激活没有颜色。第四个维度对通道进行索引。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sz = <span class="built_in">size</span>(act1);</span><br><span class="line">act1 = <span class="built_in">reshape</span>(act1,[sz(<span class="number">1</span>) sz(<span class="number">2</span>) <span class="number">1</span> sz(<span class="number">3</span>)]);</span><br></pre></td></tr></table></figure><p>现在您可以显示激活。每个激活都可能采用任何值，因此请使用 <code>mat2gray</code> 归一化输出。缩放所有激活值，以使最小激活值为 0，最大激活值为 1。在 8×8 网格上显示 64 个图像，层中的每个通道对应一个图像。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I = imtile(mat2gray(act1),<span class="string">&#x27;GridSize&#x27;</span>,[<span class="number">8</span> <span class="number">8</span>]);</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_03-20240714171507-w7zws2h.png"></div></div><h3 id="调查特定通道中的激活"><a class="markdownIt-Anchor" href="#调查特定通道中的激活"></a> 调查特定通道中的激活</h3><p>激活网格中的每个图块都是 <code>conv1</code> 层中某个通道的输出。白色像素表示强的正激活，黑色像素表示强的负激活。主要为灰色的通道未对输入图像进行强烈激活。通道激活中的像素位置对应于原始图像中的相同位置。通道中某个位置的白色像素表示该通道在该位置强激活。</p><p>调整通道 22 中的激活大小以使其与原始图像具有相同的大小，并显示激活。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">act1ch22 = act1(:,:,:,<span class="number">22</span>);</span><br><span class="line">act1ch22 = mat2gray(act1ch22);</span><br><span class="line">act1ch22 = imresize(act1ch22,imgSize);</span><br><span class="line"></span><br><span class="line">I = imtile(&#123;im,act1ch22&#125;);</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_04-20240714171507-cw7l47s.png"></div></div><p>您可以看到此通道在红色像素上激活，因为通道中的偏白的像素对应于原始图像中的红色区域。</p><h3 id="查找最强的激活通道"><a class="markdownIt-Anchor" href="#查找最强的激活通道"></a> 查找最强的激活通道</h3><p>您还可以通过编程方式调查具有大量激活值的通道来尝试查找感兴趣的通道。使用 <code>max</code> 函数查找具有最多激活值的通道，调整大小并显示这些激活值。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[maxValue,maxValueIndex] = <span class="built_in">max</span>(<span class="built_in">max</span>(<span class="built_in">max</span>(act1)));</span><br><span class="line">act1chMax = act1(:,:,:,maxValueIndex);</span><br><span class="line">act1chMax = mat2gray(act1chMax);</span><br><span class="line">act1chMax = imresize(act1chMax,imgSize);</span><br><span class="line"></span><br><span class="line">I = imtile(&#123;im,act1chMax&#125;);</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_05-20240714171507-m43mzo6.png"></div></div><p>与原始图像进行比较，注意此通道在边缘激活。它在浅色左侧/深色右侧边缘上正激活，在深色左侧/浅色右侧边缘上负激活。</p><h3 id="调查更深的层"><a class="markdownIt-Anchor" href="#调查更深的层"></a> 调查更深的层</h3><p>大多数卷积神经网络在第一个卷积层中学习检测颜色和边缘等特征。在更深的卷积层中，网络学习检测更复杂的特征。较深的层通过组合较浅层的特征来构建其特征。以调查 <code>conv1</code> 层的方式调查 <code>fire6-squeeze1x1</code> 层。计算、重构并在网格中显示激活。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">act6 = activations(net,im,<span class="string">&#x27;fire6-squeeze1x1&#x27;</span>);</span><br><span class="line">sz = <span class="built_in">size</span>(act6);</span><br><span class="line">act6 = <span class="built_in">reshape</span>(act6,[sz(<span class="number">1</span>) sz(<span class="number">2</span>) <span class="number">1</span> sz(<span class="number">3</span>)]);</span><br><span class="line"></span><br><span class="line">I = imtile(imresize(mat2gray(act6),[<span class="number">64</span> <span class="number">64</span>]),<span class="string">&#x27;GridSize&#x27;</span>,[<span class="number">6</span> <span class="number">8</span>]);</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_06-20240714171507-0uv1y6g.png"></div></div><p>图像太多，无法详细调查，因此不妨关注一些更有趣的图像。显示 <code>fire6-squeeze1x1</code> 层中最强的激活。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[maxValue6,maxValueIndex6] = <span class="built_in">max</span>(<span class="built_in">max</span>(<span class="built_in">max</span>(act6)));</span><br><span class="line">act6chMax = act6(:,:,:,maxValueIndex6);</span><br><span class="line">imshow(imresize(mat2gray(act6chMax),imgSize))</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_07-20240714171507-gufxf6t.png"></div></div><p>在本例中，最大激活通道在详细特征方面不像其他一些通道那样令人感兴趣，并且表现出强力的负（深色）激活以及正（浅色）激活。此通道可能专注于面部。</p><p>在所有通道的网格中，可能有通道针对眼睛激活。进一步调查通道 14 和 47。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I = imtile(imresize(mat2gray(act6(:,:,:,[<span class="number">14</span> <span class="number">47</span>])),imgSize));</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_08-20240714171507-2y1ip1r.png"></div></div><p>许多通道包含同时存在浅色和深色的激活区域。它们分别是正激活和负激活。但是，由于 <code>fire6-squeeze1x1</code> 层后面是修正线性单元 (ReLU)，因此只使用正激活。要只调查正激活，请重复分析以可视化 <code>fire6-relu_squeeze1x1</code> 层的激活。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">act6relu = activations(net,im,<span class="string">&#x27;fire6-relu_squeeze1x1&#x27;</span>);</span><br><span class="line">sz = <span class="built_in">size</span>(act6relu);</span><br><span class="line">act6relu = <span class="built_in">reshape</span>(act6relu,[sz(<span class="number">1</span>) sz(<span class="number">2</span>) <span class="number">1</span> sz(<span class="number">3</span>)]);</span><br><span class="line"></span><br><span class="line">I = imtile(imresize(mat2gray(act6relu(:,:,:,[<span class="number">14</span> <span class="number">47</span>])),imgSize));</span><br><span class="line">imshow(I)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_09-20240714171507-d5tkau3.png"></div></div><p>与 <code>fire6-squeeze1x1</code> 层的激活相比，<code>fire6-relu_squeeze1x1</code> 层的激活清楚地定位到具有强面部特征的图像区域。</p><h3 id="测试通道是否识别眼睛"><a class="markdownIt-Anchor" href="#测试通道是否识别眼睛"></a> 测试通道是否识别眼睛</h3><p>检查 <code>fire6-relu_squeeze1x1</code> 层的通道 14 和 47 是否针对眼睛激活。将两眼一睁一闭的新图像输入到网络中，并将得到的激活与原始图像的激活进行比较。</p><p>读取并显示两眼一睁一闭的图像，并计算 <code>fire6-relu_squeeze1x1</code> 层的激活。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imClosed = imread(&#x27;face-eye-closed.jpg&#x27;);</span><br><span class="line">imshow(imClosed)</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_10-20240714171507-fzl964b.png"></div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">act6Closed = activations(net,imClosed,&#x27;fire6-relu_squeeze1x1&#x27;);</span><br><span class="line">sz = size(act6Closed);</span><br><span class="line">act6Closed = reshape(act6Closed,[sz(1),sz(2),1,sz(3)]);</span><br></pre></td></tr></table></figure><p>在一个图窗中绘制图像和激活。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channelsClosed = repmat(imresize(mat2gray(act6Closed(:,:,:,[14 47])),imgSize),[1 1 3]);</span><br><span class="line">channelsOpen = repmat(imresize(mat2gray(act6relu(:,:,:,[14 47])),imgSize),[1 1 3]);</span><br><span class="line">I = imtile(cat(4,im,channelsOpen*255,imClosed,channelsClosed*255));</span><br><span class="line">imshow(I)</span><br><span class="line">title(&#x27;Input Image, Channel 14, Channel 47&#x27;);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/VisualizeActivationsOfAConvolutionalNeuralNetworkExample_11-20240714171507-hu0281u.png"></div></div><p>您可以从激活中看到，通道 14 和 47 都针对单个眼睛激活，并且在某种程度上也针对嘴周围的区域激活。</p><p>网络从未被告知要学习眼睛的特征，但它已学习到眼睛是区分图像类的一个有用特征。以前的机器学习方法通常手动设计特定于问题的特征，但这些深度卷积网络可以为自己学习有用的特征。例如，学习识别眼睛可以帮助网络区分猎豹和豹纹地毯。</p><h2 id="问题和笔记"><a class="markdownIt-Anchor" href="#问题和笔记"></a> 问题和笔记</h2><ul><li><p>The Image Input layer specifies the input size. You can resize the image before passing it through the network, but the network also can process larger images. If you feed the network larger images, the activations also become larger. However, since the network is trained on images of size 227-by-227, it is not trained to recognize objects or features larger than that size.</p><ul><li>所以squeezenet是可以输入更大尺寸的图像的，只不过无法识别更大的物体？</li><li>在这个案例里没有对图像进行resize，说明是可以直接输入的</li></ul></li><li><p><strong>ReLU之后只有正activation，通过激活图来看就可以明显看出经过ReLU之后，特征会变得更加明显</strong></p><ul><li>与conv5层的激活相比，relu5层清晰地精确定位图像中具有强烈激活的面部区域特征。</li><li><strong>conv5层的激活图</strong></li></ul></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240714170154-zwiyrsu.png"></div></div><ul><li><strong>relu5层的激活图</strong></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240714170213-po30br1.png"></div></div><ul><li><p>参考：<a href="https://zhuanlan.zhihu.com/p/572124574?utm_psn=1730887377839755264">MATLAB环境下可视化卷积神经网络CNN的激活图 - 知乎 (zhihu.com)</a></p></li><li><p>正activation和负activation是什么？</p><ul><li>White pixels represent strong positive activations and black pixels represent strong negative activations.</li></ul></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240714165839-fwmcn0t.png"></div></div><h2 id="资料"><a class="markdownIt-Anchor" href="#资料"></a> 资料</h2><ul><li>Matlab官方文档（squeezenet）：<a href="https://ww2.mathworks.cn/help/deeplearning/ug/visualize-activations-of-a-convolutional-neural-network.html">https://ww2.mathworks.cn/help/deeplearning/ug/visualize-activations-of-a-convolutional-neural-network.html</a></li><li><a href="https://zhuanlan.zhihu.com/p/572124574?utm_psn=1730887377839755264">MATLAB环境下可视化卷积神经网络CNN的激活图 - 知乎 (zhihu.com)</a>：用的是AlextNet来可视化激活图</li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么要写日记？</title>
      <link href="//post/why-write-a-diary-hhfd6.html"/>
      <url>//post/why-write-a-diary-hhfd6.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/gpt-1717300320488-20240602115217-k27srd5.png"></div></div><p>回顾我过去的日记，发现写的都是抱怨的内容和无用的唠叨，没有什么意义，都是废话。</p><p>后来我才发现，</p><p>日记应该侧重于记录自己的进步与收获，搭上“复利效应”的列车，让自己不断成长。</p><p>此外，日记和写作的另一个意义在于把生活中零散的、碎片的事情和经历，重新整理为一个有序的整体，从而让自己的生命更加连贯，更加有序。</p><blockquote><p>“原来17岁的我真的只会烦恼着学习、友情、还有觉得自己很孤单的那些青春小矫情。 可十年了，不说当时烦恼着的事情了，连当时很在乎的人都要忘记了，所以你看，好像所有事情都会过去。”——B站up主邓二单单 <a href="https://www.bilibili.com/video/BV1mr4y1n7NS/?buvid=XU95F8C951814CF4E5254768F2EFCD9965BCB&amp;from_spmid=united.player-video-detail.drama-float.0&amp;is_story_h5=false&amp;mid=es8Qp8798HT6OKJF9Ioz%2Bg%3D%3D&amp;p=1&amp;plat_id=116&amp;share_from=ugc&amp;share_medium=android&amp;share_plat=android&amp;share_session_id=0c4b9d4b-9511-420d-88aa-eeaa0c144df6&amp;share_source=WEIXIN_MONMENT&amp;share_tag=s_i&amp;spmid=united.player-video-detail.0.0&amp;timestamp=1709829460&amp;unique_k=ZakkpkP&amp;up_id=261521395">A letter in a diary 047｜终于打开这封17岁时写的信_哔哩哔哩_bilibili</a></p></blockquote><p>除了简单每日复盘、每周复盘、每月复盘、每年复盘外，还可以给未来的自己写信，把未来的自己当做一个笔友，写下当下最真实的所学所感所想。我发现别说一年了，一个月前的自己其实心态和想法都有很大的不同。</p><p>于是，当下的我不仅仅是当下这一瞬间的我，而是无数个过去的我的聚合，当下的我就算孤单但一定不孤独，在漫长的时间长河里，有无数的我，可以为当下的我提供力量，<strong>不同时空里，有好多个我在互相打气</strong>！</p><h2 id="我的日复盘-周复盘-月复盘-年复盘笔记分享"><a class="markdownIt-Anchor" href="#我的日复盘-周复盘-月复盘-年复盘笔记分享"></a> ‍我的日复盘、周复盘、月复盘、年复盘笔记分享</h2><h3 id="日复盘"><a class="markdownIt-Anchor" href="#日复盘"></a> 日复盘</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/%E6%97%A5%E8%AE%B0%E6%A8%A1%E6%9D%BF-20240602114013-593dmej.png"></div></div><h3 id="周复盘"><a class="markdownIt-Anchor" href="#周复盘"></a> 周复盘</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-06-02_11-40-39-20240602114048-xyy2jly.png"></div></div><p>‍</p><h3 id="月复盘"><a class="markdownIt-Anchor" href="#月复盘"></a> 月复盘</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/%E6%9C%88%E5%A4%8D%E7%9B%98%E6%A8%A1%E6%9D%BF-20240602114021-2x7rbpr.png"></div></div><h3 id="年复盘"><a class="markdownIt-Anchor" href="#年复盘"></a> 年复盘</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/%E5%B9%B4%E5%A4%8D%E7%9B%98%E6%A8%A1%E6%9D%BF-20240602114024-27fjhaq.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOC：面向主题地去管理笔记链接</title>
      <link href="//post/moc-manage-the-notes-link-to-the-theme-4uatt.html"/>
      <url>//post/moc-manage-the-notes-link-to-the-theme-4uatt.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/MOC%E9%9D%A2%E5%90%91%E4%B8%BB%E9%A2%98%E5%9C%B0%E5%8E%BB%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0%E9%93%BE%E6%8E%A5-20240512105740-xzkvbuo.png"></div></div><p>个人认为，双链笔记的核心<strong>并不在于双向链接</strong>，对我而言，我接触到双链笔记软件这 3 年以来的主要收获可以概括为两个点：</p><ul><li>一个是「<strong>笔记应该是渐进式的</strong>」，目前我觉得这个理念不仅仅应该应用在笔记上，也应该用在生活上——生活也应该是渐进式的，这个之后我会写一篇文章重点介绍我的收获。</li><li>另一个收获便是「<strong>面向主题地去管理笔记链接</strong>」，也就是本文章要介绍的笔记理念。</li></ul><p>「<strong>面向主题地去管理笔记链接</strong>」，这一方法在双链笔记圈常常被叫做 MOC，Map of Contents，直接翻译叫做内容地图，我更喜欢将其翻译为索引笔记、主题笔记。</p><p>MOC是我目前强烈推荐的笔记管理方法，它有着传统笔记分类法、标签管理难以替代的优势。Markdown笔记格式、OneNote软件本身就支持管理笔记链接的方式来组织信息，在如今大热的新一代笔记软件——双链笔记软件中，MOC的作用还得了大大加强，不仅仅能自上而下地管理笔记，还能代替标签进行自下而上的渐进式积累零碎笔记，是一个特别实用、好用的笔记管理方法。</p><h2 id="moc-的起源"><a class="markdownIt-Anchor" href="#moc-的起源"></a> MOC 的起源</h2><p>MOC这个名词据说最早是由程序员 <a href="https://x.com/LionKimbro/media">Lion Kimbro</a> 在 2003 年写的《<a href="https://users.speakeasy.net/~lion/nb/book.pdf">How to Make a Complete Map of Every Thought You Think</a>》一书中提出的。当时 2003 的他还在用活页笔记本维护纸质笔记系统。</p><p>而将 MOC 这一概念应用到电子笔记软件里并大力宣扬的人叫 <a href="https://x.com/nickmilo?lang=zh">Nick Milo</a>，他是 Obsidian 社区的大神。在他的文章《<a href="https://notes.linkingyourthinking.com/Cards/What+are+higher-order+notes">What can we call higher-order notes?</a>》，将 MOC 认为是高阶笔记，认为它灵活，能满足收集、概述、结构化、导航等笔记目的，还方便链接知识、重塑想法和构建新想法。之后MOC这一管理笔记的理念被越来越多人了解并推崇。</p><blockquote><p><strong>MOC (Map of Content)</strong>  -A flexible higher-order note that serves all the above purposes of gathering, outlining, structuring, and navigating. In addition, it is an active thinking tool that allows for the reshaping, connecting, and building of ideas</p><p>——Nick Milo <a href="https://notes.linkingyourthinking.com/Cards/What+are+higher-order+notes">《What can we call higher-order notes?》</a> 2020-06-28</p></blockquote><p>而本篇文章提到的MOC管理笔记方法，融合了INKP笔记法、PARA信息管理系统的理念，已经是个人“改编过”的笔记方法理念了，欢迎其他小伙伴提出意见，交流讨论。</p><h2 id="文件夹和标签管理笔记的弊端"><a class="markdownIt-Anchor" href="#文件夹和标签管理笔记的弊端"></a> 文件夹和标签管理笔记的弊端</h2><p>用文件夹和标签费心维护一个精致复杂的笔记系统其实是费力不讨好的，下面会介绍文件夹和标签管理笔记的弊端。</p><h3 id="文件夹"><a class="markdownIt-Anchor" href="#文件夹"></a> 文件夹</h3><p>传统的笔记方法喜欢用文件夹进行笔记分类，文件夹分类非常简单，只需要建立一个文件夹，然后将笔记丢进去。这和用 Windows 电脑的资源管理器管理文件、用代码编辑器管理代码项目体验很一致。</p><p>文件夹分类需要遵循严格的层次结构，文件夹分类的最大弊端就在于此，<strong>一篇笔记只能放在一个分类下。</strong> 如果希望一篇笔记出现在多个分类文件夹下，只能复制出这篇笔记的副本，放到其他分类下，但这时候这些「克隆笔记」的内容如何同步就又是一个问题了。此外，一个文件夹也只能放在另一个文件夹下。这就造成了单纯只用文件夹分类，会导致<strong>过去的笔记难以复用</strong>，<strong>很容易创建重复的笔记</strong>，不断造轮子。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240511002803-wbt2q85.png"></div></div><h3 id="标签"><a class="markdownIt-Anchor" href="#标签"></a> 标签</h3><p>后来，很多笔记软件开始加入标签这个功能，一篇笔记可以打上多个不同的标签，终于能实现一篇笔记进行多分类了，还可以对标签进行 AND、OR、NOT 等高级联合查询笔记，但标签依然存在很大的问题：</p><ul><li><strong>标签的管理笔记问题。</strong> 大部分笔记软件的标签功能<strong>其实并没有整理功能</strong>，可能只有简单的按时间排序功能，一个标签里的笔记只能在一个维度上堆积。标签在整理汇总功能上，甚至还不如文件夹（文件夹起码还可以对笔记进行自定义排序）。在某种意义上，<strong>标签更像是一个快捷搜索的功能，一个汇集想法的功能，而不是分类归档功能</strong>。</li><li><strong>创建多个重复标签的问题。</strong> 随着笔记越来越多，标签越来越多，管理标签也会变得非常头疼。因为标签的创建可能非常随意，可能重复创建一个标签，以不同的命名形式存在，比如 <code>#神经科学</code>，<code>#脑科学</code>、<code>#神经生物学</code>，如何把这些重复标签合并，将相关的文档聚合在一起呢？虽然一些笔记软件可以标签合并，但是本质问题没有解决，<strong>我还是会创建重复标签，那过一段时间就需要合并标签</strong>，除非我能牢固记住所有的标签命名。</li><li><strong>标签依然存在无法多分类的问题。</strong> 为了管理众多标签，很多笔记软件支持通过父子标签来管理标签，然而，<strong>父子标签的这种分类其实也只是单分类，过去使用文件夹单分类的问题，在另一个维度——管理标签上又出现了</strong>：这就意味着你创建一个 <code>#睡眠</code> 的标签，收集了很多笔记，你之前将其放在 <code>#神经科学</code> 这个标签下，现在你又创建了一个 <code>#健康</code> 标签，如何把 <code>#睡眠</code> 这个标签同时放在 <code>#神经科学</code> 标签和 <code>#健康</code> 标签里就是一个问题。只能把之前整理的那些睡眠笔记，合并成一篇《睡眠》笔记，然后打上 <code>#神经科学</code> 标签和 <code>#健康</code> 标签。这也就是说，<strong>当标签完成它的汇聚信息功能之后，这个标签的功能就丧失了，就应该转化为文档了，否则你难以对这个标签本身进行多分类</strong>。就如一个文件夹下的所有笔记不方便出现在其他文件夹里一样</li><li><strong>标签管理笔记的复用问题。</strong> 标签管理的笔记最好是模块化的卡片笔记，标签本身适合是一个比较广泛的主题，比如 <code>#个人碎碎念</code>、<code>#神经科学</code>，因为永远也没有汇集完的一天，也不太需要整理为一个文档（正如前面所说的标签多分类问题）。但是标签尽管能对卡片笔记进行多分类，并不意味着它就可以很好的为笔记进行服务了，比如你记了一篇关于《熬夜危害》的笔记，为一个卡片笔记打上<code>#神经科学</code>、<code>#睡眠</code>、<code>#生活百科</code>、<code>#健康</code>等标签，<strong>并不意味着这篇笔记可以被复用</strong>，更多情况是<strong>你打的标签可能更多是起美观、总结出关键词的作用。</strong> 以后想要用到这篇《熬夜危害》的笔记，要么在一个个标签里下滑寻找，要么使用搜索功能，这和文件夹体系其实没什么太大区别。</li><li><strong>标签体系与双链功能。</strong> 标签体系如果加入双链功能，就可以用<code>[[</code>快速搜索找到符合的笔记进行引用了，然而一旦加了双链功能后，双链就可以替代标签了，又何必再用标签呢？毕竟标签对笔记的多分类、信息汇聚功能，使用双链也能做到，甚至需要的信息汇聚之后，直接在双链文档就能进行整理了，而不像标签只是一个标签，无法整理标签内的信息。其实<strong>标签就是这么一个矛盾的功能，很鸡肋，食之无味弃之可惜</strong>。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240511005134-i8sjf0y.png"></div></div><h2 id="由管理文件和写代码获得的启示"><a class="markdownIt-Anchor" href="#由管理文件和写代码获得的启示"></a> 由管理文件和写代码获得的启示</h2><p>用文件夹管理笔记，存在的主要问题在于笔记只能属于一个分类，而且层次结构一旦过深，处于深层结构的笔记就容易被遗忘。我们可以先看看 Windows 电脑的资源管理器管理文件和程序员写代码项目是怎么解决用文件夹管理文件的这些问题的：</p><ul><li>Windows 电脑的资源管理器管理文件，如果遇到一个文件需要出现在多个文件夹的需求，可以用「<strong>快捷方式」</strong> 创建一个指向该文件的链接，使得这个文件可以在多个文件夹里出现。同时为了避免层级深的文件被遗忘、将常用的文件夹放在更方便的位置，也可以用快捷方式将文件放在桌面或者其他地方，同时 Windows 电脑的资源管理器还有「<strong>快捷访问</strong>」的功能，能将常用文件夹置顶。</li><li>程序员写代码项目常常会有一个 main 文件（或者 run 文件、index 文件），main 文件执行主要的程序功能，而 main 文件的文件一般比较简洁，<strong>可以自上而下地把所需要的代码功能的逻辑先大致写出来，不考虑具体实现，写完大概逻辑之后再具体一个个实现这些功能。</strong> 这些功能代码存放的文件夹层级可以很深，但通过 main 文件里的代码链接我就可以跳转到对应的功能代码，所以层级很深也无所谓，或者把所有功能代码都放在一个叫 <code>utils</code> 的文件夹里也可以。程序员喜欢会将一个重复使用的功能封装为模块，这样其他代码需要的时候就可以直接调用，不需要重复写一样的代码，后面要改代码还需要一个个修改。而要调用模块的代码，只需要声明这个模块的位置在哪里就可以了。</li></ul><p>从 Windows 电脑的资源管理器管理文件和程序员写代码项目这两个例子来看，我们可以有如下感悟</p><ul><li>可以用链接的方式管理笔记，使得<strong>一篇笔记可以出现在多个地方</strong>。写了一篇《多巴胺》笔记，可以把这个笔记的链接放在《神经科学》这篇笔记下面，也可以放在《神经递质》笔记下面，还可以放在《帕金森病》、《手机上瘾》等笔记下面。</li><li>用链接的方式可以根据需要对笔记的链接进行<strong>随意排序、分类</strong>，<strong>可以忽略这篇笔记的实际存放位置、根据需要决定这篇笔记的展示位置。</strong> 笔记本体可以按照原来的层级分类存放，也可以全部放在一个文件夹里不分层级，更加省心 <strong>。</strong></li><li>笔记可以像写代码一样，<strong>尽量模块化</strong>，笔记模块化后不仅仅能在未来需要用的时候省力，写作时就是组装各种模块，还有助于知识的复利积累。比如一篇《多巴胺》笔记，其他笔记涉及到多巴胺这个名词的段落，在思源笔记里就可以建立双向链接关系，这样既可以回顾《多巴胺》这篇笔记，又可以补充《多巴胺》这篇笔记的信息，比如你在《为什么刷手机会上瘾》这篇笔记中，发现多巴胺原来正是驱动你不断刷手机的元凶之一，你发现原来多巴胺并不给予快乐，只是给你欲望和动力，《为什么刷手机会上瘾》引用《多巴胺》笔记之后，以后再看《多巴胺》这篇笔记和它的反向链接，就可以回顾起这些知识点了。通过不断的完善，《多巴胺》这篇笔记就会越来越完善，会涉及越来越多的领域，变成自己的知识财富。</li></ul><p>以上的感悟，其实很大程度上就是 MOC 的核心理念了——管理链接而非本体、面向主题组织信息。</p><p>接下来就正式介绍 MOC 笔记方法了。</p><h2 id="moc管理链接而非本体"><a class="markdownIt-Anchor" href="#moc管理链接而非本体"></a> MOC：管理链接而非本体</h2><p><strong>MOC推崇管理笔记的索引链接而非笔记本体。</strong> 可以根据需要让笔记的链接随意出现在不同的笔记里，很轻松地进行笔记复用，让过去记的笔记能在不同的主题笔记下发挥不同作用，一篇概念笔记可以属于多篇主题笔记，一篇主题笔记管理着众多概念笔记，一篇主题笔记又可以出现在其他的主题笔记里，笔记之间可以彼此嵌套引用，这有利于知识的持续性积累，形成自己的知识网络！</p><h3 id="使用moc的前提"><a class="markdownIt-Anchor" href="#使用moc的前提"></a> 使用MOC的前提</h3><p>需要笔记软件支持提供笔记链接才行，比如老大哥「OneNote」，新型双链本地笔记软件「思源笔记」和「Obsidian」 等，就能很好支持MOC来管理笔记。</p><p>Markdown 其实天生就支持 MOC，使用 Markdown 的链接支持跳转文件， 只是缺少双链，少了将 MOC 当做标签的自下而上积累的功能。这样看来，其实用 Word 也能链接文件，实现 MOC，就是不太便捷。</p><p>一般云笔记也支持提供笔记链接，但是需要考虑引用笔记的便捷程度、笔记路径更改路径不失效、内链标题是否支持自动更新、新建文档能否指定路径等问题。</p><p>我目前的主力笔记软件是「<strong>思源笔记</strong>」，思源笔记主要有如下创建笔记链接的方式：</p><ul><li>可以在文档树选中文档右键进行复制块引用或者在打开的文档的页签右键进行复制块引用</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-25_17-45-44-20240525174551-iub1ahb.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-25_17-46-02-20240525174606-771ke3v.png"></div></div><ul><li><code>[[+输入文字</code>，或是选中一段文字后输入<code>Alt+[</code>，检索引用已有笔记或者直接创建新笔记，并建立链接。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-25_17-46-51-20240525174653-it6yo9o.png"></div></div><p>‍</p><p>‍</p><p>‍</p><p>‍</p><p>‍</p><h3 id="怎么管理笔记链接"><a class="markdownIt-Anchor" href="#怎么管理笔记链接"></a> 怎么<strong>管理笔记链接</strong></h3><p>在思源笔记里要使用 MOC，很简单，你需要定一个目前你感兴趣的主题，可以与你的专业有关，也可以是你自己的兴趣爱好，比如可以一个是大主题《神经科学》，也可以是小主题《熬夜的危害》，这个主题向的笔记，我称之为「<strong>主题笔记</strong>」，主题既可以是纯知识型的笔记，也可以是实践型的项目笔记，主题笔记起统筹主题下所有信息的作用。然后在主题笔记下通过块引来引用或新建相关的笔记，与主题相关的笔记，我喜欢称之为「<strong>概念笔记」，</strong> 概念笔记的理念类似于卡片笔记，卡片笔记侧重将一个名词模块化，解释清楚，便于复用，但概念笔记并仅仅停留在卡片，如果一篇概念笔记的内容已经积累太多了，是可以直接升级为主题笔记进行拆解和内容补充的。主题笔记和概念笔记的想法参考了L先生的INKP笔记法，在他的《打开心智》一书中有具体阐述。</p><p>管理链接的形式主要有下面几种：</p><ul><li>列表型MOC</li><li>表格型MOC</li><li>数据库型MOC</li><li>白板型MOC</li></ul><p>我会以《神经科学》这个主题笔记为例，介绍自己是怎么在思源笔记里使用 MOC 收集和管理笔记的。</p><p>首先，我一般会给主题笔记的标题<strong>添加 @ 前缀</strong>，以区分概念笔记，并且添加 @ 前缀也有利于快速搜索，因为我搜“神经科学”可能会搜到其他概念笔记，而搜“@神经科学”就可以直接命中这篇主题笔记。并且我如果未来要搜索关于神经科学下的概念笔记，比如《神经科学经典教科书》这篇笔记直接搜索不到，也可以通过搜索《@神经科学》这篇主题笔记去寻找。</p><p>然后，我就会在《@神经科学》这篇主题笔记，存放所有关于神经科学的笔记。我最常用的管理链接的方式是列表，因为列表创建非常方便、可以轻松实现层级分类、层级折叠。</p><p>列表管理笔记索引的方式，可以单纯用列表管理这些索引，如果有些笔记暂时还没记录、还不了解、或者觉得很简单没必要升级为一篇笔记，可以单纯用文字记录、占位，之后有需要再块引新建文档（是的，<strong>我不会先在文档树找个位置新建文档</strong>，然后把笔记链接丢在主题笔记，而习惯直接在主题笔记通过「<strong>块引新建文档</strong>」直接新建文档）。例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [[概念笔记1]]</span><br><span class="line"><span class="bullet">-</span> [[概念笔记2]]</span><br><span class="line"><span class="bullet">-</span> [[概念笔记3]]</span><br><span class="line"><span class="bullet">-</span> 简单概念4</span><br><span class="line"><span class="bullet">-</span> 待了解概念5</span><br></pre></td></tr></table></figure><p>也可以在索引后添加内容概括，甚至添加引用关系。例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [[方法1]] 通过方式 A 给出了解决方法。</span><br><span class="line"><span class="bullet">-</span> [[方法2]] 从 B 的角度分析 [[方法1]] 的原理，并用 C 改进了方案，提高了方法的成功率。</span><br><span class="line"><span class="bullet">-</span> [[方法3]] 用 [[理论7]] 降低了 [[方法1]] 的使用成本。</span><br><span class="line"><span class="bullet">-</span> [[方法4]] 通过方式 D 给出的一种解决办法。</span><br><span class="line"><span class="bullet">-</span> [[方法5]] 将 [[方法1]] 与 [[方法4]] 结合，继承了二者各自的优势。</span><br><span class="line"><span class="bullet">-</span> [[文献6]] 对这些方法所试图解决的问题 I 进行了反思，提出在情况 E 下，这个问题可以用方式 F 直接规避，也就不需要解决了。</span><br><span class="line"><span class="bullet">-</span> 注：问题 I 与 [[问题II]] 相关。</span><br></pre></td></tr></table></figure><p>当主题笔记的记录变多时，可以对其下的内容进行更细致的分类。如果某一分类的内容足够多，也可以考虑将其独立为一个新的 MOC，并在原来的 MOC 里留下指向这个新 MOC 的链接。 例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 类型 A</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记1]] （概括）</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记2]] （概括）</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记3]] （概括）</span><br><span class="line"><span class="bullet">    -</span> 概念7：（概括）</span><br><span class="line"><span class="bullet">-</span> 类型 B</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记4]]</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记5]] （概括）</span><br><span class="line"><span class="bullet">-</span> 类型 C</span><br><span class="line"><span class="bullet">    -</span> [[概念笔记6]]</span><br><span class="line"><span class="bullet">-</span> [[类型 D]]</span><br></pre></td></tr></table></figure><blockquote><p>备注：以上几个列表型MOC例子改编自：<a href="https://zhuanlan.zhihu.com/p/603647786">笔记系统：MOC（内容地图）的组织 - 知乎 (zhihu.com)</a></p></blockquote><p>实际例子：我收集了一些神经科学方面的教材，在这里我用了列表来管理笔记，一些已经读的书、在读的书，我还可以直接在 MOC 里添加一些网页资料。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-11_22-54-07-20240511225409-wjv8hdc.png"></div></div><p>由于《神经系统组成》这个概念比较大、涉及的内容多，所以我将其升级为主题笔记（这里其实还是用列表型MOC，只是用了主题自带的列表转导图功能）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-11_23-16-47-20240511231649-hfconcy.png"></div></div><p>‍</p><p>用表格也能管理索引，不过由于思源笔记不少主题提供了列表转表格功能，再加上目前思源笔记有数据库功能，可以当成高级表格使用，我就比较少用表格了。下面是一个用表格管理链接的例子：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-11_23-29-41-20240511232949-m7t1zcg.png"></div></div><p>而数据库这个功能在笔记管理上，除了可以当成高级表格使用外，思源笔记还有一个特色功能——「<strong>添加到数据库</strong>」，可以很轻松的将一个笔记放进<strong>多个数据库里</strong>，于是目前数据库又多了一个功能——<strong>收集零散的概念笔记</strong>，创建了一个笔记之后，可以暂时不着急去思考这篇笔记要放在主题笔记的哪个位置，可以用数据库先存放这些笔记，等时机恰当再进行整理（至于是用列表整理还是就用数据库整理根据自己的喜好）。数据库尤其适合整理名词概念类的笔记，零散杂乱，用列表整理其实挺头疼的，完全不知道该放在哪里，等列表长了，也不方便查看，用数据库整理就非常的适合。</p><p>「添加到数据库」功能很适合搭配渐进式笔记法，两者搭配将使得创建笔记更加无压，数据库从此变成一个类似标签的功能，我们可以快速新建一个文档，记完笔记，然后将这篇笔记添加到指定数据库，就完成了这篇笔记的记录和收集，而不用再寻找对应的主题笔记，思考这篇笔记要放在主题笔记的哪个位置。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240511233638-yeg0o4z.png"></div></div><p>而至于白板型的MOC，我暂时没有这个需求，就不多说了，可以用Excalidraw插件实现白板型MOC，或者使用外部的白板软件管理思源笔记的块Markdown链接实现。</p><h3 id="用moc管理笔记的好处"><a class="markdownIt-Anchor" href="#用moc管理笔记的好处"></a> 用MOC<strong>管理笔记的好处</strong></h3><ul><li><p><strong>任意的笔记管理方式</strong>：管理链接不受制于一个软件的文件系统，只需要它能提供链接功能，我们就可以根据自己的需要设计我们管理笔记的方式。你可以新建一个文档，用字母排序、创建时间排序管理你需要的笔记，也可以按作者排序、按领域、按主题来管理任何笔记。并且这些管理方式可以共存，同时展现。并且除了简单的层级结构以外， 你可以采用更多维度的方式来展现索引，将深层结构平铺开来，比如用表格、思维导图甚至白板管理索引。</p></li><li><p><strong>更轻松的笔记分类方式</strong>：用链接的方式可以根据需要对笔记的链接进行分类，可以忽略这篇笔记的实际存放位置、根据需要决定这篇笔记的展示位置。笔记本体可以全部放在一个文件夹里不分层级，这样就不用再像用文件夹分类的方式，纠结这篇笔记属于哪个分类，觉得这个笔记和某个 MOC 有关，就丢进去，以后觉得无关再删除这条笔记链接，就完成了笔记分类删除。</p></li><li><p><strong>笔记多分类和知识图谱</strong>：通过粘贴链接，让一个笔记出现在多个 MOC 里，实现笔记多分类。一个 MOC 笔记可以放入其他多个 MOC 笔记里，层层嵌套，笔记之间形成多对多的关系，最终形成自己的知识图谱。</p></li><li><p><strong>轻松复用过去的笔记</strong>：MOC 推崇管理链接，所以可以直接引用过去的笔记，实现知识复用，有利于知识复利。</p></li><li><p><strong>引用外部链接，汇集更多信息</strong>：可以引用内部的笔记链接，也可以引用外部的链接，比如网页链接、其他软件的笔记和项目链接，笔记软件的链接也可以被外部软件引用。把所有需要的信息，无论是这个笔记软件的还是其他软件的，都整理在一起，而且由于他们都是链接，彼此非常统一。</p></li><li><p><strong>兼容自上而下管理和自下而上的渐进式积累</strong>。MOC管理笔记，推崇以自上而下为主，自下而上为辅的笔记管理。自上而下就是先通过积累形成若干个主题，再从这些主题出发，想清楚自己缺少什么，需要去弥补什么，然后有意识地去获取知识来填充这些主题，完善这些主题。自下而上则是先积累素材，再组装成型。MOC可以和双链笔记的dailynote笔记法（渐进式笔记法）相兼容。举例，我今天学习了通货膨胀的相关笔记，但是对于经济学的我其实了解很粗浅，暂时没有调研计划，就先把通货膨胀这篇笔记的链接丢在《@经济学》这个主题笔记里（可以用列表或者数据库型MOC），等以后积累多了，再整理已有笔记，补充其他笔记，把这篇主题笔记给完善好。</p></li><li><p><strong>代替标签功能</strong>：</p><ul><li>可以在概念笔记的文档顶部，块引多个主题笔记完成打标签的步骤，可以在主题笔记的反链面板看到这些概念笔记，如果嫌弃用块引的方式打标签不仅仅污染笔记内容，反链面板管理笔记也不方便，可以选择思源笔记的数据库来代替标签功能。只需要点击「点击到数据库」功能，选择对应数据库就完成打标签的步骤，一篇笔记所属的数据库，会显示在右上方，悬浮即可查看，数据库还可以对所属条目进行排序、筛选等更高阶管理。</li><li>前面提到标签分类的一大问题是会创建很多重复标签，而在思源笔记里使用 MOC 的话，很大程度是可以解决这个问题的，因为思源笔记的文档是可以设置「<strong>命名</strong>」、「<strong>别名</strong>」的，如果你创建了一个《神经科学》MOC 笔记，害怕以后会把一些笔记会记到《脑科学》、《神经生物学》笔记里，或者害怕这篇笔记之后搜索找不到，那你就给《神经科学》这个 MOC 笔记打上脑科学、神经生物学别名就好了。合并重复文档也很简单，全选 MOC 笔记的内容，然后粘贴到另一个 MOC 笔记里就好了。思源笔记还提供了「转移引用」功能，能将一篇笔记的引用转移到另一篇笔记。所以思源笔记的双链其实是可以代替标签功能的，所以你可以把这些 MOC 笔记当成标签来使用，在 MOC 笔记里对引用这些标签的内容进行整理</li><li>前面也说到标签还有一个问题是信息汇聚完了，需要把标签本身转化为文档，否则难以复用，而用 MOC 的方式，本来创建的就是文档，可以直接在 MOC 笔记页面把汇聚的信息整理，MOC笔记还能引用其他MOC笔记，很方便复用。</li></ul></li></ul><p>‍</p><h2 id="moc面向主题地组织信息"><a class="markdownIt-Anchor" href="#moc面向主题地组织信息"></a> MOC：面向主题地组织信息</h2><p>MOC 的另一个核心理念，在于<strong>面向主题地组织信息</strong>。使用MOC管理笔记，会让你养成「<strong>面向主题</strong>」的笔记习惯，「<strong>以问题为导向</strong>」、「<strong>以行动为导向</strong>」去收集信息、整理信息，这能让使用者更多地去主动思考我需要什么、我学到了什么、还有哪些不足，而不是被动地接收信息，只是停留在收集信息这个粗浅水平上。</p><p>前面《@神经科学》主题笔记就是一个主题，我将所有我记的关于神经科学的笔记都汇总在这里，但是其实《@神经科学》这个主题很大，已经是一个领域了，其实管理很费劲。</p><p>很多时候，<strong>我们可以拆解大领域为一个个个小主题。</strong> 比如我，最近比较关心睡眠这个主题，那我就新建《@睡眠》这个主题笔记，收集所有我感兴趣的信息，如睡眠周期、睡眠与肌电脑电关系、古往今来对梦的认识、熬夜危害等等话题，其中我对熬夜危害特别感兴趣，因为自己总是熬夜，想通过了解危害让自己不敢熬夜。<strong>那我可以将熬夜升级为主题笔记</strong>，在《@睡眠》笔记下块引创建《@熬夜》这篇主题笔记，收集关于熬夜的各种信息，如经常熬夜会有哪些危害、熬夜之后补觉有没有用、同样的睡眠时间早起还是晚睡对身体危害更大等信息。</p><p>这就是「面向主题」的思想——<strong>针对当前感兴趣的主题有目的地去汇总、组织信息。</strong> 传统通过文件夹、标签管理笔记的方式，<strong>只是将单篇笔记进行分类归档，一个文件夹、一个标签下的笔记之间的关系实际还是零乱随意的</strong>。而将一个主题的信息整合在一篇「主题笔记」里，通过建立一个个的主题笔记，我们不再仅仅局限于查看一条条具体的概念笔记，而是可以站在一个更高的视角，<strong>以一种更有概括性的方式来回顾所有的笔记，思考这些笔记之间的关系是什么，帮助大脑为主题知识构建良好的线索，在脑海里建立起知识地图，更有序、更持久地将信息保留在脑中。</strong></p><p>然而，「面向主题」的魅力不仅仅在此。</p><p>许多人并不知道自己想要什么、需要什么，自己的知识缺口是什么，而是被动地接收各种渠道推送过来的信息，漫无目的地去浏览、学习。这就导致这些信息难以与生活建立关联，无法发挥真正的价值。</p><p>「面向主题」的学习，是一种有目的地主动学习、主动阅读，<strong>主动学习非常重要</strong>。被动接收信息，容易让自己患上「<strong>数字囤积症</strong>」，陷入「<strong>收藏者谬误</strong>」，以为收藏到就是学习到，只收集不思考，勤于分类，却懒于产出自己的观点。你有没有发现，当存在迫切的目标或 ddl，收集信息、做事就会特别快，并且完成确切的目标之后会特别有成就感，这就是主动学习的魅力。比起无目的地被动接受信息，主动学习可以更加高效、可以进行更加深入的思考，并且主动学习的内容是与我们自身相关的，能与自身建立关联，建立起记忆，有回忆和情感价值。更进一步地，有目的地收集一个主题的信息，而不是零散的收集五花八门的信息，能让自己在一个主题内有系统完整地学习，更好的吸收信息内化成个人观点、理清各个概念之间的联系，形成系统的知识体系。所谓的知识管理，我认为是<strong>想知道答案去主动探索知识，经过长时间有目的有方向地积累后，形成自己独到的知识体系，而非被动接收信息而不消化，或是搭建起精致的分类体系，对信息分门别类、热衷于囤积信息，却没有产出。</strong></p><p>很多人记笔记有几个误区：</p><ul><li><strong>认为笔记记得越多越好</strong>。其实笔记的数量和自己的认知提升没有正相关性，如果这些笔记乱七八糟，来自各种领域，非常零散，你只是记录没有思考、吸收、转化为自己的观点，那么这些笔记或许对你有害无益，你以为你记了就知道了，把「持有」当成了「拥有」，实际上别人一问依然只能含含糊糊回答。</li><li><strong>认为新建一篇笔记，我就要将其分类，分的越细致越好</strong>，于是使用图书馆分类法等复杂的分类管理系统来进行笔记分类。然而知识的价值并不体现在它的组织和分类形式上，而是体现在它是否能对与你相关的人或事产生影响。</li></ul><p>使用了MOC来管理我的笔记后，我发现：</p><p><strong>不应该推崇笔记的数量</strong>。笔记的数量并不代表一个人的知识丰富程度，主题笔记才能代表个人的知识体系。我们的目标应该是努力丰富和完善主题笔记，而不是去积累大量零散、不相关的概念笔记，积累概念笔记是过程，而非结果。</p><p><strong>使用图书馆分类法管理笔记进而维护起精致却庞杂的个人笔记分类体系其实没有必要，反而或许弊大于利。</strong> 过于执着分类很容易让人对各个领域都<strong>浅尝辄止</strong>，容易让我热衷于囤积与当下目标并不相关的信息，热衷于把信息存放在一个个分类目录下。这就会导致，看似笔记井井有条，搭建了一个精致完善的分类体系，实则脑子里却没有形成自己的知识体系。看似什么都懂实际什么都不精，只知其然，而不知其所以然，没有专精自己真正应该掌握的专业领域。记录的很多信息其实网上一搜就有答案，没有对信息进行更进一步的加工，没有和其他的笔记联动起来，形成自己独有的见解。浪费时间和精力记的这些笔记于自己实际的正向作用很小，记完可能就不再完善了，还容易在整理笔记上花费太多时间甚至影响自己的工作效率。</p><p>所以<strong>我推崇「面向主题地管理笔记」而不推崇用图书馆分类法搭建个人图书馆</strong>。我建议是根据自己的兴趣爱好、职业领域去长期且持续关注若干主题，建立若干相关项目，有的放矢，长期持续地去主动积累相关信息、积累自己的见解，真正对某些领域有所深刻了解。我一直都非常羡慕视频网站上的一些博主，他们可以有计划的罗列选题，然后安排时间去学习了解，制作视频，一些选题或许过去他们并不了解，却通过几周的调研查找资料，最终能向观众简单科普概念、介绍原理。我也很想成为这样的人，而他们这种方式其实就是面向主题地去执行任务。</p><p>此外，随着AIGC时代的到来，很多知识我们是可以直接问AI的，加速我们对信息的处理效率。但是有一点是AI没办法帮我们做的，那就是建立知识之间的关系、创造独属于个人的见解。而主题笔记实际上就是我们大脑的工作台，通过随心所欲把相关笔记拆散、排布、组合，组装出自己的看法。只要打开这篇主题笔记，自己所有关于这个话题已知的知识，整理的领域内最新的前沿进展以及个人在学习过程中的心得感悟就全都在里面了，一目了然。这就是独属于自己的知识财富，不仅代表着自己独到的思考，还蕴含着自己的回忆和感情，这是网页搜索引擎和AI无法替代和产出的。</p><h2 id="moc学以致用而不是纸上谈兵"><a class="markdownIt-Anchor" href="#moc学以致用而不是纸上谈兵"></a> MOC：学以致用而不是纸上谈兵</h2><p><strong>MOC还与PARA信息管理系统的理念相辅相成</strong>。PARA系统是由 Tiago Forte 提出的一种管理信息的方法，将笔记内容划分为四个部分：Projects（项目）、Areas（领域）、Resources（资源）和 Archives（归档），它点明了“<strong>实践就是知识的最终归宿，知识必须有利于推进项目，否则便是有害无益的</strong>”，推崇以行动为导向。而MOC则给予了笔记管理的具体方式，展示以主题为导向组织笔记的优势。</p><p>搭建一个精致的分类体系，会让使用者倾向于囤积信息，而非「以我为主，为我所用」。「以我为主，为我所用」的意思是说，一切我们所学到的知识，最终都是为了更好地增进对这个世界的理解，指导我们的行动。只有能够落实到实践中，能够用起来的知识，才是有意义的。无法用起来的知识，囤积在笔记里、记忆里，最终都会慢慢蒙尘，成为被遗忘在仓库里的陈旧累赘。</p><p>很多人其实很热衷于笔记分类，我过去也是。为什么要进行笔记分类呢？我想笔记分类有两个目的，一方面是为了方便汇聚信息进行思考，另一方面则是为了未来方便查找到笔记。而面向主题的笔记管理方式，完全能起到这两个作用，并且管理笔记会更轻松——<strong>创建一个主题笔记最重要的是把这个主题笔记完善好，不用再去在乎这个主题笔记属于哪个分类目录下。</strong> 你只需要专注把这个主题下的所有信息汇总、组织起来，经过消化吸收、整理思考，得到自己的观点，能切实对自己的生活、工作有改善，这就足够了。举例，《@熬夜》这篇主题笔记属于哪个分类，属于 <code>健康</code> 还是 <code>神经科学</code>，都无所谓，只要你能保证以后需要能找到这篇笔记就行，最重要的是有没有用这篇笔记正确认识到熬夜的危害，养成更健康的作息习惯。《@学习Solidworks制图》这篇主题笔记属于<code>软件学习</code>还是<code>研究生学习</code>分类，也不重要，重要的是经过学习之后，能否建立一些模型，并3D打印出来。<strong>与其纠结某个主题属于哪个分类，怎么把笔记弄得看起来井井有条，不如多对实际的主题内容进行思考，产出自己的观点，做出实际成绩，切实去改变自己，让自己变得更优秀、身体变得更健康、生活变得更顺心，这才是更重要的。</strong></p><p>我现在的笔记管理方式就是PARA系统与MOC管理方式组合使用，先明确自己的领域是什么，兴趣是什么，列出对自己当下重要的主题，制作项目执行计划，通过“实践→复盘→完善笔记→再去实践”的正向反馈循环，渐进式完善相关主题笔记，在前进过程中实现认知和能力的升级。</p><p>“<strong>学以致用</strong>”这个成语早就告诉我们，应该是为了实际应用去学习知识，而不是让学习的知识在收藏夹积灰，只是把记笔记当成一个消磨时间的兴趣爱好。所有的知识，如果只是放在那边囤积起来，它是永远都无法发挥作用的。唯有让知识流动起来，一遍又一遍地经过你的思考，不断完善、修改、丰富自身，指导我们的实践，并从中获得反馈再次自我完善，才能真正地创造价值！</p><h2 id="使用-moc-可能出现的问题"><a class="markdownIt-Anchor" href="#使用-moc-可能出现的问题"></a> 使用 MOC 可能出现的问题</h2><h3 id="我使用思源笔记基于moc管理笔记的相关设置"><a class="markdownIt-Anchor" href="#我使用思源笔记基于moc管理笔记的相关设置"></a> 我使用思源笔记基于MOC管理笔记的相关设置</h3><p>我只使用一个笔记本，<strong>我新建文档不是在文档树找一个适当地方新建，而是直接在MOC页面，选中以前感兴趣的概念和问题，使用「块引新建文档」功能新建文档</strong>，为此我对笔记本进行了设置，使得新建文档、块引新建文档都统一按月存放：</p><ul><li>块引新建文档路径：<code>/Notes/&#123;&#123;now | date "2006/2006-01"&#125;&#125;/</code></li><li>通过页签/Ctrl+N 新建文档的存放路径：<code>/Notes/&#123;&#123;now | date "2006/2006-01"&#125;&#125;/&#123;&#123;now | date "2006-01-02 15:04:05"&#125;&#125;</code></li></ul><p>这样我就可以专心在 MOC 页面块引新建文档，不需要考虑这些新建文档的存放位置了。</p><h3 id="要放弃文件夹和标签只用-moc-管理笔记吗"><a class="markdownIt-Anchor" href="#要放弃文件夹和标签只用-moc-管理笔记吗"></a> 要放弃文件夹和标签，只用 MOC 管理笔记吗</h3><p>不必非此即彼，<strong>一个健康的笔记管理系统应该使用多种功能、多种理念</strong>。MOC 也不是完全没有缺点。</p><p>我自己使用 MOC 管理笔记，新建概念笔记可以不在乎存放的路径，但是新建一个领域的MOC 我还是需要考虑下的，比如说 《@神经科学》、《@光学》，我喜欢在笔记本建立一个主题文档，将这些 MOC 笔记丢进去。并且目前思源笔记对 MOC 笔记的导出也不够友好，导出 Markdown 只能以脚注形式导出。所以你如果经常需要导出笔记分享给别人，可能需要斟酌下（期待官方或者大佬开发相关功能）。</p><p>MOC 管理笔记有一个日常使用问题，笔记导航如何持续存在于可视界面。用文件夹思维进行分类，文档树就是一个笔记导航，一直固定在一侧，这篇笔记看完，通过文档树可以去打开其他笔记。而使用 MOC，其实你的笔记导航是一篇笔记，你如果需要这个导航一直固定在一侧，就需要 MOC 笔记一直不关闭，比较好的方案是通过分屏来打开主题下的一篇笔记或者干脆悬浮查看笔记，如果不分屏的话，MOC 笔记可能被关闭、被其他笔记顶出可视区域，要看其他主题下的笔记，就又得找到这个 MOC 笔记。</p><p>MOC管理笔记还有一个问题，通过概念笔记要回到主题笔记不是那么方便，要么在概念笔记里放主题笔记的链接，要么通过概念笔记的反向链接面板找到主题笔记，但是这都很麻烦。<strong>我现在喜欢在主题笔记里建立一个数据库MOC</strong>，把概念笔记放进去，这样概念笔记就可以通过文档显示的所属数据库快速找到相关主题笔记。数据库管理笔记其实很灵活，可筛选和排序，只是不方便管理具有层级关系的笔记，这时候其实把数据库当成Inbox收集箱，等时机恰当，再批量复制块引用，用列表MOC来管理笔记。</p><p>标签很大程度上是可以被 MOC 笔记代替的，MOC 可以代替标签的汇总功能，还能在笔记里对汇总信息进行整理，只会比用标签管理笔记更好。所以我现在几乎没有使用标签功能。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://medium.com/@nickmilo22/in-what-ways-can-we-form-useful-relationships-between-notes-9b9ec46973c6">In what ways can we form useful relationships between notes? | by Nick Milo | Medium</a></li><li><a href="https://zhuanlan.zhihu.com/p/603635401">笔记间关联方式：文件夹，标签，双链与 MOC - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/603647786">笔记系统：MOC（内容地图）的组织 - 知乎 (zhihu.com)</a></li><li><a href="https://www.yuque.com/deerain/gannbs/hb0gsd">MOC - 管理链接而非本体 (yuque.com)</a></li><li><a href="https://mp.weixin.qq.com/s/wWkLV8MVzMm_XF1ES7ljCQ">双链其实不重要！详解双链笔记的管理核心 (qq.com)</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> 知识管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 优化异常处理：fprintf的妙用</title>
      <link href="//post/matlab-optimization-abnormal-processing-fprintf-s-wonderful-use-z2wefdb.html"/>
      <url>//post/matlab-optimization-abnormal-processing-fprintf-s-wonderful-use-z2wefdb.html</url>
      
        <content type="html"><![CDATA[<h1 id="matlab-优化异常处理fprintf的妙用"><a class="markdownIt-Anchor" href="#matlab-优化异常处理fprintf的妙用"></a> Matlab 优化异常处理：fprintf的妙用</h1><div class="tag-plugin image"><div class="image-bg"><img src="http://127.0.0.1:6806/assets/Matlab%20优化异常处理：fprintf的妙用-20240507170909-9a4kpt8.png"></div></div><blockquote><p><strong>总结</strong></p><p>优化Matlab try…catch.end 的报错提示，使其既能简单显示报错原因，需要时也可以查看具体报错位置。</p></blockquote><p>Matlab 如果给语句加了 try…catch.end，可以对异常错误进行处理，使得程序在遇到错误时不会立即停止，并可以修改输出把原本的代码报错变为用户能理解的错误原因。</p><p>比如下面这段代码，运行之后如果报错，就会提示错误原因</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">    <span class="comment">% 试图执行可能会出错的代码</span></span><br><span class="line">    a = <span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">    b = <span class="number">6</span>;</span><br><span class="line">    c = a(<span class="number">6</span>);  </span><br><span class="line"><span class="keyword">catch</span> ME</span><br><span class="line">    <span class="comment">% 显示具体的错误信息</span></span><br><span class="line">    fprintf(<span class="number">2</span>,<span class="string">&#x27;%s\n&#x27;</span>, ME.message);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>但是有一个问题——<strong>就是不会显示到底哪一行出错了，不方便调试查看</strong></p><h6 id="clip_2024-05-07_16-43-14"><a class="markdownIt-Anchor" href="#clip_2024-05-07_16-43-14"></a> <img src="http://127.0.0.1:6806/assets/Clip_2024-05-07_16-43-14-20240507164317-prk7b3f.png" alt="Clip_2024-05-07_16-43-14"></h6><p>‍</p><p>其实 matlab 的命令行不仅仅可以输出纯文字，<strong>还可以输出超链接</strong>，这个超链接除了可以跳转网页，<strong>还可以执行命令</strong>，比如将超链接的 href 设置为 <code>matlab:clc</code> 点击就可以清屏，设置为 <code>matlab:fprintf</code> 点击就可以输出文字！</p><p>所以我们可以把代码错误的具体位置信息封装起来，<strong>需要的时候点击输出到控制台！这个报错的代码行号是可以直接点击跳转的！</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">    <span class="comment">% 试图执行可能会出错的代码</span></span><br><span class="line">    a = <span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">    b = <span class="number">6</span>;</span><br><span class="line">    c = a(<span class="number">6</span>);  </span><br><span class="line"><span class="keyword">catch</span> ME</span><br><span class="line">    <span class="comment">% 自定义显示简单错误信息  </span></span><br><span class="line">    fprintf(<span class="number">2</span>,<span class="string">&#x27;%s\n&#x27;</span>, ME.message);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 折叠代码报错位置</span></span><br><span class="line">    errorReport = ME.getReport(<span class="string">&#x27;extended&#x27;</span>);</span><br><span class="line">    errorReport =  matlab.net.base64encode(unicode2native(errorReport, <span class="string">&#x27;UTF-8&#x27;</span>));</span><br><span class="line">    errLink = [<span class="string">&#x27;&lt;a href =&quot;matlab:fprintf(2,&#x27;&#x27;\n%s\n&#x27;&#x27;, &#x27;</span>...</span><br><span class="line">        <span class="string">&#x27;native2unicode(matlab.net.base64decode(&#x27;&#x27;&#x27;</span> errorReport <span class="string">&#x27;&#x27;&#x27;),&#x27;&#x27;UTF-8&#x27;&#x27;));&quot;&gt;&#x27;</span>...</span><br><span class="line">        <span class="string">&#x27;View detailed error information&lt;/a&gt;.&#x27;</span>];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 点击自动清空窗口</span></span><br><span class="line">    clcLink = <span class="string">&#x27;&lt;a href =&quot;matlab:clc&quot;&gt;Clear command window&lt;/a&gt;.&#x27;</span>;</span><br><span class="line">    fprintf(<span class="number">2</span>,<span class="string">&#x27;%s %s\n&#x27;</span> ,errLink,clcLink);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-05-07_17-14-54-20240507171504-pkra6ve.png"></div></div><p>包装为函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">    <span class="comment">% 试图执行可能会出错的代码</span></span><br><span class="line">    a = <span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">    b = <span class="number">6</span>;</span><br><span class="line">    c = a(<span class="number">6</span>);  </span><br><span class="line"><span class="keyword">catch</span> ME</span><br><span class="line">    <span class="comment">% 自定义显示简单错误信息  </span></span><br><span class="line">    fprintf(<span class="number">2</span>,<span class="string">&#x27;%s\n&#x27;</span>, ME.message);</span><br><span class="line">    reportError(ME);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 优化异常处理</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reportError</span><span class="params">(ME)</span></span></span><br><span class="line">    <span class="comment">% 折叠代码报错位置</span></span><br><span class="line">    errorReport = ME.getReport(<span class="string">&#x27;extended&#x27;</span>);</span><br><span class="line">    errorReport =  matlab.net.base64encode(unicode2native(errorReport, <span class="string">&#x27;UTF-8&#x27;</span>));</span><br><span class="line">    errLink = [<span class="string">&#x27;&lt;a href =&quot;matlab:fprintf(2,&#x27;&#x27;\n%s\n&#x27;&#x27;, &#x27;</span>...</span><br><span class="line">        <span class="string">&#x27;native2unicode(matlab.net.base64decode(&#x27;&#x27;&#x27;</span> errorReport <span class="string">&#x27;&#x27;&#x27;),&#x27;&#x27;UTF-8&#x27;&#x27;));&quot;&gt;&#x27;</span>...</span><br><span class="line">        <span class="string">&#x27;View detailed error information&lt;/a&gt;.&#x27;</span>];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 点击自动清空窗口</span></span><br><span class="line">    clcLink = <span class="string">&#x27;&lt;a href =&quot;matlab:clc&quot;&gt;Clear command window&lt;/a&gt;.&#x27;</span>;</span><br><span class="line">    fprintf(<span class="number">2</span>,<span class="string">&#x27;%s %s\n&#x27;</span> ,errLink,clcLink);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我过去在 onenote、wolai 的笔记管理方法</title>
      <link href="//post/my-note-management-method-in-onenote-wolai-zrqwln.html"/>
      <url>//post/my-note-management-method-in-onenote-wolai-zrqwln.html</url>
      
        <content type="html"><![CDATA[<p>本文的语雀链接：<a href="https://www.yuque.com/achuan-2/siyuan/ssskm9gab9mgsyin">https://www.yuque.com/achuan-2/siyuan/ssskm9gab9mgsyin</a></p><p>其实我用的笔记软件不多，真正作为主力笔记软件的，只有三个软件，依次为onenote，wolai和思源笔记。简单回顾下过去在 onenote、wolai 是怎么管理笔记的。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/%E6%88%91%E8%BF%87%E5%8E%BB%E5%9C%A8%20onenote%E3%80%81wolai%20%E7%9A%84%E7%AC%94%E8%AE%B0%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95-20240504182518-77blt0t.png"></div></div><h2 id="onenote"><a class="markdownIt-Anchor" href="#onenote"></a> OneNote</h2><p>最早用的笔记软件是OneNote，那时只会用word的我，像是打开了新世界的大门。OneNote就像是电子的活页笔记本一样，虽然微软这些年一直没有怎么更新OneNote的功能，但OneNote功能其实本身就非常强大。</p><ul><li>可以新建多个笔记本，每个笔记本可以建立多个分区，分区还能套分区，分区下面可以建立很多笔记，笔记可以排序，划分层级。</li><li>OneNote的界面左边负责管理笔记本层级，右边用来新建笔记，至今我都觉得这个设计非常好。</li><li>OneNote还有一个快速笔记的功能，快速笔记可以以小窗口方式置顶，很方便临时记笔记、看视频记笔记。</li><li>OneNote插件可以显示以日历的形式显示自己在那一天更新、创建了什么笔记。</li><li>支持设置笔记模板</li><li>支持共享笔记，我还创建了一个共享笔记本，与酷安网友共享（虽然后面放弃跑路了orz）</li><li>支持复制笔记链接，不仅仅是文档链接，还可以是段落链接，并且</li></ul><p>我还在知乎写过OneNote使用分享：<a href="https://zhuanlan.zhihu.com/p/104812728">OneNote 半年使用心得 by 风渡巛</a></p><p>有一段时间，我还非常期待思源能借鉴OneNote的快速笔记功能和左右栏设计呢（后来就彻底忘了这件事了……）。</p><p>当时我在OneNote大致是这样整理笔记的，分为学科，书籍，软件，百科知识，个人日记等笔记本，学科笔记本呢，我就会分大一上，大一下……就是非常传统的分类方法。现在这种管理方法回顾起来，确实有不足之处，因为我很难复用我以前的笔记，这门课程讲到什么，我就记什么，另一个课程讲到同一个概念，我又会记一遍，<strong>当时没有把这个概念转化为一篇专门的概念笔记，不断去完善补充它的想法</strong>，所以记的大部分笔记其实都没法复用，记完就丢了。</p><p>另外，当时我在个人日记上就会记录当天做了什么，记了什么笔记，并丢一个笔记链接在里面，其实和现在自己使用的dailynote比较像，只不过OneNote不支持直接在日记页面新建文档，我还是得找个适当的分类，在那里新建笔记。还养成了周总结、月总结的习惯。</p><blockquote><p><strong>补充说明：OneNote的链接功能其实很强</strong><br>OneNote很早就支持复制笔记链接的，有些大佬也分享自己用OneNote的链接来管理主题笔记、笔记目录的方法，可惜当时的我并没有发现管理链接这个方法的优秀之处。一直使用笔记本（文档树）进行分类、管理层级，只在个人日记里使用到笔记链接。<br>我也是写这篇笔记才发现，<strong>原来OneNote老早就支持[[]]的自动链接功能</strong>！！！比如在笔记里打[[经济泡沫]]，如果这篇笔记已经存在了，就会自动链接，就算那个笔记后来改名了依然还能正确跳转！如果不存在，则会自动在当前分区新建该笔记。只是和目前的双链笔记相比，只是单向链接，不支持双向链接。</p></blockquote><p>下面是之前一些过去的OneNote笔记截图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714811934906-9567d4d3-42ff-413e-ba55-430f1adfd999-20240504173945-8dbqv77.jpeg"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714811946166-4df075d0-84d3-4f14-8b2e-ec54cbec37eb-20240504173945-xcze2ll.jpeg"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714811963761-a1b60364-87f1-4edf-8d9a-42ce745766c2-20240504173945-km6agj1.jpeg"></div></div><p>‍</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714811954683-2940d027-e6b9-40d0-82e5-0fc61cddeec0-20240504173945-iasrqt8.jpeg"></div></div><p>‍</p><p>最初接触OneNote的时候我还不知道Markdown，后来是在酷安经常刷到Markdown的分享，才了解到。又因为专业需要学习C++、Python和R语言，就开始正式接触并使用Markdown了（用Typora和VSCode来写Markdown）。Markdown简易排版的概念深得我心，在此之前我OneNote的笔记真的是随心所欲的排版，各种颜色、各种字体，OneNote还支持无限画板，笔记左边放一个右边放一个的。后来回顾来看，笔记真的记的很没有逻辑，也是接触到Markdown之后，我才开始习惯用标题来排版。</p><p>后来不用OneNote，很大一部分原因是OneNote对代码块的高亮支持很差（要么用插件来实现代码块插入，或者直接从vscode粘贴代码到OneNote可以保留颜色），不支持GIF图、对文章大纲的支持很不好（得用插件生成大纲）。再加上当时OneNote记的笔记太多太杂（笔记占用3个G），非常凌乱，并且我没有手写的需求（字丑加贫穷），让我逐渐产生了放弃OneNote的想法，以至于最终放弃。</p><h2 id="wolai"><a class="markdownIt-Anchor" href="#wolai"></a> wolai</h2><p>弃用OneNote后，就主要使用wolai笔记，时间大概是2020年底。</p><blockquote><p>那时也是在wolai群里才知道思源笔记这个软件，当时的思源笔记还是基于Vditor的Markdown笔记软件</p></blockquote><p>之所以没选择notion，有几个原因。尽管wolai当时没有数据库，但当时我也不懂如何使用数据库，加上notion当时没有悬浮大纲、没有简单表格，wolai的颜值更符合我的审美，对中文的输入体验也很好。于是就选择wolai作为下一个主力笔记软件。</p><p>在wolai记的笔记比起onenote会规整多了，而且那段时间，我也非常热衷于把笔记记的好看。我还搞了一个个人主页，把自己的学习兴趣爱好笔记统统放进去，每门课程的笔记都给我整理的整整齐齐的。</p><p>我开始新建月记，在一个文档里，把一个月的日记都记在一起。wolai是有一个模板按钮的，每次点击就能在下面新建一篇日记，我将日记模板为设置为今日待办、我的一天（按时间记录干了什么事情）、反思（做的怎么样，哪些行为有所改进。</p><p>我在个人主页放置主题笔记，分为树洞、工作与学习、编程、标签几个大类。之所以还有一个标签，是因为当时wolai没有标签功能，wolai官方推荐使用双链来代替标签。（现在我在思源笔记里把双链甚至数据库当作标签来用）</p><p>我开始更倾向于在主题笔记里使用管理链接的方式来管理主题下的所有信息和笔记了。比如每个课程笔记里，我不仅仅会记录这个课程的个人笔记，还会记录老师的信息、学分多少、往年的考试资料，还会在课程主页一些学习资料链接和重点总结，一个笔记就包含了我所有需要的内容，而不像之前的笔记方法，没有什么整理目录的意识。这种整理方式确实很大程度有助于我更好的梳理笔记，进行深入思考，学习成绩得到了提高。</p><blockquote><p>我在使用wolai的那段时间，大学绩点排名从原来的十名开外，飙升到第二名，以至于后面可以顺利保研来复旦。虽然不能把功劳都归于一个笔记软件，但是用wolai确实很好帮助我梳理了课程笔记，对wolai一直都挺有好感，只可惜wolai的马老板没能维护好wolai的口碑……</p></blockquote><p>不过那时的笔记还是没有区分主题笔记和概念笔记，每个课程的笔记记得很详细，还是没有考虑复用的问题，那时候也没接触什么PARA分类，更别说dailynote笔记、INKP笔记法。</p><p>在wolai的笔记截图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714812661675-6bc687f7-dc7a-40be-bee8-45a24141fd79-20240504173945-v2bqo9m.jpeg"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714812573934-10fd8e04-f38d-4f03-b617-b648eb2fbc61-20240504173945-sd0akut.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714812638737-72e0d7cc-7181-48ef-9918-2a0071c95451-20240504173945-fyayof5.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714812610043-0b21bc6e-7128-4252-8ea4-a52726ff9b9d-20240504173945-siton3o.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/net-img-1714812519909-faea8159-5dc9-4d24-947a-f8b2875079ab-20240504173945-d1v5f96.jpeg"></div></div>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> 知识管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思考我应该如何度过我的一天</title>
      <link href="//post/think-about-how-i-should-spend-my-day-zl38tl.html"/>
      <url>//post/think-about-how-i-should-spend-my-day-zl38tl.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>💡 你如何度过每一天，也就如何度过这一生。</p></blockquote><h2 id="工作日"><a class="markdownIt-Anchor" href="#工作日"></a> 工作日</h2><h4 id="早上"><a class="markdownIt-Anchor" href="#早上"></a> 早上</h4><p>早上八点起床，倒数5s起床，不赖床。起床后在床上玩手机，尽量不要看除微信的社交媒体信息，避免分心，直接下床，洗漱后，吃早饭，去工位。</p><p>八点半到工位，确认自己当天的计划，同时简单看下自己的周计划，确认当日的计划符合这周的整体计划。</p><h4 id="白天"><a class="markdownIt-Anchor" href="#白天"></a> 白天</h4><p>白天专注干活，专注工作，珍惜每分每秒，专注效率</p><ul><li>研究生的任务管理，以能最快发论文为方向，安排自己的工作进展。要事为先，优先做最重要的事情，一些个人的、不太重要的琐事可以放到晚点再做。</li><li>如果当天有实验数据，及时记录。</li><li>不要完美主义做事，不要想着把事情做好，或许想着把事情做坏，会更有效率，结果或许会更好。</li><li>不要恐惧不稳定，非要固定某个事情某个时间做，请合理安排任务</li><li>不要和别人比工作时间，不要有休息羞耻，而应该和人比工作效率</li><li>做事不要犹犹豫豫，该做就做</li></ul><p>白天的休息</p><ul><li><p>吃饭可以听小宇宙博客解闷充电，不要边吃饭边刷视频，对消化不好。</p></li><li><p>午睡控制只睡半小时，不睡太久。</p></li></ul><h4 id="晚上"><a class="markdownIt-Anchor" href="#晚上"></a> 晚上</h4><p>当天没有ddl的话，晚上可以适当读书充电学习，或者跑步健身</p><p>晚上23:30回宿舍，睡前回顾一天，反省总结，没做好的地方，思考明天如何做的更好，并且粗略计划自己明天需要做什么。</p><p>确保自己1点钟前睡觉</p><h2 id="周末"><a class="markdownIt-Anchor" href="#周末"></a> 周末</h2><p>依旧每天早上八点起床，凌晨1点钟睡觉。周末要珍惜时间，不要一整天都在床上，睡太久也不见得对自己有益。</p><p>周末更需要注重建立自己的生活秩序感，除了工作外，可以每周末固定进行一些个人活动，去有意识地培养自己的情操，提高自己的能力。比如进行兴趣爱好技能练习（练习弹尤克里里、摄影），学习想学的课程（统计学、深度学习、solidworks）、写博客、进行周总结，可以出去逛逛公园、citywalk，适当放松自己，看看大自然。。</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Markdown写微信公众号文章</title>
      <link href="//post/write-a-wechat-public-account-article-with-markdown-zatxal.html"/>
      <url>//post/write-a-wechat-public-account-article-with-markdown-zatxal.html</url>
      
        <content type="html"><![CDATA[<p>现有的Markdown转公众号文章编辑器都挺完善的，有些还加了超链接转脚注功能，因为微信规定了订阅号是不能使用指向外链的超链接的，只能用链接微信文章。但是找来找去，感觉大部分的编辑器只支持Markdown图片的锚文本转图注，却不支持图片title可以转为图注，而后者是目前语雀、思源笔记添加图注使用的语法。</p><p>于是折腾一下午魔改别人的编辑器，使其支持Markdown的图片title可以变为图注（为什么大家都这么喜欢用anchor text呢，叹气），这样我思源笔记的内容就可以直接粘贴上去不需要修改，直接发公众号了。</p><p>还把两个repo都部署到Github Page了，就可以打开链接直接在线用了（主要方便我自己用哈哈哈）。</p><h2 id="编辑器1"><a class="markdownIt-Anchor" href="#编辑器1"></a> 编辑器1</h2><p>Github：<a href="https://github.com/Achuan-2/markdown2wechat">https://github.com/Achuan-2/markdown2wechat</a></p><p>在线使用：<a href="https://achuan-2.github.io/markdown2wechat/">https://achuan-2.github.io/markdown2wechat/</a></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_19-04-07-20240427190409-3nqxluz.png"></div></div><h2 id="编辑器2"><a class="markdownIt-Anchor" href="#编辑器2"></a> 编辑器2</h2><p>Github：<a href="https://github.com/Achuan-2/wechat-mdeditor">https://github.com/Achuan-2/wechat-mdeditor</a></p><p>在线使用：<a href="https://achuan-2.github.io/wechat-mdeditor/">https://achuan-2.github.io/wechat-mdeditor/</a></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_19-05-58-20240427190601-23fa31i.png"></div></div><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 博客 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 微信公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo stellar主题更新 v1.28.0 及个性化修改</title>
      <link href="//post/20240427-stellar-theme-update-v1280-and-decoration-zanvt4.html"/>
      <url>//post/20240427-stellar-theme-update-v1280-and-decoration-zanvt4.html</url>
      
        <content type="html"><![CDATA[<p>Hexo stellar 主题有段时间大改样式，当时没时间更新主题。感觉现在主题比较稳定了，终于找到时间把主题更新一下。由于stellar经过作者大改，我之前写的很多自定义样式都失效了。所以折腾了一上午，重新美化了一下。希望自己以后坚持每周都写一篇博客吧🐦。</p><h2 id="博客界面"><a class="markdownIt-Anchor" href="#博客界面"></a> 博客界面</h2><h3 id="目前的博客样式"><a class="markdownIt-Anchor" href="#目前的博客样式"></a> 目前的博客样式</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_12-14-58-20240427121503-vlzsk3v.png" alt="主页"></div><div class="image-meta"><span class="image-caption center">主页</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_11-19-05-20240427111907-krckfdm.png" alt="文章内"></div><div class="image-meta"><span class="image-caption center">文章内</span></div></div><h3 id="之前的历史快照"><a class="markdownIt-Anchor" href="#之前的历史快照"></a> 之前的历史快照</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20230926104442-ig83unh.png" alt="2023.09.26"></div><div class="image-meta"><span class="image-caption center">2023.09.26</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20231105162526-h0wksqr.png" alt="2023.11.05"></div><div class="image-meta"><span class="image-caption center">2023.11.05</span></div></div><h2 id="目前我是怎么发hexo博客的"><a class="markdownIt-Anchor" href="#目前我是怎么发hexo博客的"></a> 目前我是怎么发Hexo博客的</h2><p>现在我基本是使用「<a href="https://github.com/siyuan-note/siyuan">思源笔记</a>」来管理笔记和写博客，这是一个管理和编辑体验很好的双链笔记软件。思源笔记有一个「<a href="https://github.com/terwer/siyuan-plugin-publisher">发布工具</a>」插件，可以很便捷的把思源笔记里的文章上传到各个平台，非常省心，再结合思源笔记的数据库功能可以很方便的管理发布的文章。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_12-43-28-20240427124338-tlz4y8f.png" alt="发布工具"></div><div class="image-meta"><span class="image-caption center">发布工具</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-27_13-02-42-20240427130249-xfw7ivx.png" alt="用思源笔记的数据库来管理博客文章"></div><div class="image-meta"><span class="image-caption center">用思源笔记的数据库来管理博客文章</span></div></div><h2 id="代码更改记录"><a class="markdownIt-Anchor" href="#代码更改记录"></a> 代码更改记录</h2><h3 id="markdown图片title标题失效"><a class="markdownIt-Anchor" href="#markdown图片title标题失效"></a> Markdown图片title标题失效</h3><p>Markdown 的完整图片语法是 <code>![anchor text](img_src &quot;title&quot;)</code>，一些笔记软件像语雀、思源笔记目前都是支持解析title作为图片标题的，一些hexo主题如butterfly应该也是支持的（也是我提的建议）。</p><p>stellar之前是接受了我的<a href="https://github.com/xaoxuu/hexo-theme-stellar/commit/4be3e6e123b7d22f00d5a4d419c954bb2557cf67">pull request</a>，可以解析Markdown的图片title语法作为图片标题，</p><p>但现在直接把解析Markdown标题的删掉了（见<a href="https://github.com/xaoxuu/hexo-theme-stellar/issues/340">issue讨论</a>，<a href="https://github.com/xaoxuu/hexo-theme-stellar/commit/e92cb81296e34e85d54bf26f35b6eda83d78b534">代码改动</a>）。</p><p>作为基本只用Markdown语法写博客的人来说，实在太不友好了，所以又把删掉的代码给加了回来。</p><p>并且改进了下 <code>themes\stellar\scripts\filters\index.js</code>，减少误替换的情况发生。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;./lib/img_lazyload&#x27;</span>).<span class="property">processSite</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;./lib/img_onerror&#x27;</span>).<span class="property">processSite</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">change_image</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">tag_plugins</span>.<span class="property">image</span>.<span class="property">parse_markdown</span>) &#123;</span><br><span class="line">        <span class="comment">// Step 1: 删除所有零宽空格字符</span></span><br><span class="line">        data.<span class="property">content</span> = data.<span class="property">content</span>.<span class="title function_">replace</span>(<span class="regexp">/\u200B/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Step 2: 修改正则表达式，只在行首或前面只有空格和缩进时替换图片链接</span></span><br><span class="line">        data.<span class="property">content</span> = data.<span class="property">content</span>.<span class="title function_">replace</span>(</span><br><span class="line">            <span class="regexp">/^(?:\s*)!\[(.*?)\]\((.*?)\s*(?:&quot;(.*?)&quot;)?\)/gm</span>,</span><br><span class="line">            <span class="string">&#x27;&#123;% image $2 $3 %&#125;&#x27;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;before_post_render&#x27;</span>, change_image, <span class="number">9</span>);</span><br></pre></td></tr></table></figure><h3 id="添加分类-widget"><a class="markdownIt-Anchor" href="#添加分类-widget"></a> 添加分类 widget</h3><p>这样在主页就知道自己文章有多少分类了</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/image-20240427141259-4ro3r3w.png"></div></div><p>‍</p><p>在 <code>/themes/stellar/layout/_partial/widgets/</code> 下新建 <code>categories.ejs</code>，填入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">function</span> <span class="title function_">layoutCategoriesDiv</span>(<span class="params"></span>) &#123; <span class="keyword">var</span> el=<span class="string">&#x27;&#x27;</span> ; <span class="keyword">if</span> (site.<span class="property">categories</span>===<span class="literal">undefined</span> || site.<span class="property">categories</span>.<span class="property">length</span>===<span class="number">0</span>) &#123; <span class="keyword">return</span></span><br><span class="line">    el; &#125; <span class="keyword">var</span> opts=<span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, item); <span class="keyword">delete</span> opts[<span class="string">&#x27;title&#x27;</span>]; <span class="keyword">delete</span> opts[<span class="string">&#x27;layout&#x27;</span>]; opts.<span class="property">class</span>=<span class="string">&#x27;category &#x27;</span> ;</span><br><span class="line">    el+=<span class="string">`&lt;widget class=&quot;widget-wrapper<span class="subst">$&#123;scrollreveal(<span class="string">&#x27; &#x27;</span>)&#125;</span> categories-widget&quot;&gt;`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">title</span>) &#123;</span><br><span class="line">    el += <span class="string">&#x27;&lt;div class=&quot;widget-header categories-header dis-select&quot;&gt;&#x27;</span>;</span><br><span class="line">        el += <span class="string">&#x27;&lt;span class=&quot;name&quot;&gt;&#x27;</span> + item.<span class="property">title</span> + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">        el += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    el += <span class="string">&#x27;&lt;div class=&quot;widget-body&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">// Generate categories list</span></span><br><span class="line">        site.<span class="property">categories</span>.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">category</span>) &#123;</span><br><span class="line">        el += <span class="string">`&lt;div class=&quot;<span class="subst">$&#123;opts.<span class="keyword">class</span>&#125;</span>&quot;&gt;`</span>;</span><br><span class="line">            el += <span class="string">`&lt;svg class=&quot;category-icon&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;16&quot; height=&quot;16&quot;</span></span><br><span class="line"><span class="string">                viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;1.5&quot; stroke-linecap=&quot;round&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;path d=&quot;M18 10h-5&quot; opacity=&quot;.5&quot; /&gt;</span></span><br><span class="line"><span class="string">                &lt;path d=&quot;M10 3h6.5c.464 0 .697 0 .892.026a3 3 0 0 1 2.582 2.582c.026.195.026.428.026.892&quot;</span></span><br><span class="line"><span class="string">                    opacity=&quot;.5&quot; /&gt;</span></span><br><span class="line"><span class="string">                &lt;path</span></span><br><span class="line"><span class="string">                    d=&quot;M2 6.95c0-.883 0-1.324.07-1.692A4 4 0 0 1 5.257 2.07C5.626 2 6.068 2 6.95 2c.386 0 .58 0 .766.017a4 4 0 0 1 2.18.904c.144.119.28.255.554.529L11 4c.816.816 1.224 1.224 1.712 1.495a4 4 0 0 0 .848.352C14.098 6 14.675 6 15.828 6h.374c2.632 0 3.949 0 4.804.77c.079.07.154.145.224.224c.77.855.77 2.172.77 4.804V14c0 3.771 0 5.657-1.172 6.828C19.657 22 17.771 22 14 22h-4c-3.771 0-5.657 0-6.828-1.172C2 19.657 2 17.771 2 14z&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;/svg&gt;`</span>;</span><br><span class="line">            el += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;url_for(category.path)&#125;</span>&quot;&gt;<span class="subst">$&#123;category.name&#125;</span> (<span class="subst">$&#123;category.length&#125;</span>)&lt;/a&gt;`</span>;</span><br><span class="line">            el += <span class="string">`&lt;/div&gt;`</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        el += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    el += <span class="string">&#x27;&lt;/widget&gt;&#x27;</span>; <span class="comment">// Close widget-wrapper</span></span><br><span class="line">    <span class="keyword">return</span> el;</span><br><span class="line">    &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%- <span class="title function_">layoutCategoriesDiv</span>() %&gt;</span><br></pre></td></tr></table></figure><p>在 <code>themes/stellar/source/css/_layout/widgets/</code> 下新建 <code>categories.styl</code> 文件，填入以下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">// categories widget 样式</span><br><span class="line"><span class="selector-class">.widget-wrapper</span><span class="selector-class">.categories-widget</span> <span class="selector-class">.widget-body</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: $border-card;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--alpha50); // 这里设置背景</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>); // 添加阴影效果</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">// 每个分类的样式</span><br><span class="line"><span class="selector-class">.category</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span></span><br><span class="line">  margin: <span class="number">8px</span> <span class="number">0</span></span><br><span class="line">  display: flex // 使用flex布局来确保图标和文本在同一行</span><br><span class="line">  align-items: center // 垂直居中对齐</span><br><span class="line"></span><br><span class="line">.category-icon</span><br><span class="line">  width: <span class="number">16px</span></span><br><span class="line">  height: <span class="number">16px</span></span><br><span class="line">  vertical-align: middle</span><br><span class="line">  margin-right: <span class="number">8px</span></span><br><span class="line"></span><br><span class="line">.category a</span><br><span class="line">  display: inline-block // 链接以行内块方式显示</span><br><span class="line">  word-break: break-word</span><br><span class="line">  color: <span class="built_in">var</span>(--text-p2)</span><br><span class="line">  font-family: system-ui</span><br><span class="line">  font-weight: <span class="number">300</span></span><br><span class="line">  font-size: <span class="number">16px</span></span><br><span class="line">  text-decoration: none</span><br><span class="line">  &amp;:hover</span><br><span class="line">    color: $color-hover</span><br><span class="line">    text-decoration: underline</span><br><span class="line"></span><br><span class="line">// Variables</span><br><span class="line">$color-hover = <span class="number">#0366d6</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.flyalready.cn/Stellar%20%E4%B8%BB%E9%A2%98%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E7%B4%A2%E5%BC%95%20Widget">Stellar 主题中添加分类索引 Widget - 宇宙尽头的餐馆</a></p></blockquote><h3 id="随机文章按钮"><a class="markdownIt-Anchor" href="#随机文章按钮"></a> 随机文章按钮</h3><p>创建 <code>themes/stellar/scripts/helpers/random.js</code> ，增加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> posts = []</span><br><span class="line">    hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;posts&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">post</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (post.<span class="property">random</span> !== <span class="literal">false</span>) posts.<span class="title function_">push</span>(post.<span class="property">path</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    data += <span class="string">`&lt;script&gt;var posts=<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(posts)&#125;</span>;function toRandomPost()&#123; var randomPath = posts[Math.floor(Math.random()*posts.length)]; var encodedPath = encodeURIComponent(randomPath); window.open(&#x27;/&#x27; + encodedPath, &quot;_self&quot;); &#125;;&lt;/script&gt;`</span></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.flyalready.cn/Hexo%20Stellar%20%E4%B8%BB%E9%A2%98%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0/#%E9%9A%8F%E6%9C%BA%E6%96%87%E7%AB%A0%E8%B7%B3%E8%BD%AC">Hexo Stellar 主题装修笔记 - 宇宙尽头的餐馆：随机文章按钮</a></p><p>备注：文章路径需要用<code>encodeURIComponent</code>来编码，否则如果文章路径里有连字符，没有在前面加上域名地址，导致打开失败。</p></blockquote><h3 id="增强标签显示"><a class="markdownIt-Anchor" href="#增强标签显示"></a> 增强标签显示</h3><p>现在相比于分类我可能会更喜欢用标签，因为一篇文章可以打多个标签。我在思源笔记里管理笔记也是用管理链接的方式而弃用了文档树分类，所以标签更符合我管理笔记的习惯。stellar默认在文章列表只显示分类，对我来说就有点难受了。</p><h4 id="主页文章列表添加标签"><a class="markdownIt-Anchor" href="#主页文章列表添加标签"></a> 主页文章列表添加标签</h4><p>修改<code>themes/stellar/layout/_partial/main/post_list/post_card.ejs</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cat</span></span><br><span class="line"><span class="keyword">if</span> (post.<span class="property">categories</span> &amp;&amp; post.<span class="property">categories</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (post.<span class="property">layout</span> === <span class="string">&#x27;post&#x27;</span> &amp;&amp; post.<span class="property">categories</span> &amp;&amp; post.<span class="property">categories</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> cats = [];</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">categories</span>) &#123;</span><br><span class="line">      post.<span class="property">categories</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">cat, i</span>) =&gt;</span> &#123;</span><br><span class="line">        cats.<span class="title function_">push</span>(cat.<span class="property">name</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cats.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> cat = cats.<span class="title function_">shift</span>();</span><br><span class="line">      el += <span class="string">&#x27;&lt;span class=&quot;cap breadcrumb&quot;&#x27;</span> + <span class="title function_">category_color</span>(cat) + <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">      el += <span class="title function_">icon</span>(<span class="string">&#x27;default:category&#x27;</span>)</span><br><span class="line">      el += <span class="string">`&lt;span&gt;<span class="subst">$&#123;cat&#125;</span>&lt;/span&gt;`</span></span><br><span class="line">      el += <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">if</span> (post.<span class="property">sticky</span>) &#123;</span><br><span class="line">  el += <span class="string">`&lt;span class=&quot;pin&quot;&gt;<span class="subst">$&#123;icon(<span class="string">&#x27;default:pin&#x27;</span>)&#125;</span>&lt;/span&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line">el += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">// cat tags</span></span><br><span class="line">el += <span class="string">&#x27;&lt;div style=&quot;margin: 4px 0px;&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (post.<span class="property">tags</span> &amp;&amp; post.<span class="property">tags</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  el += <span class="string">&#x27;&lt;span class=&quot;cap tags&quot;&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  el += post.<span class="property">tags</span>.<span class="title function_">map</span>(<span class="function"><span class="params">tag</span> =&gt;</span> <span class="string">`&lt;span style=&quot;background-color: var(--tag-bg-color); padding: 0px 6px; margin: 0px 5px 0px 0px;border-radius: 5px; color: var(--tag-text-color); line-height: 1.5;&quot;&gt;#&lt;span&gt;<span class="subst">$&#123;tag.name&#125;</span>&lt;/span&gt;&lt;/span&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  el += <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">el += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">el += <span class="string">&#x27;&lt;/article&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> el;</span><br></pre></td></tr></table></figure><p>自定义样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 默认的浅色模式颜色 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--tag-bg-color</span>: <span class="number">#F2EEFD</span>;</span><br><span class="line">    <span class="attr">--tag-text-color</span>: <span class="number">#835EEC</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 暗黑模式下的颜色 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: dark) &#123;</span><br><span class="line">    <span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">      <span class="attr">--tag-bg-color</span>: <span class="number">#282433</span>;</span><br><span class="line">      <span class="attr">--tag-text-color</span>: <span class="number">#A28BF2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="selector-id">#post-meta</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>; </span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--text-p4); <span class="comment">/* 或 --text-p2，设置为灰色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在文章页面添加标签显示"><a class="markdownIt-Anchor" href="#在文章页面添加标签显示"></a> 在文章页面添加标签显示</h4><p>在 <code>layout/_partial/main/navbar/article_banner.ejs</code> 文件中，找到</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.left.top: 面包屑导航</span></span><br><span class="line">  el += <span class="string">`&lt;div class=&quot;flex-row&quot; id=&quot;breadcrumb&quot;&gt;`</span></span><br><span class="line">    <span class="comment">// 首页</span></span><br><span class="line">    el += <span class="string">`&lt;a class=&quot;cap breadcrumb&quot; href=&quot;<span class="subst">$&#123;url_for(config.root)&#125;</span>&quot;&gt;<span class="subst">$&#123;__(<span class="string">&quot;btn.home&quot;</span>)&#125;</span>&lt;/a&gt;`</span></span><br><span class="line">    <span class="keyword">if</span> (theme.<span class="property">wiki</span>.<span class="property">tree</span>[page.<span class="property">wiki</span>]) &#123;</span><br><span class="line">      el += <span class="title function_">partial</span>(<span class="string">&#x27;breadcrumb/wiki&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (page.<span class="property">layout</span> == <span class="string">&#x27;post&#x27;</span>) &#123;</span><br><span class="line">      el += <span class="title function_">partial</span>(<span class="string">&#x27;breadcrumb/blog&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      el += <span class="title function_">partial</span>(<span class="string">&#x27;breadcrumb/page&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">// end 3.left.top</span></span><br><span class="line">  el += <span class="string">`&lt;/div&gt;`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>并在后面添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在这里添加标签代码</span></span><br><span class="line"> <span class="keyword">if</span> (page.<span class="property">layout</span> == <span class="string">&quot;post&quot;</span> &amp;&amp; page.<span class="property">tags</span> &amp;&amp; page.<span class="property">tags</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">   el += <span class="string">&#x27;&lt;div id=&quot;tag&quot;&gt;&#x27;</span>; <span class="comment">// 将标签容器的创建移动到条件内部</span></span><br><span class="line">   el += <span class="string">&#x27; &lt;span&gt;&amp;nbsp标签：&lt;/span&gt;&#x27;</span>;</span><br><span class="line">   el += <span class="title function_">list_categories</span>(page.<span class="property">tags</span>, &#123;</span><br><span class="line">     <span class="attr">class</span>: <span class="string">&quot;cap breadcrumb&quot;</span>,</span><br><span class="line">     <span class="attr">show_count</span>: <span class="literal">false</span>,</span><br><span class="line">     <span class="attr">separator</span>: <span class="string">&#x27;&amp;nbsp; &#x27;</span>,</span><br><span class="line">     <span class="attr">style</span>: <span class="string">&quot;none&quot;</span></span><br><span class="line">   &#125;);</span><br><span class="line">   el += <span class="string">&#x27;&amp;nbsp&lt;/div&gt;&#x27;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.flyalready.cn/Hexo%20Stellar%20%E4%B8%BB%E9%A2%98%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0/#%E5%9C%A8%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE%E6%98%BE%E7%A4%BA">Hexo Stellar 主题装修笔记 - 宇宙尽头的餐馆：在文章页面添加标签显示</a></p></blockquote><h3 id="自定义css"><a class="markdownIt-Anchor" href="#自定义css"></a> 自定义css</h3><h4 id="文章内更新日期始终显示"><a class="markdownIt-Anchor" href="#文章内更新日期始终显示"></a> 文章内更新日期始终显示</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章内更新日期始终显示 */</span></span><br><span class="line"><span class="selector-class">.bread-nav</span> <span class="selector-tag">div</span><span class="selector-id">#post-meta</span> <span class="selector-tag">span</span><span class="selector-class">.updated</span> &#123;</span><br><span class="line">    <span class="attribute">visibility</span>: visible <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义滚动条样式"><a class="markdownIt-Anchor" href="#自定义滚动条样式"></a> 自定义滚动条样式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* from https: //github.com/weekdaycare/weekdaycare.github.io/blob/main/css/scrollbar.css */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">200</span>, <span class="number">155</span>, <span class="number">155</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#c3c0c1</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="comment">/* background-image: -webkit-linear-gradient(45deg,</span></span><br><span class="line"><span class="comment">            rgba(255, 255, 255, 0.4) 25%,</span></span><br><span class="line"><span class="comment">            transparent 25%,</span></span><br><span class="line"><span class="comment">            transparent 50%,</span></span><br><span class="line"><span class="comment">            rgba(255, 255, 255, 0.4) 50%,</span></span><br><span class="line"><span class="comment">            rgba(255, 255, 255, 0.4) 75%,</span></span><br><span class="line"><span class="comment">            transparent 75%,</span></span><br><span class="line"><span class="comment">            transparent) !important; */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> ::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1f1f1f</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="限制代码块的最大高度"><a class="markdownIt-Anchor" href="#限制代码块的最大高度"></a> 限制代码块的最大高度</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.md-text</span> <span class="selector-class">.highlight</span> &#123;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="链接样式优化"><a class="markdownIt-Anchor" href="#链接样式优化"></a> 链接样式优化</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章内链接：为链接使用荧光笔下划线效果 */</span></span><br><span class="line"><span class="comment">/* 文章内链接 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[class]</span>) <span class="selector-tag">a</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[class]</span>),</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[class]</span>) <span class="selector-tag">a</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[class]</span>),</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">a</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[class]</span>) &#123;</span><br><span class="line">  <span class="comment">/*color: var(--theme-link);*/</span></span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">3px</span>; <span class="comment">/* 增加底部padding */</span></span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2px</span>;</span><br><span class="line"> <span class="attribute">color</span>: <span class="built_in">var</span>(--theme-link);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">0</span>, <span class="built_in">var</span>(--theme-link), <span class="built_in">var</span>(--theme-link)) no-repeat center bottom / <span class="number">100%</span> <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.flyalready.cn/Hexo%20Stellar%20%E4%B8%BB%E9%A2%98%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0/#%E8%B6%85%E9%93%BE%E6%8E%A5%E6%A0%B7%E5%BC%8F%E8%B0%83%E6%95%B4">Hexo Stellar 主题装修笔记 - 宇宙尽头的餐馆：超链接样式调整</a></p></blockquote><h3 id="添加最新评论组件"><a class="markdownIt-Anchor" href="#添加最新评论组件"></a> 添加最新评论组件</h3><p>参考：<a href="https://weekdaycare.cn/posts/twikoo-new/#giscus">Stellar展示最新评论 - 星日语 (weekdaycare.cn)</a></p><p><strong>vercel app准备</strong></p><ol><li><p>部署 repo 至 Vercel：<a href="https://github.com/Achuan-2/recent-comment">Achuan-2/recent-comment (github.com)</a></p></li><li><p>需要在vercel中设置环境变量</p><table><thead><tr><th style="text-align:left">name</th><th style="text-align:left">description</th></tr></thead><tbody><tr><td style="text-align:left"><code>LIMIT</code></td><td style="text-align:left">获取数量</td></tr><tr><td style="text-align:left"><code>GITHUB_REPO_OWNER</code></td><td style="text-align:left">Github用户名</td></tr><tr><td style="text-align:left"><code>GITHUB_REPO_NAME</code></td><td style="text-align:left">仓库名</td></tr><tr><td style="text-align:left"><code>GITHUB_CATEGORY_ID</code></td><td style="text-align:left">Discussions分类名称</td></tr><tr><td style="text-align:left"><code>GITHUB_TOKEN</code></td><td style="text-align:left">Github Access Token</td></tr></tbody></table></li><li><p>配置完成后请redeploy！</p></li><li><p>查看是否能正确输出最新评论的json数据</p></li></ol><p><strong>stellar主题修改</strong></p><ol><li><p>在 <code>theme/source/js/services/</code> 下新建 giscus_new.js</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">utils.<span class="title function_">jq</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    $(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> els = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;ds-giscus&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; els.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">const</span> el = els[i];</span><br><span class="line">            <span class="keyword">const</span> api = el.<span class="title function_">getAttribute</span>(<span class="string">&#x27;api&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (api == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> default_avatar = def.<span class="property">avatar</span>;</span><br><span class="line">            <span class="comment">// layout</span></span><br><span class="line">            utils.<span class="title function_">request</span>(el, api, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">const</span> limit = el.<span class="title function_">getAttribute</span>(<span class="string">&#x27;limit&#x27;</span>);</span><br><span class="line">                data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, i</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (limit &amp;&amp; i &gt;= limit) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    comment = item.<span class="property">body</span>.<span class="property">length</span> &gt; <span class="number">50</span> ? item.<span class="property">body</span>.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">50</span>) + <span class="string">&#x27;...&#x27;</span> : item.<span class="property">body</span>;</span><br><span class="line">                    <span class="keyword">var</span> cell = <span class="string">&#x27;&lt;div class=&quot;timenode&quot; index=&quot;&#x27;</span> + i + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;div class=&quot;header&quot;&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;div class=&quot;user-info&quot;&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;img src=&quot; + (item.author.avatarUrl || default_avatar) + &quot; onerror=&quot;javascript:this.src=\\&quot; + default_avatar + &quot;\\&quot;;&quot;&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;span&gt;&#x27;</span> + item.<span class="property">author</span>.<span class="property">login</span> + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;span&gt;&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(item.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>() + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;a class=&quot;body&quot; href=&quot;&#x27;</span> + item.<span class="property">url</span> + <span class="string">&#x27;&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;&#x27;</span>;</span><br><span class="line">                    cell += comment;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;/a&gt;&#x27;</span>;</span><br><span class="line">                    cell += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    $(el).<span class="title function_">append</span>(cell);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><code>_config.stellar.yml</code>主题配置中引入</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data_services:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">giscus:</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">/js/services/giscus_new.js</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在 <code>_data/widgets.yml</code> 中创建小组件，并在<code>_config.stellar.yml</code>中选择在哪里展示</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_comment:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">最新评论</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://xxx.vercel.app</span> <span class="comment"># 你的 vercel 函数地址</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">giscus</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">16</span> <span class="comment"># 限制获取数量，这是客户端，刚刚是服务端</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p><strong>成果展示</strong></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/Picbed/pic/assets/Clip_2024-04-28_01-36-04-20240428013606-bqbi3ns.png"></div></div><h3 id="fix-使用搜索功能搜到的部分文章无法打开"><a class="markdownIt-Anchor" href="#fix-使用搜索功能搜到的部分文章无法打开"></a> Fix 使用搜索功能搜到的部分文章无法打开</h3><p>我目前使用思源笔记这个笔记软件的「发布工具」插件把笔记发布到hexo<br>发布工具支持在yaml里放永久链接</p><p>由于永久链接是<code>/post/id.html</code>形式，而使用local search搜索的时候，这些文档则会打开为<code>https://post/id.html</code>,导致失败<br>所以需要对data.path进行检测，如果以’//'开头，则path字符串只取第二位到最后一位，使其能正常打开</p><p>在<code>themes\stellar\source\js\search\local-search.js</code>进行修改</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- var dataUrl = data.path;</span></span><br><span class="line"><span class="addition">+ var dataUrl = data.path.startsWith(&#x27;//&#x27;) ? data.path.slice(1) : data.path;</span></span><br></pre></td></tr></table></figure><p>已提交Pull request：<a href="https://github.com/xaoxuu/hexo-theme-stellar/pull/450">https://github.com/xaoxuu/hexo-theme-stellar/pull/450</a></p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计分析丨T检验</title>
      <link href="//post/T%20Test.html"/>
      <url>//post/T%20Test.html</url>
      
        <content type="html"><![CDATA[<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>T检验是一种用于比较数据集均值差异的统计方法，包括单样本t检验、配对样本t检验和独立样本t检验。可通过MATLAB、Python和R等工具实现t检验。如果数据不符合正态分布，可考虑使用非参数分析。多余两组数据时，可采用多重比较方法。</p><h2 id="什么是t检验"><a class="markdownIt-Anchor" href="#什么是t检验"></a> 什么是T检验</h2><p>T检验是由威廉·戈塞特（William Sealy Gosset）在20世纪初提出的，他使用“学生”（Student）这一化名，因此T检验又常被称为“学生T检验”。T检验的基本思想是通过计算两个独立样本的平均值差异的统计显著性，来判断这两个样本是否来自具有相同均值的两个总体。</p><h3 id="t检验的分类"><a class="markdownIt-Anchor" href="#t检验的分类"></a> T检验的分类</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/image-20240728133646-11lq28m.png"></div></div><p>T检验根据使用场景可以分为三类：</p><ol><li><p>单样本t检验(One-sample t-test)</p><ol><li><p><strong>用途</strong>：比较单个样本的均值与已知总体均值的差异。</p></li><li><p><strong>假设</strong>：样本来自正态分布的总体。</p></li><li><p><strong>例子</strong>：</p><ul><li>从某厂生产的零件中随机抽取若干件，检验其某种规格的均值是否与要求的规格相等（双侧检验）</li><li>在某偏远地区随机抽取若干健康男子，检验其脉搏均数是否高于全体健康男子平均水平（单侧检验）</li><li>检验某一线城市全体高三学生视力水平是否比全国全体高三学生视力水平低（单侧检验）</li><li>检验睁眼和闭眼的静息态脑电信号功率间的差值均值是否为零。</li></ul></li><li><p><strong>公式</strong>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mrow><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mo>−</mo><msub><mi>μ</mi><mn>0</mn></msub></mrow><mrow><mi>s</mi><mi mathvariant="normal">/</mi><msqrt><mi>n</mi></msqrt></mrow></mfrac></mrow><annotation encoding="application/x-tex">t = \frac{\bar{X} - \mu_0}{s / \sqrt{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4373899999999997em;vertical-align:-0.9402800000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4971099999999997em;"><span style="top:-2.30972em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9402800000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201099999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>是样本均值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\mu_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是已知总体均值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>是样本标准差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是样本大小。</p></li></ol></li><li><p>配对样本t检验(Paired Samplest-test)</p><ol><li><p><strong>用途</strong>：用于比较同一组样本在两个不同条件下的均值是否显著不同</p></li><li><p><strong>假设</strong>：假设两个条件下的数据是成对的，即每个观察值在两个条件下都有对应。另外，假设<strong>成对差值符合正态分布</strong>。</p></li><li><p><strong>例子</strong>：</p><ul><li>同一受试对象的两个部分接受不同的处理（如对于一批血清样本，将其分为两个部分，利用不同的方法接受某种化合物的检验，检验结果的差异）</li><li>同一受试对象的自身前后对照（如检验癌症患者术前、术后的某种指标的差异）</li><li>同一受试者睁眼条件下静息态脑电信号功率的均值与闭眼条件下脑电信号的功率的均值是否具有显著的差异</li></ul></li><li><p><strong>公式</strong>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mover accent="true"><mi>d</mi><mo>ˉ</mo></mover><mrow><msub><mi>s</mi><mi>d</mi></msub><mi mathvariant="normal">/</mi><msqrt><mi>n</mi></msqrt></mrow></mfrac></mrow><annotation encoding="application/x-tex">t = \frac{\bar{d}}{s_d / \sqrt{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4485em;vertical-align:-0.9402800000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.50822em;"><span style="top:-2.30972em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9402800000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>d</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8312199999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>是配对差值的均值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">s_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是配对差值的标准差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是配对数。</p></li></ol></li><li><p>独立样本t检验(Independent Samples t-test)</p><ol><li><p><strong>用途</strong>：比较两个独立样本的均值是否显著不同</p></li><li><p><strong>假设</strong>：假设两组数据是独立的，即一个组的观察值不会受到另一个组的影响。，另外，假设两组数据符合<strong>正态分布</strong>和<strong>方差齐性</strong>。</p></li><li><p><strong>例子</strong></p><ul><li>检验两工厂生产同种零件的规格是否相等（双侧检验）</li><li>为研究某种治疗儿童贫血新药的疗效，以常规药作为对照，治疗一段时间后，检验施</li><li>以新药的儿童血红蛋白的增加量是否比常规药的大（单侧检验）</li><li>检验两种药物对治疗高血压的效果，检验两组药物的降压水平是否相等（双侧检验）</li><li>检验男性被试和女性被试（或者正常人和病人）在睁眼条件下静息态脑电信号功率的均值是否具有显著差异（双侧检验）</li></ul></li><li><p><strong>公式</strong>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mrow><msub><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mn>1</mn></msub><mo>−</mo><msub><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mn>2</mn></msub></mrow><mrow><msub><mi>s</mi><mi>p</mi></msub><msqrt><mrow><mfrac><mn>1</mn><msub><mi>n</mi><mn>1</mn></msub></mfrac><mo>+</mo><mfrac><mn>1</mn><msub><mi>n</mi><mn>2</mn></msub></mfrac></mrow></msqrt></mrow></mfrac></mrow><annotation encoding="application/x-tex">t = \frac{\bar{X}_1 - \bar{X}_2}{s_p \sqrt{\frac{1}{n_1} + \frac{1}{n_2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2271100000000006em;vertical-align:-1.7300000000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.49711em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.185004em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1850040000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.1450039999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.654996em;"><span></span></span></span></span></span></span></span><span style="top:-3.415004em;"><span class="pstrut" style="height:3.185004em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.862004em;"><span class="pstrut" style="height:3.185004em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7300000000000004em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\bar{X}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9701099999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\bar{X}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9701099999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是两个样本的均值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">s_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是合并标准差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">n_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是两个样本的大小。</p></li></ol></li></ol><p>‍</p><h3 id="如果数据不符合正态分布该怎么办"><a class="markdownIt-Anchor" href="#如果数据不符合正态分布该怎么办"></a> 如果数据不符合正态分布，该怎么办？</h3><p><strong>如果样本量很小，就难以检验正态性</strong>。在这种情况下，您需要对所分析的数据有一定的理解。比如，对于考试分数数据，如果清楚分数差异的潜在分布是符合正态分布的。即使是很小的样本量，讲师也可能会采用 <em>t</em> 检验并做出正态性假设。</p><p>如果您知道潜在测量值不是正态分布的，该怎么办？或者，如果样本量较大并且正态性检验被拒绝，该怎么办？在这种情况下，您可以使用非参数分析。这种类型的分析不需要假设数据来自特定的分布。</p><ul><li>对于单样本 <em>t</em>­ 检验和配对 <em>t</em>­ 检验，可以使用Wilcoxon 符号秩检验替代。</li><li>对于独立双样本 <em>t</em>­ 检验，可以使用Wilcoxon 秩和检验替代。</li></ul><h3 id="如果有两个以上的组该怎么办"><a class="markdownIt-Anchor" href="#如果有两个以上的组该怎么办"></a> 如果有两个以上的组，该怎么办？</h3><p>请使用多重比较方法。 多重比较方法包括：<strong>方差分析 (ANOVA)</strong> ，用于检验所有配对差异的 <strong>Tukey-Kramer 检验</strong>，用于将组间均值与总体均值进行比较的<strong>均值分析 (ANOM)</strong> ，或用于将每组均值与对照均值进行比较的 <strong>Dunnett’s 检验</strong>。</p><h2 id="用代码实现t检验"><a class="markdownIt-Anchor" href="#用代码实现t检验"></a> 用代码实现t检验</h2><ul><li><p>Matlab</p><ul><li><p><strong>单一样本t检验</strong>：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[h, p, ci, stats] = ttest(data, mu);</span><br></pre></td></tr></table></figure></li><li><p><strong>配对样本t检验</strong>：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[h, p, ci, stats] = ttest(data1, data2);</span><br></pre></td></tr></table></figure></li><li><p><strong>独立样本t检验</strong>：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[h, p, ci, stats] = ttest2(data1, data2);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Python</p><ul><li><p><strong>单一样本t检验</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> ttest_1samp</span><br><span class="line">t_stat, p_value = ttest_1samp(data, mu)</span><br></pre></td></tr></table></figure></li><li><p><strong>独立样本t检验</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> ttest_ind</span><br><span class="line">t_stat, p_value = ttest_ind(data1, data2)</span><br></pre></td></tr></table></figure></li><li><p><strong>配对样本t检验</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> ttest_rel</span><br><span class="line">t_stat, p_value = ttest_rel(data1, data2)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>R</p><ul><li><p><strong>单一样本t检验</strong>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data<span class="punctuation">,</span> mu <span class="operator">=</span> mu<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p><strong>配对样本t检验</strong>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data1<span class="punctuation">,</span> data2<span class="punctuation">,</span> paired <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p><strong>独立样本t检验</strong>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data1<span class="punctuation">,</span> data2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="单一样本t检验"><a class="markdownIt-Anchor" href="#单一样本t检验"></a> 单一样本t检验</h3><p>假设我们有一组学生的期末考试成绩，并且学校规定的平均成绩为90分。我们想知道这组学生的成绩是否显著高于或低于学校的平均水平。</p><h4 id="matlab"><a class="markdownIt-Anchor" href="#matlab"></a> MATLAB</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成模拟数据：学生期末考试成绩</span></span><br><span class="line"><span class="comment">% 这些数据代表一组学生在期末考试中的成绩，学校规定的平均成绩是90分</span></span><br><span class="line">data = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>]; <span class="comment">% 样本数据</span></span><br><span class="line">mu = <span class="number">90</span>; <span class="comment">% 学校规定的平均成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 执行单一样本t检验</span></span><br><span class="line">[h, p, ci, stats] = ttest(data, mu);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示结果</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;t-statistic: &#x27;</span>, num2str(stats.tstat)]);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;p-value: &#x27;</span>, num2str(p)]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p &lt; <span class="number">0.05</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;样本均值与总体均值有显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;样本均值与总体均值无显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成模拟数据：学生期末考试成绩</span></span><br><span class="line"><span class="comment"># 这些数据代表一组学生在期末考试中的成绩，学校规定的平均成绩是90分</span></span><br><span class="line">data = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>]  <span class="comment"># 样本数据</span></span><br><span class="line">mu = <span class="number">90</span>  <span class="comment"># 学校规定的平均成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行单一样本t检验</span></span><br><span class="line">t_stat, p_value = stats.ttest_1samp(data, mu)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;t-statistic: <span class="subst">&#123;t_stat&#125;</span>, p-value: <span class="subst">&#123;p_value&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p_value &lt; <span class="number">0.05</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;样本均值与总体均值有显著差异&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;样本均值与总体均值无显著差异&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="r"><a class="markdownIt-Anchor" href="#r"></a> R</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成模拟数据：学生期末考试成绩</span></span><br><span class="line"><span class="comment"># 这些数据代表一组学生在期末考试中的成绩，学校规定的平均成绩是90分</span></span><br><span class="line">data <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">85</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">87</span><span class="punctuation">,</span> <span class="number">93</span><span class="punctuation">,</span> <span class="number">86</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">)</span> <span class="comment"># 样本数据</span></span><br><span class="line">mu <span class="operator">&lt;-</span> 90 <span class="comment"># 学校规定的平均成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行单一样本t检验</span></span><br><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data<span class="punctuation">,</span> mu <span class="operator">=</span> mu<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line">print<span class="punctuation">(</span>t_test<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span>t_test<span class="operator">$</span>p.value <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;样本均值与总体均值有显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;样本均值与总体均值无显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="配对样本t检验"><a class="markdownIt-Anchor" href="#配对样本t检验"></a> 配对样本t检验</h3><p>假设我们有一组学生的期中和期末考试成绩，我们想比较这些学生在两个时间点的成绩是否有显著差异。</p><h4 id="matlab-2"><a class="markdownIt-Anchor" href="#matlab-2"></a> MATLAB</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成模拟数据：学生期中与期末考试成绩</span></span><br><span class="line"><span class="comment">% 这些数据代表一组学生在期中和期末考试中的成绩</span></span><br><span class="line">data1 = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>]; <span class="comment">% 期中考试成绩</span></span><br><span class="line">data2 = [<span class="number">88</span>, <span class="number">90</span>, <span class="number">91</span>, <span class="number">89</span>, <span class="number">94</span>, <span class="number">87</span>, <span class="number">90</span>]; <span class="comment">% 期末考试成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 执行配对样本t检验</span></span><br><span class="line">[h, p, ci, stats] = ttest(data1, data2);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示结果</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;t-statistic: &#x27;</span>, num2str(stats.tstat)]);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;p-value: &#x27;</span>, num2str(p)]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p &lt; <span class="number">0.05</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;期中和期末考试成绩有显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;期中和期末考试成绩无显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="python-2"><a class="markdownIt-Anchor" href="#python-2"></a> Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成模拟数据：学生期中与期末考试成绩</span></span><br><span class="line"><span class="comment"># 这些数据代表一组学生在期中和期末考试中的成绩</span></span><br><span class="line">data1 = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>]  <span class="comment"># 期中考试成绩</span></span><br><span class="line">data2 = [<span class="number">88</span>, <span class="number">90</span>, <span class="number">91</span>, <span class="number">89</span>, <span class="number">94</span>, <span class="number">87</span>, <span class="number">90</span>]  <span class="comment"># 期末考试成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行配对样本t检验</span></span><br><span class="line">t_stat, p_value = stats.ttest_rel(data1, data2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;t-statistic: <span class="subst">&#123;t_stat&#125;</span>, p-value: <span class="subst">&#123;p_value&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p_value &lt; <span class="number">0.05</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;期中和期末考试成绩有显著差异&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;期中和期末考试成绩无显著差异&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="r-2"><a class="markdownIt-Anchor" href="#r-2"></a> R</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成模拟数据：学生期中与期末考试成绩</span></span><br><span class="line"><span class="comment"># 这些数据代表一组学生在期中和期末考试中的成绩</span></span><br><span class="line">data1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">85</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">87</span><span class="punctuation">,</span> <span class="number">93</span><span class="punctuation">,</span> <span class="number">86</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">)</span> <span class="comment"># 期中考试成绩</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">88</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">91</span><span class="punctuation">,</span> <span class="number">89</span><span class="punctuation">,</span> <span class="number">94</span><span class="punctuation">,</span> <span class="number">87</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">)</span> <span class="comment"># 期末考试成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行配对样本t检验</span></span><br><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data1<span class="punctuation">,</span> data2<span class="punctuation">,</span> paired <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line">print<span class="punctuation">(</span>t_test<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span>t_test<span class="operator">$</span>p.value <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;期中和期末考试成绩有显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;期中和期末考试成绩无显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="独立样本t检验"><a class="markdownIt-Anchor" href="#独立样本t检验"></a> 独立样本t检验</h3><p><strong>进行独立双样本t检验之前，应该进行方差齐性检验（homogeneity of variance test），即检查两组样本的总体方差是否相同</strong>。方差齐性检验本身也是一种假设检验，通用的方法有Hartley检验、Bartlett检验和Leyene检验。</p><p>假设我们有两班学生的期末考试成绩，我们想比较这两班学生的成绩是否有显著差异。</p><h4 id="matlab-3"><a class="markdownIt-Anchor" href="#matlab-3"></a> MATLAB</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成模拟数据：两班学生期末考试成绩</span></span><br><span class="line"><span class="comment">% 班级1的成绩</span></span><br><span class="line">data1 = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>];</span><br><span class="line"><span class="comment">% 班级2的成绩</span></span><br><span class="line">data2 = [<span class="number">78</span>, <span class="number">82</span>, <span class="number">84</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">81</span>, <span class="number">79</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">% 执行独立样本t检验</span></span><br><span class="line">[h, p, ci, stats] = ttest2(data1, data2);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示结果</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;t-statistic: &#x27;</span>, num2str(stats.tstat)]);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;p-value: &#x27;</span>, num2str(p)]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p &lt; <span class="number">0.05</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;两班学生的成绩有显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;两班学生的成绩无显著差异&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>补充：方差检验</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;close all;</span><br><span class="line">[num,txt,raw] = xlsread(<span class="string">&#x27;Resting State.xlsx&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">%% indenpendent two sample ttest</span></span><br><span class="line">idx=num(:,<span class="number">5</span>);</span><br><span class="line">x=num(:,<span class="number">1</span>);</span><br><span class="line">x_M=x(idx==<span class="number">1</span>);</span><br><span class="line">x_F=x(idx==<span class="number">0</span>);</span><br><span class="line"><span class="comment">% 方差齐性检验，即检验两组样本的总体方差是否相同</span></span><br><span class="line">[p3,stats3] = vartestn(x,idx,...</span><br><span class="line">    <span class="string">&#x27;TestType&#x27;</span>,<span class="string">&#x27;LeveneAbsolute&#x27;</span>,<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;Independent t-test with Eyes open:&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;Levene’s test: p = &#x27;</span>,num2str(p3,<span class="string">&#x27;%0.2f&#x27;</span>)]);<span class="comment">%方差检验方法：Levene检验</span></span><br><span class="line"><span class="keyword">if</span> p3&lt;<span class="number">0.05</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;Equal variances not assumed&#x27;</span>) <span class="comment">%方差不相同</span></span><br><span class="line">    [h4,p4,ci4,stats4]=ttest2(x_M,x_F,...</span><br><span class="line">        <span class="string">&#x27;Vartype&#x27;</span>,<span class="string">&#x27;unequal&#x27;</span>);                               </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;Equal variances assumed&#x27;</span>); <span class="comment">%方差相同</span></span><br><span class="line">    [h4,p4,ci4,stats4]=ttest2(x_M,x_F);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;t = &#x27;</span>,num2str(stats4.tstat,<span class="string">&#x27;%0.2f&#x27;</span>)]);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;df = &#x27;</span>,num2str(stats4.df,<span class="string">&#x27;%0.2f&#x27;</span>)]);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;p = &#x27;</span>,num2str(p4,<span class="string">&#x27;%0.2f&#x27;</span>)]);</span><br></pre></td></tr></table></figure><h4 id="python-3"><a class="markdownIt-Anchor" href="#python-3"></a> Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成模拟数据：两班学生期末考试成绩</span></span><br><span class="line"><span class="comment"># 班级1的成绩</span></span><br><span class="line">data1 = [<span class="number">85</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">88</span>]</span><br><span class="line"><span class="comment"># 班级2的成绩</span></span><br><span class="line">data2 = [<span class="number">78</span>, <span class="number">82</span>, <span class="number">84</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">81</span>, <span class="number">79</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行独立样本t检验</span></span><br><span class="line">t_stat, p_value = stats.ttest_ind(data1, data2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;t-statistic: <span class="subst">&#123;t_stat&#125;</span>, p-value: <span class="subst">&#123;p_value&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> p_value &lt; <span class="number">0.05</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;两班学生的成绩有显著差异&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;两班学生的成绩无显著差异&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="r-3"><a class="markdownIt-Anchor" href="#r-3"></a> R</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成模拟数据：两班学生期末考试成绩</span></span><br><span class="line"><span class="comment"># 班级1的成绩</span></span><br><span class="line">data1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">85</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">87</span><span class="punctuation">,</span> <span class="number">93</span><span class="punctuation">,</span> <span class="number">86</span><span class="punctuation">,</span> <span class="number">88</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 班级2的成绩</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">78</span><span class="punctuation">,</span> <span class="number">82</span><span class="punctuation">,</span> <span class="number">84</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">85</span><span class="punctuation">,</span> <span class="number">81</span><span class="punctuation">,</span> <span class="number">79</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行独立样本t检验</span></span><br><span class="line">t_test <span class="operator">&lt;-</span> t.test<span class="punctuation">(</span>data1<span class="punctuation">,</span> data2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line">print<span class="punctuation">(</span>t_test<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据p值判断检验结果</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span>t_test<span class="operator">$</span>p.value <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;两班学生的成绩有显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    print<span class="punctuation">(</span><span class="string">&#x27;两班学生的成绩无显著差异&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="问题笔记"><a class="markdownIt-Anchor" href="#问题笔记"></a> 问题笔记</h2><ul><li><p>独立样本t检验和配对样本t检验的区别</p><ul><li><strong>独立样本t检验</strong>：用于比较两个独立样本的均值是否存在显著差异。这两个样本来自两个不同的群体，且样本之间互不相关。</li><li><strong>配对样本t检验</strong>：用于比较两个相关样本的均值是否存在显著差异。这两个样本来自同一个群体，但在不同条件或时间点下进行测试。</li></ul></li><li><p><strong>独立样本t检验</strong>的条件为什么需要均值的分布符合正态分布</p><p>独立样本t检验的公式依赖于<strong>t分布</strong>，该分布是假设样本均值的分布接近正态分布时推导出来的。如果样本均值的分布不符合正态分布，那么t分布的应用就不再有效，进而影响检验的准确性。正因为此，在使用t检验时，我们通常希望样本均值的分布符合正态分布。</p><p>对于小样本量（通常指<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>&lt;</mo><mn>30</mn></mrow><annotation encoding="application/x-tex">n &lt; 30</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span></span></span></span>），样本均值的分布可能不能很好地近似正态分布，因此我们需要原始数据本身来自正态分布。在这种情况下，我们通常需要进行正态性检验（如Shapiro-Wilk检验）来确保数据符合要求。</p><p><strong>当样本量较大时（通常n≥30），</strong> 根据中心极限定理，<strong>即使原始数据不完全符合正态分布，样本均值的抽样分布会近似服从正态分布，所以t检验仍然可以得到相对可靠的结果</strong>。</p></li><li><p>t检验与u检验、卡方检验的区别</p><table><thead><tr><th>检验类型</th><th>用途</th><th>假设条件</th><th>数据类型</th></tr></thead><tbody><tr><td>T检验</td><td>比较均值</td><td>正态分布，方差相等</td><td>连续变量</td></tr><tr><td>U检验 <strong>(Mann-Whitney U Test)</strong></td><td>比较分布</td><td>无需正态分布</td><td>连续/有序变量</td></tr><tr><td>卡方检验</td><td>检验独立性和适配性</td><td>预期频数&gt;5</td><td>分类变量</td></tr></tbody></table></li></ul><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><ul><li><a href="https://en.wikipedia.org/wiki/Student%27s_t-test">Student's t-test - Wikipedia</a></li><li><a href="https://www.jmp.com/zh_cn/statistics-knowledge-portal/t-test/paired-t-test.html">配对 t 检验 | 统计学简介 | JMP</a></li><li><a href="https://www.jmp.com/zh_cn/statistics-knowledge-portal/t-test/two-sample-t-test.html">双样本 t 检验 | 统计学简介 | JMP</a></li><li><a href="https://www.jmp.com/zh_cn/statistics-knowledge-portal/t-test/one-sample-t-test.html">单样本 t 检验 | 统计学简介 | JMP</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 统计分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书籍推荐——《自学是门手艺》</title>
      <link href="//post/book-recommendation-self-study-is-the-door-craft-zja4yb.html"/>
      <url>//post/book-recommendation-self-study-is-the-door-craft-zja4yb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>我的出发点是把编程当作一个自学的例子，重点在于学会如何自学，并且通过实践真的习得一个起初你觉得不是刚需，学会之后发现干脆离不开的、不可或缺的技能。另外，这本书的目标里有更重要的另外一个：“让你有能力靠自己能够理解所有的官方文档” —— 书里不用讲官方标准库里的每个模块、每个函数究竟如何使用，因为那些在官方文档里定义得非常清楚……</p></blockquote><p>李笑来的《自学是门手艺》是我非常推荐的一本书。本书在 Github 开源，见 <a href="https://github.com/selfteaching/the-craft-of-selfteaching">selfteaching/the-craft-of-selfteaching</a>。为了方便阅读，我制作了思源笔记版本，可以下载导入进思源笔记。</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1R4B50NDZttwmvoBGmLSw4A?pwd=suuv">https://pan.baidu.com/s/1R4B50NDZttwmvoBGmLSw4A?pwd=suuv</a><br>提取码：suuv</p></blockquote><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202403232053487.png"></div></div><h2 id="推荐理由"><a class="markdownIt-Anchor" href="#推荐理由"></a> 推荐理由</h2><ol><li><p>这是我认为最适合入门 Python 的书籍之一：</p><ul><li>告诉你编程的本质是布尔运算和流程控制</li><li>在讲 Python 的时候，李笑来其实不会太侧重讲基础知识，不会把所有基础函数和模块怎么用给你罗列出来，而是告诉你编程领域最好的教程是官方文档，一步步教你如何读懂官方文档。要知道其实很多编程语言的书籍和网络教程就只是把官方文档 copy 加以改编，学会读官方文档后，你大可以自己去检索学习不必靠别人，有助于编程能力的进阶。还告诉你当一个优秀调包侠的做法是，先粗略知道文档有什么内容，遇到什么需求再去读具体的文档。就好像用一个产品的时候，没必要把说明书就读完，读也读不懂，记也记不住，当需要用哪个功能的时候再翻到那一页去仔细读读怎么用。</li><li>每一章进入 Python 教学前，都会有鸡汤文，给你拨乱反正下，告诉你编程不难、自学不难。文笔还很好，助力你读下去。</li><li>教你如何上 Github、用 Git、用 Jupyter notebook、用搜索引擎搜索遇到的 bug</li></ul></li><li><p>本书不仅仅讲了 Python，它更是讲如何自学的一本书，如果你对编程不感兴趣，完全可以跳过 Python 的部分，只读关于如何自学的部分：</p><ul><li>把自学拆解为“学”、“练”、“用”，“造”，强调学习就是一门手艺活，得要刻意重复练习、刻意思考，并且要想方设法去用学到的东西；</li><li>“过早引用”无处不在，生活不是考试，每张试卷里都是课堂讲过的知识点，面对“过早引用”，要学会——就算读不懂也要读完、就算不明白也要先记住、反复做整理归纳总结、先关注使用再研究原理；</li><li>读一本书，应该先 “囫囵吞枣”，然后 “重复重复再重复”，于是就能深刻理解 “读书百遍其义自见”；</li><li>遇到难题要拆解学习，你最擅长的技能之一应该要是拆解拆解再拆解；</li><li>做个自驱动的人而非被外部驱动的被动的人，要学会主动去学习自己认为重要的东西，自上而下规划学习目标。绝大多数人一生都是被动者，终生只是被外界驱动而已。所以，他们会在某一时刻，“发现” 某个技能是刚需，然后再去学，但可惜却肯定的是，到那时候预算总是并不充裕，总是捉襟见肘。</li><li>避免注意力漂移，抵抗诱惑，做重要且紧急的事情，别在不重要的事情上花太多时间、轻重不分；</li><li>互联网，应该是你最喜欢的 “书”，而 Google 应该是你最好的朋友 —— 他总是能帮你找到更好的老师；</li><li>……</li></ul></li></ol><p>‍</p><h2 id="一些摘抄"><a class="markdownIt-Anchor" href="#一些摘抄"></a> 一些摘抄</h2><blockquote><p>绝大多数人，终其一生都没有自学过什么。他们也不是没学过，也不是没辛苦过，但事实却是：他们在有人教、有人带、有人逼的情况下都没真学明白那些基础知识…… 更可怕的是，他们学的那些东西中，绝大多数终其一生只有一个用处：考试。于是，考试过后，那些东西就 “考过即弃” 了…… 不得不承认，应试教育的确是磨灭自学能力的最有效方法。</p><p>在随后的生活里，尽管能意识到自己应该学点什么，常有 “要是我也会这个东西就好了” 的想法，但基本上百分之百以无奈结束 —— 再也没有人教、再也没有人带、再也没有人逼…… 于是，每次 “决心重新做人” 都默默地改成 “继续做人” 而后逢年过节再次许愿 “重新做人”……</p></blockquote><blockquote><p>自学没有什么 “秘诀”。<span style="font-weight: bold;" class="bold">它是一门手艺</span>，并且，严格意义上来讲，它<span style="font-weight: bold;" class="bold">只是</span>一门手艺。</p><p>手艺的特点就是<span style="font-weight: bold;" class="bold">无需天分</span>。手艺的特点就是<span style="font-weight: bold;" class="bold">熟练程度决定一切</span>。从这一点上来看，自学这门手艺和擀饺子皮没什么区别 —— 就那点事，刚开始谁都笨手笨脚，但熟练了之后，就那么回事…… 而已。</p><p>做什么事都有技巧，这不可否认。</p></blockquote><blockquote><p>PK 掉百分之七八十的人的方法真的很简单很简单啊：把买来的书都真真切切地认真读过就可以了。</p></blockquote><blockquote><p>学校里的课本，都很严谨 —— 任何概念，未经声明就禁止使用。所以，学完一章，就能学下一章；跳到某一章遇到不熟悉的概念，往前翻肯定能找到……</p><p>在学校里习惯了这种知识体系的人，离开学校之后马上抓瞎 —— <span style="font-weight: bold;" class="bold">社会的知识结构不仅不是这样的，而且几乎全都不是这样的</span>。工作中、生活里，充满了各式各样的 “过早引用”。为什么总是要到多年以后你才明白父母曾经说过的话那么有道理？为什么总要到孩子已经长大之后才反应过来当初自己对孩子做错过很多事情？为什么在自己成为领导之前总是以为他们只不过是在忽悠你？为什么那么多人创业失败了之后才反应过来当初投资人提醒的一些观念其实是千真万确的？—— 因为很多概念很多观念是 “过早引用”，在当时就是非常难以理解……</p><p>自学编程在这方面的好处在于，在自学的过程中，其实你相当于过了一遍 “模拟人生” —— 于是，面对同样的 “过早引用”，你不会觉得那么莫名其妙，你有一套你早已在 “模拟人生” 中练就的方法论去应对。</p></blockquote><blockquote><p>习得自学能力的终极目标就是：有能力<span style="font-weight: bold;" class="bold">只靠阅读</span>就能习得新技能。</p></blockquote><blockquote><p>“不是什么东西都可以从书本里学到的……” 这话听起来那么有道理，只不过是因为自己读书<span style="font-weight: bold;" class="bold">不够多</span>、<span style="font-weight: bold;" class="bold">不够对</span>而已。</p><p>过了 25 岁，我放弃了读小说，虚构类作品，我只选择看电影；而非虚构类作品，我选择尽量只读英文书，虽然那时候买起来很贵也很费劲，但我觉得值 —— 英文世界和中文世界的文化风格略有不同。在英文世界里，你看到的正常作者好像更多地把 “通俗易懂”、“逻辑严谨” 当作最基本的素养；而在中文世界里，好像 “故弄玄虚”、“偷梁换柱” 更常见一些；在英文世界里，遇到读不懂的东西可以很平静地接受自己暂时的愚笨，心平气和地继续努力就好；在中文世界里，遇到装神弄鬼欺世盗名的，弄不好最初根本没认出来，到最后跟 “认贼作父” 一样令人羞辱难当不堪回首。</p></blockquote><blockquote><p><span style="font-weight: bold;" class="bold">读不懂也要读完，然后重复很多遍。</span></p><p>这是最重要的起点。听起来简单，甚至有点莫名其妙 —— 但以后你就会越来越深刻地体会到，这么简单的策略，绝大多数人竟然不懂，也因此吃了很多很多亏。</p></blockquote><blockquote><p>有经验的读书者，拿来一本书开始自学技能的时候，他会先翻翻目录（Table Of Contents），看看其中有没有自己完全没有接触过的概念；然后再翻翻术语表（Glossary），看看是否可以尽量理解；而后会看看索引（Index），根据页码提示，直接翻到相关页面进一步查找…… 在通读书籍之前，还会看看书后的参考文献（References），看看此书都引用了哪些大牛的书籍，弄不好会顺手多买几本。</p><p>这样做，显然是老到 —— 这么做的最大好处是 “尽力消解了大量的过早引用”，为自己减少了极大的理解负担。</p></blockquote><blockquote><p>囫囵吞枣从一开始就是贬义词。但在当前这个特殊的情况下，它是最好的策略。那些只习惯于一上来就仔细认真的人，在这里很吃亏，<span style="font-weight: bold;" class="bold">因为他们越是仔细认真，越是容易被各种过早引用搞得灰心丧气；相应地，他们的挫败感积累得越快</span>；到最后弄不好最先放弃的是他们 —— 失败的原因竟然是因为 “太仔细了”……</p><p>第一遍囫囵吞枣，用个正面一点的描述，就是 “<span style="font-weight: bold;" class="bold">为探索未知领域先画个潦草的地图</span>”。地图这东西，有总比没有好；虽然说它最好精确，但即便是 “不精确的地图” 也比 “完全没地图” 好一万倍，对吧？更何况，这地图总是可以不断校正的，不是吗？世界上哪个地图不是一点一点校正过来才变成今天这般精确的呢？</p></blockquote><blockquote><p>那些靠阅读机器算法推送的内容而杀时间的人，恰恰就是因为他们有阅读能力才去不断地读，读啊读，像是那只被打了兴奋剂后来死在滚轮上的小白鼠。如果这些人哪怕有一点点自学能力，那么他们很快就会分辨出自己正在阅读的东西不会刺激自己的产出，只会消磨自己的时间；那么，他们就会主动放弃阅读那些杀时间的内容，把那时间和精力自然而然地用在筛选有繁殖能力的内容，让自己进步，让自己习得更多技能上去了。</p></blockquote><blockquote><p>不管怎么样，先用起来，反正，研究透原理，不可能马上做到，需要时间漫漫。</p><p>用错了没关系，改正就好。用得不好没关系，用多了就会好。只要开始用起来，理解速度就会加快 —— 实践出真知，不是空话。</p></blockquote><blockquote><p>自学是门手艺，编程很大程度上也是一门手艺，掌握它在绝大多数情况下与天分智商全无关系 —— 很多人是在十来岁的时候学会编程的基本技能的。所有的手艺，最基本特征就是：</p><p><span style="font-weight: bold;" class="bold">主要靠时间</span></p></blockquote><blockquote><p>真正开始自学且不断自学之后，刚开始总是觉得时间不够用 —— 因为当时的自己和其他人没什么太大区别。</p><p>随着时间的推移，不仅差异会出现，自我认知差异也开始越来越明显：别人的时间都白过了，自己的时间都有产出……</p><p>到了下一个阶段，在其他人不断焦虑的情况下，自己却开始越来越淡定：因为早已习惯了投入大量时间换取新技能……</p><p>等后来真的开始用这些技能做事，不断地做其他人因为时间白过了或者因为投入的 “预算” 不够而学不会做不到的事情 —— 并且还能充分明白，这并不是自己聪明、有天分的结果；只不过是做了该做的事情，投入了该投入的 “成本” 和 “预算” 而已……</p></blockquote><blockquote><p>我当过很长时间的英语老师。异常苦于一件事：最有用的道理最没人听。</p><p>学英语根本就不应该那么难，学了十六年也学不明白 —— 至于嘛！然而，最简单的道理，人们就是听不进去。他们之所以不行，就是因为从未刻意练习。学英语最简单的刻意练习就是朗读。每天朗读一小时，一百天下来就会超越绝大多数人，也会超越自己原本可能永远跨不过去的那个坎 —— 神奇的是，朗读什么无所谓，反正现在有声书那么多…… 更神奇的是，刚开始朗读得好不好听，甚至好不好都无所谓，反正没几天就能体会到大幅进步…… 最神奇的是，这么简单的事，99.99% 的人不做 —— 你身在中国，能理解这个比例真的没有夸张。</p></blockquote><blockquote><p>很多人学了却没怎么练，有一个很现实的原因 —— 没什么地方用得上。</p><p>这也怪我们的应试教育，大学前上 12 年学，“学”（更多是被逼的）的绝大多数东西，只有一个能够切实体会到的用处，考试 —— 中考、高考，以及以它们为目标的无数 “模考”…… 于是，反过来，不管学什么东西，除了考试之外，<span style="font-weight: bold;" class="bold">几乎无法想象其他的用处</span>。</p><p>一旦我们启动了对某项技能的自学之后，在那过程中，最具价值的刻意思考就是，时时刻刻琢磨 “这东西能用在哪儿呢？”</p></blockquote><blockquote><p>无论学什么，都有难点。所谓的 “学习曲线陡峭”，无非就是难点靠前、难点很多、难点貌似很难而已。</p><p>然而，相信我，所有的难点，事实上都可以被拆解成更小的单元，而后在逐一突破的时候，就没那么难了。逐一突破全部完成之后，再拼起来重新审视的时候就会发现那所谓的难常常只不过是错觉、幻觉而已 —— 我把它称为<span style="font-weight: bold;" class="bold">困难幻觉</span>。</p><p>把一切都当作手艺看的好处之一就是心态平和，因为你知道那不靠天分和智商，它靠的是另外几件事：不混时间，刻意思考，以及刻意练习 —— 其实吧，老祖宗早就有总结：</p><p>天下无难事，只怕<span style="font-weight: bold;" class="bold">有心人</span>……</p><p>大家都是人，咋可能没 “心” 呢？</p><p>想成为有心人，其实无非就是学会拆解之后逐一突破，就这么简单。</p></blockquote><blockquote><p>刚识字、刚上学的时候，由于理解能力有限，又由于年龄的关系于是耐心有限，所以，那时需要老师耐心陪伴、悉心引导。这就好像小朋友刚出生的时候，没有牙齿，所以只能喝奶差不多…… 然而，到了一定程度之后一定要断奶，是不是？可绝大多数人的实际情况却是，小学的时候爱上了 “奶嘴”（有人带着阅读），而后<span style="font-weight: bold;" class="bold">一生没有奶嘴就吃不下任何东西</span>。</p><p>他们必须去 “上课”，需要有人给他们讲书。不仅如此，讲得 “不生动”、“不幽默” 还不行；就算那职业提供奶嘴的人（这是非常令人遗憾的真相：很多的时候，所谓的 “老师” 本质上只不过就是奶妈而已）帅气漂亮、生动幽默、尽职尽力…… 最终还是一样的结果 —— 绝大多数人依然没有完整掌握所有应该掌握的细节。</p><p>开始 “自学” 的活动，本质上来看，和<span style="font-weight: bold;" class="bold">断奶</span>其实是一回事。</p></blockquote><blockquote><p>在学习编程的过程中，你会不由自主地学会一个重要技能：</p><p><span style="font-weight: bold;" class="bold">拆解</span></p><p>这么简单的两个字，在人生中的作用重大到不可想像…… 而且它也的确是自学能力中最重要的底层能力之一。</p></blockquote><blockquote><p>以后你会越来越清楚的：写程序的主要工作量，往往并非来自于在编辑器里敲代码那个阶段。</p><p>更多的工作量，其实在于如何才能在脑子里<span style="font-weight: bold;" class="bold">把整个流程拆解清楚</span>，考虑到各个方面……</p><p>所以，编程，更多是拿着纸笔梳理细节的工作。一旦所有的细节都想明白了，落实成代码其实是飞快的 —— 越是工程量大的项目越是如此。</p><p>这个道理在哪里都是相同、相通的。不说编程，说写书，也是一样的。</p></blockquote><blockquote><p>进而，想要把一门手艺搞到真正 “精湛” 的地步，最有效的方法就是尽早进入 “造” 的阶段 —— 所谓的 “造”，就是不断<span style="font-weight: bold;" class="bold">创造</span>的 “造”。</p><p>自学这门手艺，很简单，就是不断地学：</p></blockquote><blockquote><p><span style="font-weight: bold;" class="bold">地球上有效社交密度最高的地方，是</span> <span style="font-weight: bold;" class="bold"><a href="https://github.com">Github</a></span>。</p></blockquote><blockquote><p><span style="font-weight: bold;" class="bold">做个自驱动的人</span>，而非被外部驱动的被动的人。</p><p>这基本上是个越早建立越好的习惯。绝大多数人一生都是被动者，终生只是被外界驱动而已。所以，他们会在某一时刻，“发现” 某个技能是刚需，然后再去学，但可惜却肯定的是，到那时候预算总是并不充裕，总是捉襟见肘。</p></blockquote><blockquote><p>在古代，拜师学艺的确是很难的事情。首先，真正的好老师确实难寻；其次，高手也没空当老师；再次，就算是肯收徒授艺的老师也总是时间精力极其有限…… 更为重要的是，那时候想自学也真不行 —— 根本就没有什么称得上是文献的东西可供阅读或检索，很多重要信息甚至干脆只存在于某些人的脑中，就算它们被落实成了文献，也相当有限，且散落深藏在各处 —— 就算凑齐了，也没有 <a href="https://www.google.com/ncr">Google</a>！</p><p>对，最关键的是那时候没有 Google……</p></blockquote><blockquote><p><span style="font-weight: bold;" class="bold">注意力漂移</span>，是我杜撰的一个词，用来作为 “注意力集中” 的反义词 —— 因为更多的时候，我们并不是 “注意力不集中”，而是…… 而是更令人恼火的一个现象：</p><p>“注意力所集中的焦点总是不断被自己偷偷换掉……”</p><p>比如，你本来只不过就想着去 Google 一个编程错误信息的解读，结果不知道怎么就 “注意到” 了另外一个东西，比如，“某编辑器的皮肤”，然后你就 “顺手” 把它下载下来，然后 “很自然地顺手把它装上”，而后又看了看，觉得有点必要于是 “顺手做了点定制”…… 然后欣赏了一会儿，并自我得意一番之后 “突然发现” 自己还没有解决两小时之前要解决的问题！</p></blockquote><blockquote><p>早些年，我跟很多人一样痴迷于电脑这个东西，也跟很多人那样，用 Windows 惯出来了坏毛病 —— 动不动就重装系统…… 重装系统很浪费时间的，但那时也不知道为什么总是忍不住去干那事，哪怕有些小毛病，马上就受不了，弄的好像重装一个干净的操作系统会让自己的世界焕然一新一样。</p><p>再后来就明白了，这绝对就是<span style="font-weight: bold;" class="bold">自己的毛病 —— 做事不分轻重</span>。</p><p>说实话，这也不是自己想明白的 —— 我没那么聪明。是因为遇到了一个高人。他的电脑桌面上，乱七八糟摆满了各种图标，从不整理。我问他这不影响效率吗？他说，明明有搜索你不用，<span style="font-weight: bold;" class="bold">到底是谁效率低下</span>？我被问愣了，无言以对。</p><p>我又发现他根本没有装杀毒软件…… 我问为什么？他说，“养几个虫子玩玩也没什么不好……” 不过，他转念又告诉了我他的思考。他说，只要平时习惯好，病毒进来了也没啥可偷的，但更为关键的是，他用电脑是干活的，而不是干杀毒的活的…… 脑子如此清楚，让我自愧不如。</p><p>但学到了。</p><p>虽然我还是做不到桌面上图标很乱，虽然我是因为改用了 Mac OS，所以不装杀毒软件，但<span style="font-weight: bold;" class="bold">注意力要放到应该放的地方</span>，这事我记住了，牢牢记住，从此之后许多年，从未忘过。每次发现自己轻重不分的时候，就会想起他，然后就改过自新。</p></blockquote><blockquote><p>非常遗憾，绝大多数人对沟通能力的重视远远不够 —— 他们也不是不重视，就是重视的程度实际上太差了。别说双向沟通了，即便是单向沟通，向别人问个问题这么 “简单” 的事，其实也需要 “学” 与 “练”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python批量给扫描pdf添加书签</title>
      <link href="//post/scan-the-pdf-batch-with-python-batch-to-add-bookmarks-zn2z7s.html"/>
      <url>//post/scan-the-pdf-batch-with-python-batch-to-add-bookmarks-zn2z7s.html</url>
      
        <content type="html"><![CDATA[<p>我在Zlibrary下载了《神经科学：探索脑》第四版的中文电子版。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202403062209704.png"></div></div><p>本来这个版本是有书签的，但是我想用ABBYY进行OCR识别，由于书有986页，全部一起OCR到中途会提示内存不足，我拆分为两份，分别进行OCR，然后再进行合并，但是后面就发现一个问题——原来的书签不见了！</p><p>那当然不可能再一个个敲！那怎么办？</p><p>于是在GPT的帮助下，用python写了一个代码，可以批量把原先pdf的书签导出到另一个pdf去</p><p>提问过程：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202403062154322.png"></div></div><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fitz  <span class="comment"># PyMuPDF:pip install pymupdf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_bookmarks</span>(<span class="params">source_pdf_path, target_pdf_path, output_pdf_path</span>):</span><br><span class="line">    <span class="comment"># 打开源PDF和目标PDF文件</span></span><br><span class="line">    source_pdf = fitz.<span class="built_in">open</span>(source_pdf_path)</span><br><span class="line">    target_pdf = fitz.<span class="built_in">open</span>(target_pdf_path)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 从源PDF读取书签（大纲）</span></span><br><span class="line">    bookmarks = source_pdf.get_toc(simple=<span class="literal">False</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 将书签（大纲）添加到目标PDF</span></span><br><span class="line">    target_pdf.set_toc(bookmarks)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 保存更改到新的PDF文件</span></span><br><span class="line">    target_pdf.save(output_pdf_path)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 关闭PDF文件</span></span><br><span class="line">    source_pdf.close()</span><br><span class="line">    target_pdf.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源PDF路径（书签来源）</span></span><br><span class="line">source_pdf_path = <span class="string">&#x27;source.pdf&#x27;</span></span><br><span class="line"><span class="comment"># 目标PDF路径（需要添加书签的PDF）</span></span><br><span class="line">target_pdf_path = <span class="string">&#x27;target.pdf&#x27;</span></span><br><span class="line"><span class="comment"># 输出的PDF路径</span></span><br><span class="line">output_pdf_path = <span class="string">&#x27;output_with_bookmarks.pdf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">copy_bookmarks(source_pdf_path, target_pdf_path, output_pdf_path)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;书签导入完成。&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成果展示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202403062207870.png"></div></div><p>事情到这里本来就结束了，但是我又突然有一个idea，如果一个本来没有书签的pdf，我该如何快速的添加书签呢。</p><p>我的想法是，大多数书籍都会提供目录，我可以根据书上的目录快速整理出一个目录列表，然后再用程序把这个列表变为书签，导入的pdf里去</p><p>比如基于《探索脑》这本书的目录</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202403062150471.png"></div></div><p>我整理得到了这样一个列表</p><ul><li><p>第 I 篇 基础@3</p><ul><li>第 1 章 神经科学：过去、现在和未来@3</li><li>第 2 章 神经元和神经胶质细胞@23</li><li>第 3 章 静息状态下的神经元膜@57</li><li>第 4 章 动作电位@83</li><li>第 5 章 突触传递@111</li><li>第 6 章 神经递质系统@145</li><li>第 7 章 神经系统的结构@181</li><li>第 7 章附录  人体神经解剖学图解指南@221</li></ul></li><li><p>第 II 篇 感觉和运动系统@267</p><ul><li>第 8 章 化学感觉@267</li><li>第 9 章 眼睛@295</li><li>第 10 章 中枢视觉系统@333</li><li>第 11 章 听觉和前庭系统@371</li><li>第 12 章 躯体感觉系统@417</li><li>第 13 章 运动的脊髓控制@455</li><li>第 14 章 运动的脑控制@487</li></ul></li><li><p>第 III 篇  脑和行为@525</p><ul><li>第 15 章 脑和行为的化学调控@525</li><li>第 16 章 动机@555</li><li>第 17 章 性与脑@585</li><li>第 18 章 情绪的脑机制@621</li><li>第 19 章 脑的节律和睡眠@651</li><li>第 20 章 语言@691</li><li>第 21 章 静息态的脑、注意及意识@725</li><li>第 22 章 精神疾病@757</li></ul></li><li><p>第 IV 篇  变化的脑@789</p><ul><li>第 23 章 脑连接的形成@789</li><li>第 24 章 记忆系统@827</li><li>第 25 章 学习和记忆的分子机制@869</li></ul></li><li><p>术语表@905</p></li><li><p>参考文献@927</p></li></ul><p>然后将这个列表放进一个txt文件，运行代码，即可将书签导入到pdf！</p><p>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fitz  <span class="comment"># PyMuPDF:pip install pymupdf</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_bookmarks_from_txt</span>(<span class="params">txt_path,offset</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    解析txt文件中的书签信息。</span></span><br><span class="line"><span class="string">    txt文件的书签信息格式为markdown多级列表，根据缩进来确定层级。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    bookmarks = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(txt_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">            <span class="keyword">if</span> line.strip():  <span class="comment"># 跳过空行</span></span><br><span class="line">                <span class="comment"># 计算行前的空格数来确定层级</span></span><br><span class="line">                <span class="comment"># 假设每个层级的缩进是2个空格，可以根据实际情况调整</span></span><br><span class="line">                indent = <span class="built_in">len</span>(line) - <span class="built_in">len</span>(line.lstrip())</span><br><span class="line">                level = indent // <span class="number">2</span> + <span class="number">1</span>  <span class="comment"># 计算层级，假定每2个空格代表一级缩进</span></span><br><span class="line">                <span class="comment"># 移除星号和空格，然后分割标题和页码</span></span><br><span class="line">                title, page = line.strip().removeprefix(<span class="string">&#x27;*&#x27;</span>).strip().split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">                bookmarks.append([level, title.strip(), <span class="built_in">int</span>(page)+offset])</span><br><span class="line">    <span class="keyword">return</span> bookmarks</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_bookmarks_to_pdf</span>(<span class="params">pdf_path, output_pdf_path,bookmarks</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将格式化后的书签信息添加到指定的PDF文件中。</span></span><br><span class="line"><span class="string">    :param pdf_path: PDF文件的路径</span></span><br><span class="line"><span class="string">    :param bookmarks: 要添加的书签列表，格式为[[level, title, page], ...]</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 打开PDF文件</span></span><br><span class="line">    doc = fitz.<span class="built_in">open</span>(pdf_path)</span><br><span class="line">  </span><br><span class="line">    doc.set_toc(bookmarks)</span><br><span class="line">    <span class="comment"># 保存更改到新的PDF文件中，以防覆盖原文件</span></span><br><span class="line">    doc.save(output_pdf_path)</span><br><span class="line">    doc.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;书签已添加到新的PDF文件中：<span class="subst">&#123;output_pdf_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.将书签从txt文件解析并转换为pymupdf格式</span></span><br><span class="line">txt_path = <span class="string">&#x27;bookmarks.txt&#x27;</span>  <span class="comment"># 假设书签信息存储在bookmarks.txt文件中</span></span><br><span class="line">bookmarks = parse_bookmarks_from_txt(txt_path,offset=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.添加书签到PDF</span></span><br><span class="line">pdf_path = <span class="string">r&quot;C:\Users\Achuan-2\Downloads\神经科学：探索脑（第四版）OCR.pdf&quot;</span> <span class="comment"># 替换为目标PDF文件的路径</span></span><br><span class="line">output_pdf_path = <span class="string">r&quot;C:\Users\Achuan-2\Downloads\神经科学：探索脑（第四版）test.pdf&quot;</span></span><br><span class="line">add_bookmarks_to_pdf(pdf_path, output_pdf_path,bookmarks)</span><br></pre></td></tr></table></figure><blockquote><p>注意：因为目录和实际的pdf页码有差别，需要考虑offset，比如这本书目录和实际pdf页码差距为32，需要给目录的页码都加上32.</p></blockquote><p>感慨：编程真的能提高效率！有了GPT之后，真的是无脑编程，只要有想法，敢去做！</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思源笔记|用quicker动作与zotero进行无缝联动</title>
      <link href="//post/siyuan-note-use-quicker-action-to-seamlessly-link-with-zotero-zejypu.html"/>
      <url>//post/siyuan-note-use-quicker-action-to-seamlessly-link-with-zotero-zejypu.html</url>
      
        <content type="html"><![CDATA[<p>开发者写的文档：<a href="https://www.yuque.com/chentaotao-cf9fr/gthfy4/zd1m20wi0y27whla">Siyuan 文献管理插件，实现与 Zotero 无缝对接 (yuque.com)</a></p><p>相关 quicker 动作</p><ul><li><a href="https://getquicker.net/Sharedaction?code=c864bb72-b1dc-447e-594d-08db837051fc&amp;fromMyShare=true">插入引用 - by ttChen - 动作信息 - Quicker (getquicker.net)</a></li><li><a href="https://getquicker.net/Sharedaction?code=c064a200-45d1-4ad1-594e-08db837051fc&amp;fromMyShare=true">文献列表 - by ttChen - 动作信息 - Quicker (getquicker.net)</a></li><li><a href="https://getquicker.net/Sharedaction?code=451c8146-9948-419f-1267-08db84706690&amp;fromMyShare=true">格式化 - by ttChen - 动作信息 - Quicker (getquicker.net)</a></li></ul><h2 id="功能简介"><a class="markdownIt-Anchor" href="#功能简介"></a> 功能简介</h2><p>优点</p><ul><li>引用文献插入的是 Zotero URL，<span style="font-weight: bold;" data-type="strong">不需要导入文档进思源</span></li><li>导出 word 之后<span style="font-weight: bold;" data-type="strong">可以把 Zotero URL 变为 Zotero 引注</span>，实现与原生 Zotero 插件格式兼容，就可以愉快在思源写文章，然后直接导出 word 了，再搭配设计好的 word 模板，导出后基本就不需要怎么改了！</li></ul><p>缺点：</p><ul><li>插入文献不方便，需要在zotero先选中文献才能插入，选择多篇文献不方便，要是能弹出zotero内置的添加引注面板就好了</li></ul><h2 id="配置笔记"><a class="markdownIt-Anchor" href="#配置笔记"></a> 配置笔记</h2><ol><li>需要安装 debug-bridge 插件，具体见 <a href="https://www.yuque.com/chentaotao-cf9fr/gthfy4/clqahv57w5ugmdev?utm_source=ld246.com">Run Javascript in Zotero by Quicker (yuque.com)</a></li><li>CSL 文献样式要求选择 Author+Year 样式，我是根据作者录屏所示选择的 Field Crops Research 样式，不知道其他样式行不行</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202401011847128.png"></div></div><h2 id="使用笔记"><a class="markdownIt-Anchor" href="#使用笔记"></a> 使用笔记</h2><ul><li><p><span style="font-weight: bold;" data-type="strong">插入文献</span>：</p><ul><li>需要打开 Zotero，先在 Zotero 主窗口中选择单条或多条，再点击 quicker 的「<span style="font-weight: bold;" data-type="strong">插入引用</span>」按钮</li><li>⚠ 警告：点击 quicker 的「<span style="font-weight: bold;" data-type="strong">插入引用</span>」按钮，鼠标需要先聚焦在思源笔记的文字内</li></ul></li><li><p><span style="font-weight: bold;" data-type="strong">导出 word 之后格式化 word 文档，使其与 Zotero 的 word 引用插件兼容</span>：</p><ul><li>将思源笔记的文档导出为 word 之后，打开 word 文档，点击 quicker 的「<span style="font-weight: bold;" data-type="strong">格式化</span>」按钮，将弹出选择 CSL 央视，选择完成后将自动格式化，将 Zotero URL 转换为 Zotero 引注格式</li></ul></li><li><p><span style="font-weight: bold;" data-type="strong">思源笔记插入文献列表</span></p><ul><li>点击 quicker 的「<span style="font-weight: bold;" data-type="strong">文献列表</span>」按钮，就可以在文档末尾插入文献列表，不过我觉得这个功能暂时并没有用，因为导出 word 后的格式化功能是不能将思源笔记的文献列表自动生成为 Zotero 的文献列表的</li></ul></li></ul><h2 id="使用效果"><a class="markdownIt-Anchor" href="#使用效果"></a> 使用效果</h2><p>思源笔记内的笔记样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202401011847399.png"></div></div><p>直接导出word无处理的样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202401011847448.png"></div></div><p>word格式化之后的样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202401011847378.png"></div></div><h2 id="使用的疑问"><a class="markdownIt-Anchor" href="#使用的疑问"></a> 使用的疑问</h2><ul><li><p><span style="font-weight: bold;" data-type="strong">现在引用格式主要支持 Author+year 样式，支持编号样式不？</span></p><ul><li>目前只支持(Author,year)样式，编号样式，建议导出 word 后，用格式化转换实现。</li></ul></li><li><p><span style="font-weight: bold;" data-type="strong">如果前面添加完一个引用，还想在同一句话再添加一个引用，有什么方便的方式吗？</span></p><ul><li><p>解决方式1：一个个添加，再手动更改</p><p>(<a href="zotero://select/items/1_YACNJ4QB">Cramer et al., 2021</a>) → (<a href="zotero://select/items/1_YACNJ4QB">Cramer et al., 2021</a>;<a href="zotero://select/items/1_GEWY7DEN">Dana et al., 2019</a>)</p></li><li><p>解决方式2：用高级搜索，使用匹配任意条件模式，就可以搜索多个，然后选中，再插入</p></li></ul></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202401011847944.png"></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.yuque.com/chentaotao-cf9fr/gthfy4/zd1m20wi0y27whla">Siyuan 文献管理插件，实现与 Zotero 无缝对接 (yuque.com)</a></li><li><a href="https://ld246.com/article/1689296953335">Siyuan 文献管理插件，实现与 Zotero 无缝对接 - 链滴 (ld246.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> Zotero </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 2024a 尝鲜：函数编写体验大升级</title>
      <link href="//post/matlab-2024a-everbright-functional-writing-experience-big-upgrade-eao4i.html"/>
      <url>//post/matlab-2024a-everbright-functional-writing-experience-big-upgrade-eao4i.html</url>
      
        <content type="html"><![CDATA[<p>旧电脑坏了买了台新电脑顶上，正打算装上 MATLAB，突然发现已经有 R2024a 预览版了。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312242213996.png"></div></div><p>简单看了下介绍我就迫不及待地下载试用了，因为 R2024a 更新了一个非常重要的特性，函数可以在脚本文件的任意位置了！</p><p>在R2024a之前：脚本中的本地函数必须定义在文件末尾，在最后一行脚本代码之后。而2024a开始，Matlab终于对这一点进行了改进，可以在运行函数代码前面或后面添加函数！2024a把这类函数叫做local functions，即局部函数。</p><p>个人认为Matlab 现在改进这一点，更多是为了推广实时脚本（对标 python 的 jupyter notebook）而改进。实时脚本尽管加了很多UI控件，由于之前函数只能写在最后，对于要新建函数的代码编写和测试不是特别好用，要写函数要么新建一个函数文件要么把函数放在最后，代码写的不流畅。有了这一功能后，可以直接在块内新建一个函数并调用，这coding体验简直上了一个台阶！真的得夸夸！</p><p>此外，Matlab 还优化了函数 arguments 语法的编写体验，现在会自动填充输入参数变量，不需要再手动一个个填写，我个人觉得Matlab虽然目前不上python的函数编写体验（python 可以很方便的自定义函数参数默认值，键值对传参），arguments也比较繁琐，但 arguments 参数块的引入还是很大程度提高了 MATLAB 的函数编写体验，可以对输入参数进行类型验证和类型转换、设置参数默认值、键值对传参等功能，很建议没接触的朋友们学一学arguments 怎么使用，国内这块Matlab相关书籍和博客还是比较少提到的，直接查阅 MATLAB 文档就好了。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312242213754.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312242213979.png"></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://ww2.mathworks.cn/help/releases/R2024a/matlab/release-notes.html">2024a 更新内容</a></li><li><a href="https://ww2.mathworks.cn/help/releases/R2024a/matlab/matlab_prog/local-functions-in-scripts.html">Add Functions to Scripts</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 如何读取、查看、保存Tiff</title>
      <link href="//post/matlab-read-view-save-tiff-1pkevw.html"/>
      <url>//post/matlab-read-view-save-tiff-1pkevw.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>总结：Tiff 是 tagged image file format 的缩写。在科研领域，常用于无损保存图片。</p><p>本文主要探讨如何使用 Matlab 读取、查看、保存 Tiff 图像，思考了 Matlab 如何把 metadata 写入 Tiff 图像，并写了一些自定义函数方便调用。</p></blockquote><h2 id="读取-tiff"><a class="markdownIt-Anchor" href="#读取-tiff"></a> 读取 Tiff</h2><h3 id="single-tiff"><a class="markdownIt-Anchor" href="#single-tiff"></a> Single Tiff</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img= imread(filepath); </span><br></pre></td></tr></table></figure><h3 id="stacked-tiff"><a class="markdownIt-Anchor" href="#stacked-tiff"></a> Stacked Tiff</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img_stack = tiffreadVolume(filepath);</span><br></pre></td></tr></table></figure><blockquote><p>tiffreadVolume 需要 Matlab 2020b 以上</p><p>如果用 imread 则需要用索引循环提取，不太方便。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tiff_file = <span class="string">&#x27;input.tif&#x27;</span>;</span><br><span class="line">info = imfinfo(tiff_file);</span><br><span class="line">num_images = <span class="built_in">numel</span>(info);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 创建一个三维数组来存储图像数据</span></span><br><span class="line">image_stack = <span class="built_in">zeros</span>(info(<span class="number">1</span>).Height, info(<span class="number">1</span>).Width, num_images, <span class="string">&#x27;uint16&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 逐个读取图像并存储在三维数组中</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:num_images</span><br><span class="line">    image_stack(:, :, <span class="built_in">i</span>) = imread(tiff_file, <span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></blockquote><p>有些成像软件（比如多光子成像软件 Scanimage），会把多通道的图片合并在一个 tif 里，要读取单个通道的话可以用下面的自定义函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">varargout</span> =  <span class="title">tiff_read_volume</span><span class="params">(filepath,nChannel)</span></span></span><br><span class="line">    <span class="comment">%tiff_read_volume - 读取Tiff图像的灰度值.</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   USAGE</span></span><br><span class="line">    <span class="comment">%       imgStack = tiff_read_volume(filepath);</span></span><br><span class="line">    <span class="comment">%       [imgCh1,imgCh2] = tiff_read_volume(filepath,2);</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   INPUT PARAMETERS</span></span><br><span class="line">    <span class="comment">%       filepath             -   图像文件的路径</span></span><br><span class="line">    <span class="comment">%       属性</span></span><br><span class="line">    <span class="comment">%         &#x27;nChannel&#x27;     -  默认为1</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   OUTPUT PARAMETERS</span></span><br><span class="line">    <span class="comment">%       imgStack         -   输出nChannel个图像</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 设置默认参数</span></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        filepath string;</span><br><span class="line">        nChannel double = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% read info</span></span><br><span class="line">    imgStack = tiffreadVolume(filepath);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 如果 Tif 只有一个通道，直接输出读的结果即可</span></span><br><span class="line">    <span class="keyword">if</span> nChannel == <span class="number">1</span></span><br><span class="line">        varargout&#123;<span class="number">1</span>&#125; = imgStack;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% 如果 Tif 有多个通道，则需要分割出各个通道图像</span></span><br><span class="line">    varargout = cell(<span class="number">1</span>,nChannel);</span><br><span class="line">    <span class="keyword">for</span> iChannel = <span class="number">1</span>:nChannel</span><br><span class="line">        varargout&#123;iChannel&#125;= imgStack(:, :, iChannel:nChannel:<span class="keyword">end</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="查看-tiff"><a class="markdownIt-Anchor" href="#查看-tiff"></a> 查看 Tiff</h2><h3 id="single-tiff-2"><a class="markdownIt-Anchor" href="#single-tiff-2"></a> Single Tiff</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">imshow(img,[]);<span class="comment">% 后一个参数是调整显示范围，建议加上，默认是根据数据类型的最小和最大值显示，使用[]就是根据实际数据的最小值和最大值，更符合通用情况的展示图片</span></span><br></pre></td></tr></table></figure><h3 id="stacked-tiff-2"><a class="markdownIt-Anchor" href="#stacked-tiff-2"></a> Stacked Tiff</h3><p>以 GUI 形式动态查看 stack： sliceViewer、orthosliceViewer 和 volumeViewer</p><h4 id="sliceviewer"><a class="markdownIt-Anchor" href="#sliceviewer"></a> sliceViewer</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">figure</span>();</span><br><span class="line">slice_viewer = sliceViewer(img_stack,<span class="string">&quot;Parent&quot;</span>,f);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312202329829.png"></div></div><blockquote><ul><li>从左向右水平拖动鼠标会更改对比度，垂直上下拖动鼠标会更改亮度。</li><li>单击并拖动鼠标时按住 Ctrl 键可加速更改。按住 Shift 键同时单击并拖动鼠标会减慢更改速率。</li></ul></blockquote><h4 id="orthosliceviewer"><a class="markdownIt-Anchor" href="#orthosliceviewer"></a> orthosliceViewer</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">figure</span>();</span><br><span class="line">orthoslice_viewer = orthosliceViewer(img_stack,<span class="string">&quot;Parent&quot;</span>,f);</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312202329206.png"></div></div><h4 id="volumeviewer"><a class="markdownIt-Anchor" href="#volumeviewer"></a> volumeViewer</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 打开GUI界面，选择文件加载</span></span><br><span class="line">volumeViewer</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312202329220.png"></div></div><h2 id="保存-tiff"><a class="markdownIt-Anchor" href="#保存-tiff"></a> 保存 Tiff</h2><p>可以用 imwrite、Tiff 库和第三方的实现方式</p><h3 id="imwrite"><a class="markdownIt-Anchor" href="#imwrite"></a> imwrite</h3><h4 id="单帧"><a class="markdownIt-Anchor" href="#单帧"></a> 单帧</h4><p>简单保存</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filepath = <span class="string">&#x27;output.tif&#x27;</span>;</span><br><span class="line">imwrite(img,filepath);</span><br></pre></td></tr></table></figure><p>保存 metadata 到文件</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">info = imfinfo(<span class="string">&quot;input.tif&quot;</span>);</span><br><span class="line">filepath = <span class="string">&#x27;output.tif&#x27;</span>;</span><br><span class="line">imwrite(img,filepath, ...</span><br><span class="line">    <span class="string">&#x27;Description&#x27;</span>,info.ImageDescription, ...</span><br><span class="line">    <span class="string">&#x27;RowsPerStrip&#x27;</span>,info.RowsPerStrip, ...</span><br><span class="line">    <span class="string">&#x27;Resolution&#x27;</span>,[info.XResolution,info.YResolution], ...</span><br><span class="line">    <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="stacked-tiff-3"><a class="markdownIt-Anchor" href="#stacked-tiff-3"></a> Stacked Tiff</h4><p>直接保存</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = imfinfo(<span class="string">&quot;input.tif&quot;</span>);</span><br><span class="line"></span><br><span class="line">filepath = <span class="string">&quot;output.tif&quot;</span>;</span><br><span class="line">tiff_save_volume(imgStack,filepath);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiff_save_volume</span><span class="params">(imgStack,filepath)</span></span></span><br><span class="line">    imwrite(imgStack(:,:,<span class="number">1</span>),filepath, </span><br><span class="line">        <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : <span class="built_in">size</span>(imgStack, <span class="number">3</span>)</span><br><span class="line">        imwrite(imgStack(:,:,<span class="built_in">i</span>),filepath, ...</span><br><span class="line">            <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>, ...</span><br><span class="line">            <span class="string">&#x27;WriteMode&#x27;</span>, <span class="string">&#x27;append&#x27;</span>) ;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>保存 metadata 到文件</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">info = imfinfo(<span class="string">&quot;input.tif&quot;</span>);</span><br><span class="line"></span><br><span class="line">filepath = <span class="string">&quot;output.tif&quot;</span>;</span><br><span class="line">tiff_save_volume(imgStack,filepath,info(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiff_save_volume</span><span class="params">(imgStack,filepath,info)</span></span></span><br><span class="line">    imwrite(imgStack(:,:,<span class="number">1</span>),filepath, ...</span><br><span class="line">        <span class="string">&#x27;Description&#x27;</span>,info.ImageDescription, ....</span><br><span class="line">        <span class="string">&#x27;Resolution&#x27;</span>,[info.XResolution,info.YResolution], ...</span><br><span class="line">        <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : <span class="built_in">size</span>(imgStack, <span class="number">3</span>)</span><br><span class="line">        imwrite(imgStack(:,:,<span class="built_in">i</span>),filepath, ...</span><br><span class="line">            <span class="string">&#x27;Description&#x27;</span>,info.ImageDescription, ...</span><br><span class="line">            <span class="string">&#x27;Resolution&#x27;</span>,[info.XResolution,info.YResolution], ...</span><br><span class="line">            <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>, ...</span><br><span class="line">            <span class="string">&#x27;WriteMode&#x27;</span>, <span class="string">&#x27;append&#x27;</span>) ;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="基于-imwrite-的-tif-保存函数"><a class="markdownIt-Anchor" href="#基于-imwrite-的-tif-保存函数"></a> 基于 imwrite 的 tif 保存函数</h4><p>写了一个函数，既可以保存单帧的 tif，也可以保存多帧 tif，既可以直接保存，也可以写入特定的图像信息</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiff_save_imwrite</span><span class="params">(input_img, filepath, info)</span></span></span><br><span class="line">    <span class="comment">%tiff_save_imwrite: Save a 3D image stack as a TIFF volume.</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   USAGE</span></span><br><span class="line">    <span class="comment">%       tiff_save_imwrite(img_stack, &#x27;test.tif&#x27;);</span></span><br><span class="line">    <span class="comment">%       ---</span></span><br><span class="line">    <span class="comment">%       info = imfinfo(&#x27;original.tif&#x27;);</span></span><br><span class="line">    <span class="comment">%       tiff_save_imwrite(img_stack, &#x27;test.tif&#x27;, info);</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   Input Arguments</span></span><br><span class="line">    <span class="comment">%       input_img     -   the input image,can be 2D or 3D.</span></span><br><span class="line">    <span class="comment">%       filepath      -   Path to the TIFF file to be created.</span></span><br><span class="line">    <span class="comment">%       info          -   Optional structure containing TIFF file properties.</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        input_img <span class="comment">% the input image,can be 2D or 3D.</span></span><br><span class="line">        filepath string <span class="comment">% Path to the TIFF file to be created.</span></span><br><span class="line">        info struct = struct() <span class="comment">% Optional structure containing TIFF file properties.</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ~<span class="built_in">ismember</span>(<span class="built_in">ndims</span>(input_img),[<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">        error(<span class="string">&#x27;The number of dimensions of the input image must be 2 or 3.&#x27;</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% Set default TIFF file properties if info is not provided.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isempty</span>(fieldnames(info))</span><br><span class="line">        info = struct();</span><br><span class="line">        <span class="comment">% imwrite cannot set the ResolutionUnit property of tif,but We can</span></span><br><span class="line">        <span class="comment">% set ImageDescription as the style of ImageJ</span></span><br><span class="line">        info.ImageDescription = sprintf(<span class="string">&#x27;ImageJ=1.53t\nunit=micron\n&#x27;</span>);</span><br><span class="line">        info.XResolution = <span class="number">1</span>;</span><br><span class="line">        info.YResolution = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    depth = <span class="built_in">size</span>(input_img, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> d = <span class="number">1</span>:depth</span><br><span class="line">        imwrite(input_img(:,:,<span class="number">1</span>),filepath, ...</span><br><span class="line">            <span class="string">&#x27;Description&#x27;</span>,info.ImageDescription, ....</span><br><span class="line">            <span class="string">&#x27;Resolution&#x27;</span>,[info.XResolution,info.YResolution], ...</span><br><span class="line">            <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> d ~= depth</span><br><span class="line">            imwrite(input_img(:,:,d),filepath, ...</span><br><span class="line">                <span class="string">&#x27;Description&#x27;</span>,info.ImageDescription, ....</span><br><span class="line">                <span class="string">&#x27;Resolution&#x27;</span>,[info.XResolution,info.YResolution], ...</span><br><span class="line">                <span class="string">&#x27;Compression&#x27;</span>,<span class="string">&#x27;none&#x27;</span>, ...</span><br><span class="line">                <span class="string">&#x27;WriteMode&#x27;</span>, <span class="string">&#x27;append&#x27;</span>) ;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 保存图像</span></span><br><span class="line">tiff_save_imwrite(img_stack, <span class="string">&#x27;test.tif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 保存原图的信息</span></span><br><span class="line">tiff_save_imwrite(img_stack, <span class="string">&#x27;test.tif&#x27;</span>, info);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>⚠ imwrite 如果要保存 ImageJ 的图像信息或者希望保存的图像信息被 ImageJ 正确读取，可以在 Description 添加 <code>ImageJ=1.53q\nunit=um....</code>，imwrite 是不支持给 tif 写入 ResolutionUnit 的，但是用这种方法就可以让 ImageJ 正确读取 ResolutionUnit 单位。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imwrite(I, <span class="string">&#x27;myLovelyImage.tif&#x27;</span>, <span class="string">&#x27;TIF&#x27;</span>, <span class="string">&#x27;Resolution&#x27;</span>, [<span class="number">1</span>/pixSizeX <span class="number">1</span>/pixSizeY], <span class="string">&#x27;Description&#x27;</span>, sprintf(<span class="string">&#x27;ImageJ=1.53q\nunit=um\n&#x27;</span>));</span><br></pre></td></tr></table></figure><p>ref：<a href="https://forum.image.sc/t/simplest-way-to-save-tif-in-matlab-with-resolution-in-um/67893/2">Simplest way to save tif in Matlab with resolution in um - Usage &amp; Issues - Image.sc Forum</a></p></blockquote><p>‍</p><h3 id="tiff"><a class="markdownIt-Anchor" href="#tiff"></a> Tiff</h3><p>imwrite 虽然也能保存 Tiff，但是更推荐使用 Tiff 库。imwrite 只能保存简单的信息，不能保存 ResolutionUnit 信息到文件（除非写入到 Description 字段），而且保存多帧 Tif 的速度慢，而使用 LibTIFF 库保存 Tiff，就可以尽可能的保存 Metadata，保存速度也比 imwrite 快。</p><p>Tiff 对象的官方文档：<a href="https://ww2.mathworks.cn/help/matlab/ref/tiff.html">https://ww2.mathworks.cn/help/matlab/ref/tiff.html</a></p><p>使用 <code>Tiff()</code> 函数保存图片文件时，在将数据写入文件之前，必须先设置以下标记：</p><ul><li><code>ImageWidth</code>：图像宽度</li><li><code>ImageLength</code>：图像长度</li><li><code>Compression</code>：压缩情况，一般选择无压缩 <code>Tiff.Compression.None</code></li><li><code>PlanarConfiguration</code>：存储配置。chunky 是连续存储每个像素的分量值，seperate 是分开存储每个通道。在科研中处理的大多数为单通道灰度图像，这个设置都可。<code>Tiff.PlanarConfiguration.Chunky</code></li><li><code>BitsPerSample</code>：数据为 int16、uint16，该值为 16，数据为 uint8 该值为 8</li><li><code>Photometric</code>：图像数据颜色空间。有好多种可以选，具体可以 doc 看看。科研处理的灰度图像，一般选’MinIsBlack’，即像素值为 0 时是黑色的。<code>Tiff.Photometric.MinIsBlack</code></li><li><code>SamplesPerPixel</code>：一个像素几个采样数，一般为 1</li></ul><table><thead><tr><th>标记类型</th><th>解释</th><th>一般设置的值</th></tr></thead><tbody><tr><td><code>ImageWidth</code></td><td>图像宽度</td><td>根据实际图像尺寸设置：<code>size(img,2)</code></td></tr><tr><td><code>ImageLength</code></td><td>图像长度</td><td>根据实际图像尺寸设置：<code>size(img,1)</code></td></tr><tr><td><code>Compression</code></td><td>压缩情况</td><td><code>Tiff.Compression.None</code></td></tr><tr><td><code>PlanarConfiguration</code></td><td>存储配置</td><td><code>Tiff.PlanarConfiguration.Chunky</code></td></tr><tr><td><code>BitsPerSample</code></td><td>数据类型</td><td>根据实际数据类型设置：8，16，32</td></tr><tr><td><code>Photometric</code></td><td>图像数据颜色空间</td><td><code>Tiff.Photometric.MinIsBlack</code></td></tr><tr><td><code>SamplesPerPixel</code></td><td>一个像素几个采样数</td><td>1</td></tr><tr><td><code>SampleFormat</code></td><td>int 类型还是 uint 类型</td><td><code>Tiff.SampleFormat.UInt</code> or <code>Tiff.SampleFormat.Int</code></td></tr></tbody></table><p>‍</p><blockquote><p>ℹ <code>RowsPerStrip</code> 是什么</p><p>例如，如果一个 512x512 的图像被设置为 <code>RowsPerStrip</code> 为 16，则这意味着每个条将包含 16 行的数据。因此，整个图像将被分成 512 / 16 = 32 个条来存储。每个条可以单独被读取和写入，这有助于处理大图像，因为你可以一次只加载和处理图像的一部分，而不是整个图像。</p></blockquote><p>自定义保存 Tiff 的函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiff_save_lib</span><span class="params">(input_img, filepath, tagstruct)</span></span></span><br><span class="line"><span class="comment">%tiff_save_lib: Save a 3D image stack as a TIFF volume.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   USAGE</span></span><br><span class="line"><span class="comment">%       tiff_save_lib(img, &#x27;test.tif&#x27;);</span></span><br><span class="line"><span class="comment">%       ---</span></span><br><span class="line"><span class="comment">%       tagstruct = tiff_read_tag(&#x27;original.tif&#x27;);</span></span><br><span class="line"><span class="comment">%       tiff_save_lib(img, &#x27;test.tif&#x27;, tagstruct);</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   Input Arguments</span></span><br><span class="line"><span class="comment">%       input_img     -   the input image,can be 2D or 3D.</span></span><br><span class="line"><span class="comment">%       filepath      -   Path to the TIFF file to be created.</span></span><br><span class="line"><span class="comment">%       tagstruct          -   Optional structure containing TIFF file tags.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        input_img <span class="comment">% the input image,can be 2D or 3D.</span></span><br><span class="line">        filepath string <span class="comment">% Path to the TIFF file to be created.</span></span><br><span class="line">        tagstruct struct = struct() <span class="comment">% Optional structure containing TIFF file properties.</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> ~<span class="built_in">ismember</span>(<span class="built_in">ndims</span>(input_img),[<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">        error(<span class="string">&#x27;The number of dimensions of the input image must be 2 or 3.&#x27;</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% Set default TIFF file properties if info is not provided.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isempty</span>(fieldnames(tagstruct))</span><br><span class="line">        tagstruct = generate_tagstruct(input_img);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    s=whos(<span class="string">&#x27;input_img&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> s.bytes &gt; <span class="number">2</span>^<span class="number">31</span><span class="number">-1</span> <span class="comment">% 2^32-1约等于4GB,但是考虑加上tag后，文件会偏大，所以设置为2^31-1</span></span><br><span class="line">        t = Tiff(filepath,<span class="string">&#x27;w8&#x27;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        t = Tiff(filepath,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    depth = <span class="built_in">size</span>(input_img, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> d = <span class="number">1</span>:depth</span><br><span class="line">        t.setTag(tagstruct);</span><br><span class="line">        t.write(input_img(:, :, d));</span><br><span class="line">        <span class="keyword">if</span> d ~= depth</span><br><span class="line">            <span class="comment">% Tiff对象若需要写入多帧图片，需要使用writeDirectory，将IFD指向下一帧，才能继续写入</span></span><br><span class="line">            t.writeDirectory();</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    t.close();</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tagstruct</span> = <span class="title">generate_tagstruct</span><span class="params">(input_img)</span></span></span><br><span class="line">    tagstruct.ImageLength = <span class="built_in">size</span>(input_img, <span class="number">1</span>);</span><br><span class="line">    tagstruct.ImageWidth = <span class="built_in">size</span>(input_img, <span class="number">2</span>);</span><br><span class="line">    tagstruct.Photometric = Tiff.Photometric.MinIsBlack;</span><br><span class="line">    <span class="keyword">switch</span> class(input_img)</span><br><span class="line">        <span class="keyword">case</span> &#123;<span class="string">&#x27;uint8&#x27;</span>, <span class="string">&#x27;int8&#x27;</span>&#125;</span><br><span class="line">            tagstruct.BitsPerSample = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">case</span> &#123;<span class="string">&#x27;uint16&#x27;</span>, <span class="string">&#x27;int16&#x27;</span>&#125;</span><br><span class="line">            tagstruct.BitsPerSample = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">case</span> &#123;<span class="string">&#x27;uint32&#x27;</span>, <span class="string">&#x27;int32&#x27;</span>&#125;</span><br><span class="line">            tagstruct.BitsPerSample = <span class="number">32</span>;</span><br><span class="line">        <span class="keyword">case</span> &#123;<span class="string">&#x27;single&#x27;</span>&#125;</span><br><span class="line">            tagstruct.BitsPerSample = <span class="number">32</span>;</span><br><span class="line">        <span class="keyword">case</span> &#123;<span class="string">&#x27;double&#x27;</span>, <span class="string">&#x27;uint64&#x27;</span>, <span class="string">&#x27;int64&#x27;</span>&#125;</span><br><span class="line">            tagstruct.BitsPerSample = <span class="number">64</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">ismember</span>(class(input_img),&#123;<span class="string">&#x27;uint8&#x27;</span>,<span class="string">&#x27;uint16&#x27;</span>,<span class="string">&#x27;uint32&#x27;</span>,<span class="string">&#x27;logical&#x27;</span>&#125;)</span><br><span class="line">        tagstruct.SampleFormat = Tiff.SampleFormat.UInt;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">         tagstruct.SampleFormat = Tiff.SampleFormat.Int;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">   </span><br><span class="line">    tagstruct.SamplesPerPixel = <span class="number">1</span>;</span><br><span class="line">    tagstruct.PlanarConfiguration = Tiff.PlanarConfiguration.Chunky;</span><br><span class="line">    tagstruct.Software = <span class="string">&#x27;MATLAB&#x27;</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>自定义读取 Tif 的必要 Tag 函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tagstruct</span> = <span class="title">tiff_read_tag</span><span class="params">(filepath)</span></span></span><br><span class="line">    <span class="comment">%tiff_read_tag - 读取 Tiff 图像的信息.</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   USAGE</span></span><br><span class="line">    <span class="comment">%       tagstruct = tiff_read_tag(path)</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   INPUT PARAMETERS</span></span><br><span class="line">    <span class="comment">%       filepath             -   图像文件的路径</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line">    <span class="comment">%   OUTPUT PARAMETERS</span></span><br><span class="line">    <span class="comment">%       tagstruct         -   返回图像信息的struct数组</span></span><br><span class="line">    t = Tiff(filepath, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    tagNames = &#123;</span><br><span class="line">    <span class="string">&#x27;ImageLength&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ImageWidth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ImageDescription&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Artist&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ResolutionUnit&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;XResolution&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;YResolution&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Orientation&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Photometric&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BitsPerSample&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SamplesPerPixel&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SampleFormat&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;RowsPerStrip&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PlanarConfiguration&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Software&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line">    tagstruct = struct();</span><br><span class="line">    <span class="comment">% 循环获取每个tag的值</span></span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(tagNames)</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">            tagName = tagNames&#123;k&#125;;</span><br><span class="line">            tagValue = t.getTag(tagName);</span><br><span class="line">            tagstruct.(tagName) = tagValue;</span><br><span class="line">        <span class="keyword">catch</span></span><br><span class="line">            <span class="comment">%fprintf(&#x27;Tag %s cannot be retrieved.\n&#x27;, tagNames&#123;k&#125;);</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    t.close();</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 保存图像</span></span><br><span class="line">tiff_save_lib(img, <span class="string">&#x27;test.tif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 保存原图的信息</span></span><br><span class="line">tagstruct = tiff_read_tag(<span class="string">&#x27;original.tif&#x27;</span>);</span><br><span class="line">tiff_save_lib(img, <span class="string">&#x27;test.tif&#x27;</span>, tagstruct);</span><br></pre></td></tr></table></figure><h3 id="第三方实现方式"><a class="markdownIt-Anchor" href="#第三方实现方式"></a> 第三方实现方式</h3><p><a href="https://github.com/rharkes/Fast_Tiff_Write">rharkes/Fast_Tiff_Write</a>：这个 repo 实现了更快速的保存大文件，但是如下问题</p><ul><li>只能保存 uint16、uint8、single 数据</li><li>我暂时不知道怎么保存 metadata，最重要就是 XResolution、YResolution 和 ResolutionUnit</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312201741281.png"></div></div><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tic</span><br><span class="line">fTIF = Fast_Tiff_Write(<span class="string">&#x27;test_fastwrite.tif&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>); <span class="comment">% 1代表pixelsize,0代表compression</span></span><br><span class="line"><span class="keyword">for</span> ct = <span class="number">1</span>:<span class="built_in">size</span>(img_stack,<span class="number">3</span>)</span><br><span class="line">    fTIF.WriteIMG(img_stack(:,:,ct)&#x27;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fTIF.close;  </span><br><span class="line">toc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
            <tag> 图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Groupy 2 多窗口管理工具升级体验</title>
      <link href="//post/groupy-2-multi-window-management-tool-upgrade-experience-ocrer.html"/>
      <url>//post/groupy-2-multi-window-management-tool-upgrade-experience-ocrer.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Groupy2 官网：<a href="https://www.stardock.com/products/groupy/">Stardock Groupy 2: Tabs for Windows</a></p><p>Groupy2安装地址：<a href="https://cdn.stardock.us/downloads/public/software/groupy/Groupy2_setup.exe">https://cdn.stardock.us/downloads/public/software/groupy/Groupy2_setup.exe</a></p></blockquote><p>总结</p><ol><li>Groupy 2相比1代而言，UI上适配了Win11界面风格，更加美观好看</li><li>对已自带标签功能的资源管理器和记事本，Groupy 2 进行了适配，可以直接接管替换</li></ol><p>Groupy 2相比1代而言，UI上适配了Win11界面风格，更加美观好看</p><div class="tag-plugin image"><div class="image-bg"><img src="http://127.0.0.1:6806/assets/image-20231217103745-uyvew4l.png"></div></div><p>设置界面概览</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312171047667.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312171047438.png"></div></div><p>对已自带标签功能的资源管理器和记事本，Groupy 2 可以直接接管替换，不用担心冲突。样式兼容的特别好，不说还以为是原生的。现在Win11资源管理器虽然自带标签页，但是很不好用，Win+E或者其他应用打开的资源管理器不会自动合并到原来的标签组里，新建的标签页也不会基于原来打开的文件夹再打开一个窗口（而是统一打开【此电脑】界面】</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312171047561.png"></div></div><p>个人感觉还是有必要升级的，某宝上用¥34左右就可以买到激活5台电脑的激活码了。</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 电脑技巧 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思源笔记好搭档|最强剪贴板神器——CopyQ</title>
      <link href="//post/siyuan-notes-good-partner-the-strongest-clipboard-artifact-copyq-z2grwhp.html"/>
      <url>//post/siyuan-notes-good-partner-the-strongest-clipboard-artifact-copyq-z2grwhp.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前排：之前一直很馋 utools 的剪贴板插件，可以对图片、文本进行分类，我最喜欢的剪贴板工具是 CopyQ，一直觉得它很强大，却不知道该如何实现这个功能，一直以为不行，还傻傻去 GitHub 提了个 feature request，后来得到热心大佬的分享，观摩（抄袭）了他的 repo，突然发现自己过去是真的不会用 CopyQ，所以写下这篇分享，记录目前的用法，也分享给不了解不熟悉 CopyQ 的朋友们。</p></blockquote><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004796.png"></div></div><p>CopyQ 官方网站：<a href="https://hluk.github.io/CopyQ/">CopyQ (hluk.github.io)</a></p><h2 id="特色功能总结"><a class="markdownIt-Anchor" href="#特色功能总结"></a> 特色功能总结</h2><ul><li>可以同时保存文本、图片、文件等复制数据</li><li>支持搜索、筛选剪贴板</li><li>具备多标签页功能，可以通过拖拽实现 item 的所属标签页改动。</li><li>支持设置剪贴板数据，可以放在 Onedrive、Synology Drive 等同步盘进行多端同步</li><li>支持指定文本编辑器，我将其设置为 Sublime Text3（类似于 VSCode 编辑器），利用强大的编辑器能力来处理复制的文本</li><li>支持设置命令和动作，可以调用 copyq 自带命令，能用 JS 编写命令，也可以用 python 写命令。你可以通过命令设置筛选图片、文件，去除复制文本的换行、使 Copy 具有复制文件、预览图片文件的能力等等额外功能</li><li>支持导出全部配置数据（包括标签页、外观主题、命令等），便于分享和备份配置。</li></ul><p>‍</p><h2 id="个人配置"><a class="markdownIt-Anchor" href="#个人配置"></a> 个人配置</h2><h3 id="布局设置"><a class="markdownIt-Anchor" href="#布局设置"></a> 布局设置</h3><ul><li>隐藏工具栏和工具栏文本标签</li><li>显示标签树（标签页会以树形展示在页面左侧）和显示标签页条目计数</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004544.png"></div></div><h3 id="设置文本编辑器为-sublime-text3"><a class="markdownIt-Anchor" href="#设置文本编辑器为-sublime-text3"></a> 设置文本编辑器为 sublime text3</h3><ul><li><p>先在<u>系统变量的 Path</u> 下增加 Sublime Text3 的安装路径，比如我的配置 <code>C:\Program Files\Sublime Text 3</code>，添加完之后需要<span style="font-weight: bold;" data-type="strong">重启电脑。</span></p></li><li><p>然后在 copy 的【历史面板】设置外部编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subl --<span class="built_in">wait</span> %1</span><br></pre></td></tr></table></figure></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004438.png"></div></div><p>效果预览：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004383.webp"></div></div><h3 id="设置标签页存放路径用于同步"><a class="markdownIt-Anchor" href="#设置标签页存放路径用于同步"></a> 设置标签页存放路径用于同步</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004809.png"></div></div><blockquote><p>⚠️ 如果发现设置了路径，标签页数据并没有同步到指定路径，可以试着更改标签页名再更改回来</p></blockquote><h2 id="干货添加自定义命令"><a class="markdownIt-Anchor" href="#干货添加自定义命令"></a> 干货：添加自定义命令</h2><p>如何添加命令：【文件】-【命令/全局快捷键】</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004735.png"></div></div><p>命令面板支持添加/删除命令，选择命令是自动执行、还是需要菜单点击，还是按快捷键执行</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004228.png"></div></div><p>建议前往 Github 的这个仓库 →<a href="https://github.com/GFDGIT/CopyQ_lazy/tree/main">GFDGIT/CopyQ_lazy</a>，观摩大佬的配置。</p><p>下面是我自己目前主要使用的命令，可以复制后在命令面板点击【粘贴命令】加到自己的 CopyQ</p><h3 id="复制为纯文本"><a class="markdownIt-Anchor" href="#复制为纯文本"></a> 复制为纯文本</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x590d\x5236\x4e3a\x7eaf\x6587\x672c</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    copyq:</span></span><br><span class="line"><span class="string">    var text = input()</span></span><br><span class="line"><span class="string">    copy(text)</span></span><br><span class="line"><span class="string">    copySelection(text)</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="attr">Input</span>=text/plain</span><br><span class="line"><span class="attr">InMenu</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">HideWindow</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Icon</span>=\xf0ea</span><br><span class="line"><span class="attr">Shortcut</span>=ctrl+shift+c</span><br></pre></td></tr></table></figure><p>‍</p><h3 id="去除换行"><a class="markdownIt-Anchor" href="#去除换行"></a> 去除换行</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x53bb\x9664\x6362\x884c</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    copyq print %1 |python -c &#x27; </span></span><br><span class="line"><span class="string">    import sys </span></span><br><span class="line"><span class="string">    text = sys.stdin.read()</span></span><br><span class="line"><span class="string">    trimmed_lines = [line.strip() for line in text.splitlines()]</span></span><br><span class="line"><span class="string">    single_line = \&quot; \&quot;.join(trimmed_lines)</span></span><br><span class="line"><span class="string">    print(single_line ,end=\&quot;\&quot;)&#x27;|copyq: </span></span><br><span class="line"><span class="string">    add(input())&quot;</span></span><br><span class="line"><span class="attr">InMenu</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="保存复制时间"><a class="markdownIt-Anchor" href="#保存复制时间"></a> 保存复制时间</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x4fdd\x5b58\x590d\x5236\x65f6\x95f4</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    copyq:</span></span><br><span class="line"><span class="string">    var time = dateString(&#x27;yyyy-MM-dd hh:mm:ss&#x27;)</span></span><br><span class="line"><span class="string">    var tagsMime = &#x27;application/x-copyq-tags&#x27;</span></span><br><span class="line"><span class="string">    var timeMime = &#x27;application/x-copyq-user-item-time&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    setData(timeMime, time)</span></span><br><span class="line"><span class="string">    setData(tagsMime, time)&quot;</span></span><br><span class="line"><span class="attr">Automatic</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Icon</span>=\xf017</span><br></pre></td></tr></table></figure><h3 id="筛选图片-文件-url-等"><a class="markdownIt-Anchor" href="#筛选图片-文件-url-等"></a> 筛选图片、文件、URL 等</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x7b5b\x9009</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    copyq:</span></span><br><span class="line"><span class="string">    var image = &#123;</span></span><br><span class="line"><span class="string">        [mimeText]: &#x27;\x56fe\x7247 ---------------- I&#x27;,</span></span><br><span class="line"><span class="string">        [mimeIcon]: &#x27;\xf302&#x27;,</span></span><br><span class="line"><span class="string">        filter: &#x27;(^image/.*)|(?=^file\\:.*\\.(png|jpe?g|bmp|svg|gif)$)&#x27;,</span></span><br><span class="line"><span class="string">        shortcut: &#x27;i&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var file = &#123;</span></span><br><span class="line"><span class="string">        [mimeText]: &#x27;\x6587\x4ef6  ---------------- F&#x27;,</span></span><br><span class="line"><span class="string">        [mimeIcon]: &#x27;\xf15b&#x27;,</span></span><br><span class="line"><span class="string">        filter: &#x27;(?=^file://)&#x27;,</span></span><br><span class="line"><span class="string">        shortcut: &#x27;f&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var url = &#123;</span></span><br><span class="line"><span class="string">        [mimeText]: &#x27;URL ---------------- U&#x27;,</span></span><br><span class="line"><span class="string">        [mimeIcon]: &#x27;\xf0c1&#x27;,</span></span><br><span class="line"><span class="string">        filter: &#x27;^(?=(https?|ftps?|smb|mailto)://)&#x27;,</span></span><br><span class="line"><span class="string">        shortcut: &#x27;u&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var html = &#123;</span></span><br><span class="line"><span class="string">        [mimeText]: &#x27;HTML&#x27;,</span></span><br><span class="line"><span class="string">        [mimeIcon]: &#x27;\xf121&#x27;,</span></span><br><span class="line"><span class="string">        filter: &#x27;^text/html$&#x27;,</span></span><br><span class="line"><span class="string">        shortcut: &#x27;h&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var PhoneMail = &#123;</span></span><br><span class="line"><span class="string">        [mimeText]: &#x27;\x624b\x673a\x53f7/\x90ae\x7bb1&#x27;,</span></span><br><span class="line"><span class="string">        [mimeIcon]: &#x27;\xe527&#x27;,</span></span><br><span class="line"><span class="string">        filter: &#x27;(^0&#123;0,1&#125;(13[0-9]|15[7-9]|153|156|18[7-9])[0-9]&#123;8&#125;$)|(^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]&#123;2,3&#125;$)&#x27;,</span></span><br><span class="line"><span class="string">        shortcut: &#x27;p&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var filters = [image, file, url, html, PhoneMail]</span></span><br><span class="line"><span class="string">    var selectedFilter = &#x27;&#x27;</span></span><br><span class="line"><span class="string">    var shortcut = str(data(mimeShortcut))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (shortcut) &#123;</span></span><br><span class="line"><span class="string">        for (let f in filters) &#123;</span></span><br><span class="line"><span class="string">            if (filters[f].shortcut === shortcut) &#123;</span></span><br><span class="line"><span class="string">                selectedFilter = filters[f].filter</span></span><br><span class="line"><span class="string">                filter_x(selectedFilter)</span></span><br><span class="line"><span class="string">                abort()</span></span><br><span class="line"><span class="string">           &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var selectedIndex = menuItems(filters)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (selectedIndex != -1) &#123;</span></span><br><span class="line"><span class="string">        selectedFilter = filters[selectedIndex].filter</span></span><br><span class="line"><span class="string">        filter_x(selectedFilter)</span></span><br><span class="line"><span class="string">    &#125; else &#123;</span></span><br><span class="line"><span class="string">        filter(&#x27;&#x27;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function filter_x(filter_) &#123;</span></span><br><span class="line"><span class="string">        if (filter() == filter_)</span></span><br><span class="line"><span class="string">            filter(&#x27;&#x27;)</span></span><br><span class="line"><span class="string">        else</span></span><br><span class="line"><span class="string">            filter(&#x27;&#x27;) &amp; filter(filter_)</span></span><br><span class="line"><span class="string">    &#125;&quot;</span></span><br><span class="line"><span class="attr">InMenu</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Icon</span>=\xf0b0</span><br><span class="line"><span class="attr">Shortcut</span>=shift+f, f, i, u</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162004451.webp"></div></div><h3 id="支持复制文件"><a class="markdownIt-Anchor" href="#支持复制文件"></a> 支持复制文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x590d\x5236/\x7c98\x8d34\x6587\x4ef6\x652f\x6301</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    // \x4e0d\x652f\x6301\x526a\x5207\x64cd\x4f5c</span></span><br><span class="line"><span class="string">    var originalFunction = global.clipboardFormatsToSave</span></span><br><span class="line"><span class="string">    global.clipboardFormatsToSave = function() &#123;</span></span><br><span class="line"><span class="string">        return originalFunction().concat([</span></span><br><span class="line"><span class="string">            mimeUriList,</span></span><br><span class="line"><span class="string">            &#x27;x-special/gnome-copied-files&#x27;,</span></span><br><span class="line"><span class="string">            &#x27;application/x-kde-cutselection&#x27;,</span></span><br><span class="line"><span class="string">        ])</span></span><br><span class="line"><span class="string">    &#125;&quot;</span></span><br><span class="line"><span class="attr">IsScript</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Icon</span>=\xf0c1</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312162002693.webp"></div></div><p>‍</p><h3 id="支持预览图片文件"><a class="markdownIt-Anchor" href="#支持预览图片文件"></a> 支持预览图片文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Command]</span></span><br><span class="line"><span class="attr">Name</span>=\x9884\x89c8\x56fe\x7247\x6587\x4ef6</span><br><span class="line"><span class="attr">Command</span>=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    copyq:</span></span><br><span class="line"><span class="string">    var suffixToMime = &#123;</span></span><br><span class="line"><span class="string">        &#x27;png&#x27;: &#x27;image/png&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;jpg&#x27;: &#x27;image/jpeg&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;jpeg&#x27;: &#x27;image/jpeg&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;bmp&#x27;: &#x27;image/bmp&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;gif&#x27;: &#x27;image/gif&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;svg&#x27;: &#x27;image/svg+xml&#x27;,</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function tryShowImage(mime) &#123;</span></span><br><span class="line"><span class="string">        var path = str(data(mime))</span></span><br><span class="line"><span class="string">        path = path.replace(/^file:\\/+(.*)/, &#x27;$1&#x27;)</span></span><br><span class="line"><span class="string">        if (!path) </span></span><br><span class="line"><span class="string">            return false</span></span><br><span class="line"><span class="string">        var i = path.lastIndexOf(&#x27;.&#x27;)</span></span><br><span class="line"><span class="string">        if (i == -1)</span></span><br><span class="line"><span class="string">            return false</span></span><br><span class="line"><span class="string">        var suffix = path.substring(i + 1)</span></span><br><span class="line"><span class="string">        var imageMime = suffixToMime[suffix]</span></span><br><span class="line"><span class="string">        if (imageMime === undefined)</span></span><br><span class="line"><span class="string">            return false</span></span><br><span class="line"><span class="string">        var f = new File(path)</span></span><br><span class="line"><span class="string">        if (!f.openReadOnly())</span></span><br><span class="line"><span class="string">            return false</span></span><br><span class="line"><span class="string">        var imageData = f.readAll()</span></span><br><span class="line"><span class="string">        f.close()</span></span><br><span class="line"><span class="string">        if (imageData.size() === 0)</span></span><br><span class="line"><span class="string">            return false</span></span><br><span class="line"><span class="string">        setData(mimeItemNotes, path)</span></span><br><span class="line"><span class="string">        setData(imageMime, imageData)</span></span><br><span class="line"><span class="string">        return true</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (!hasImage()) &#123;</span></span><br><span class="line"><span class="string">        tryShowImage(mimeText)</span></span><br><span class="line"><span class="string">        || tryShowImage(mimeUriList)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function hasImage() &#123;</span></span><br><span class="line"><span class="string">        var formats = dataFormats()</span></span><br><span class="line"><span class="string">        for (var i in formats) &#123;</span></span><br><span class="line"><span class="string">            if (formats[i].match(/^image\\//)) &#123;</span></span><br><span class="line"><span class="string">                return true</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        return false</span></span><br><span class="line"><span class="string">    &#125;&quot;</span></span><br><span class="line"><span class="attr">Display</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Icon</span>=\xf1c5</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312161953411.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> CopyQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全网找不到满意的 Markdown 转 Docx 模板，那就自己动手吧</title>
      <link href="//post/i-ca-n-t-find-a-satisfactory-word-template-on-the-entire-network-so-i-made-one-myself-nano3.html"/>
      <url>//post/i-ca-n-t-find-a-satisfactory-word-template-on-the-entire-network-so-i-made-one-myself-nano3.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>大多数 Markdown 笔记应用程序使用 Pandoc 将笔记转换为 Word 文档，例如我主要使用的思源笔记。然而，Pandoc 默认导出的 Word 文档样式往往不美观，不符合中文排版习惯。</p><p>幸运的是，pandoc 可以自定义 Word 模板，用于导出时的自动格式化以美化文档，但是很奇怪的是，全网很少有人分享自己是如何具体制作模板的，就算提到也只是泛泛而谈。我自己在制作模板中遇到很多问题，比如怎么设置表格样式、怎么设置列表样式。2023 年 12 月 15 日，我终于突然解决了设置模板的有序列表和无序列表样式问题，使得自己的模板很大程度可用了，所以分享下目前在用的 word 模板，也当做一个抛砖引用，希望有更多人能分享自己的模板！😁</p></blockquote><h2 id="样式预览"><a class="markdownIt-Anchor" href="#样式预览"></a> 样式预览</h2><p>pandoc 不设置模板导出 docx 的样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312151118881.png"></div></div><p>设置本模板导出 docx 的样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312151117278.png"></div></div><h2 id="模板分享"><a class="markdownIt-Anchor" href="#模板分享"></a> 模板分享</h2><p>有两个模板，一个标题自动编号，一个不自动编号，按需选用。</p><ul><li>Github：<a href="https://github.com/Achuan-2/pandoc_word_template">Achuan-2/pandoc_word_template </a></li><li>蓝奏云：<a href="https://achuan.lanzoul.com/b0f5y8sja">https://achuan.lanzoul.com/b0f5y8sja</a> （密码:a8om）</li></ul><p>ps：如何从零创建模板我之前写过博客，具体见<a href="https://zhuanlan.zhihu.com/p/581000852">设置 word 模板，Markdown 也能自动转换为美观规范的 Word 文档 - 知乎 </a>。喜欢折腾的同学可以看看，不过还是建议基于此模板修改，因为默认列表样式你可能改不了（是我无意中搓出来的）。</p><h2 id="如何使用此模板"><a class="markdownIt-Anchor" href="#如何使用此模板"></a> 如何使用此模板</h2><p>以思源笔记为例，在【设置】-【导出】-【导出 Word .docx模板路径】设置模板文件地址即可。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312151143093.png"></div></div><p>其他笔记软件请自行探索，pandoc是通过 <code>--reference-doc </code>参数设置模板路径的，可以用命令行调用下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc --reference-doc template.docx -s input.md  -o output.docx</span><br></pre></td></tr></table></figure><h2 id="如何修改此模板"><a class="markdownIt-Anchor" href="#如何修改此模板"></a> 如何修改此模板</h2><p>注意，要修改模板，需要更改每个类型对应的 Word 的样式，而不是只是自己改改样式就能 work 的。</p><h3 id="一般样式"><a class="markdownIt-Anchor" href="#一般样式"></a> 一般样式</h3><p>一般样式，只需要打开 word 的样式面板，鼠标点击改行，自动显示对应的样式，然后点击【修改】根据自己的需求修改样式就可以了</p><p>一般样式如下：</p><table><thead><tr><th style="text-align:center">样式名</th><th style="text-align:center">描述</th><th style="text-align:center">本模板样式</th></tr></thead><tbody><tr><td style="text-align:center">Normal（正文)</td><td style="text-align:center">word 的基础样式，还会应用于列表项和列表子项</td><td style="text-align:center">字号小四，中文字体为宋体，英文 Times New Roman<br>1.5 倍行距</td></tr><tr><td style="text-align:center">First Paragraph</td><td style="text-align:center">段落首段</td><td style="text-align:center">首行缩进，<br>字号小四，中文字体为宋体，英文 Times New Roman<br>1.5 倍行距，段前 9 磅<br></td></tr><tr><td style="text-align:center">Body Text（正文文本）</td><td style="text-align:center">在正文段落中应用（除段落首段）</td><td style="text-align:center">首行缩进，<br>字号小四，中文字体为宋体，英文 Times New Roman<br>1.5 倍行距，段前 9 磅<br></td></tr><tr><td style="text-align:center">Compact</td><td style="text-align:center">表格单元格</td><td style="text-align:center">字号 10，中文字体为宋体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Heading 1（标题 1）</td><td style="text-align:center">一级标题</td><td style="text-align:center">字号小二，加粗，中文字体为黑体，英文 Times New Roman，<br>段前 24 磅，段后 24 磅<br></td></tr><tr><td style="text-align:center">Heading 2（标题 2）</td><td style="text-align:center">二级标题</td><td style="text-align:center">字号三号，加粗，中文字体为黑体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Heading 3（标题 3）</td><td style="text-align:center">三级标题</td><td style="text-align:center">字号 13，加粗，中文字体为黑体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Heading 4（标题 4）</td><td style="text-align:center">四级标题</td><td style="text-align:center">字号小四，中文字体为黑体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Heading 5（标题 5）</td><td style="text-align:center">五级标题</td><td style="text-align:center">字号小四，中文字体为黑体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Heading 6（标题 6）</td><td style="text-align:center">六级标题</td><td style="text-align:center">字号小四，中文字体为黑体，英文 Times New Roman</td></tr><tr><td style="text-align:center">Block Text（文本块）</td><td style="text-align:center">引述块样式</td><td style="text-align:center">四周添加 1 磅边框，左侧设置为 6 磅粗边框</td></tr><tr><td style="text-align:center">Source Code</td><td style="text-align:center">行内代码和代码块样式</td><td style="text-align:center">底纹设置为灰色，四周添加 1 磅边框</td></tr></tbody></table><p>修改表格样式和列表样式比较特殊</p><h3 id="表格样式"><a class="markdownIt-Anchor" href="#表格样式"></a> 表格样式</h3><p>修改表格需要点击表格后，在【表设计】下拉，点击【修改表格样式】，进行修改</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312151117256.png"></div></div><h3 id="列表样式"><a class="markdownIt-Anchor" href="#列表样式"></a> 列表样式</h3><h4 id="修改列表层级样式"><a class="markdownIt-Anchor" href="#修改列表层级样式"></a> 修改列表层级样式</h4><blockquote><p>所谓的层级样式是无序列表不同层级是圆点还是方块，有序列表则是不同层级的编号格式。</p></blockquote><p>在下图 ① 的位置点击，可以看到列表样式有两个样式，分别对应无序列表和有序列表样式，右键修改。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312151114293.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312150020186.png"></div></div><h4 id="修改列表缩进"><a class="markdownIt-Anchor" href="#修改列表缩进"></a> 修改列表缩进</h4><p>鼠标点击列表所在行，右键点击【调整列表缩进】，选择【设置所有级别】</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202312150014510.png"></div></div><p>‍</p><h2 id="模板已知问题"><a class="markdownIt-Anchor" href="#模板已知问题"></a> 模板已知问题</h2><ol><li><p>图片无法自动居中，另外注意图片添加题注要居中的话，必须先让图片居中，再添加题注。</p></li><li><p>模板可以做到表格整体居中，但是表格单元格自动居中需要思源笔记文档中的表格本身先设置居中，否则不居中。这是因为 markdown 表格默认是居左的，markdown 的居中语法如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| header 1 | header 2 |</span><br><span class="line">| :------: | :------: |</span><br><span class="line">|  cell 1  |  cell 2  |</span><br><span class="line">|  cell 3  |  cell 4  |</span><br><span class="line">|  cell 5  |  cell 6  |</span><br></pre></td></tr></table></figure></li></ol><h2 id="我的探索过程记录"><a class="markdownIt-Anchor" href="#我的探索过程记录"></a> 我的探索过程记录</h2><ol><li>有序列表和无序列表可以基于模板改动项目符号，老实说这是我误打误撞搞出来的 😂……目前自己都没能复现，所以大家不想折腾，还是基于本模板改动，且用且珍惜。</li><li>有序列表和无序列表的行间距调整：每个列表项的间距与【正文】样式的行间距有关，此外列表项的子文本段落也是正文样式而不是【正文文本样式】（一般段落其实是【First Paragraph】、【正文文本】样式），所以需要调整列表行间距而改动【正文】样式是不太影响正文的（不过需要注意【First Paragraph】、【正文文本】样式都是基于【正文】样式改动的。为了让列表更美观，我把【正文】样式设置为 1.5 倍行距，不设置段前和段后距离，【First Paragraph】、【正文文本】会设置段前和段后距离</li></ol>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 思源笔记 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS DOM 操作</title>
      <link href="//post/js-dom-operation-1rrvs2.html"/>
      <url>//post/js-dom-operation-1rrvs2.html</url>
      
        <content type="html"><![CDATA[<h2 id="获取元素"><a class="markdownIt-Anchor" href="#获取元素"></a> 获取元素</h2><ul><li><p>get</p><ul><li><p><code>&lt;span style=&quot;font-weight: bold;&quot; data-type=&quot;strong&quot;&gt;getElementById()&lt;/span&gt;</code> ：返回对拥有指定 <span style="font-weight: bold;" data-type="strong">id</span> 的第一个对象的引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myElement&quot;</span>&gt;</span>Hello, World!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myElement&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(element.<span class="property">textContent</span>); <span class="comment">// 输出: Hello, World!</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;span style=&quot;font-weight: bold;&quot; data-type=&quot;strong&quot;&gt;getElementsByName()&lt;/span&gt;</code> ：返回带有指定名称 <span style="font-weight: bold;" data-type="strong">name</span> 的对象的集合。返回的是元素的 <span style="font-weight: bold;" data-type="strong">数组</span> ，而不是一个元素（由于 name 不唯一）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;username&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(elements.<span class="property">length</span>); <span class="comment">// 输出: 2</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong"><code>getElementsByTagName()</code></span> ：返回带有指定<span style="font-weight: bold;" data-type="strong">标签名</span>的对象<span style="font-weight: bold;" data-type="strong">集合</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> paragraphs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(paragraphs.<span class="property">length</span>); <span class="comment">// 输出: 2</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;span style=&quot;font-weight: bold;&quot; data-type=&quot;strong&quot;&gt;getElementsByClassName&lt;/span&gt;</code> ：返回文档中所有指定类名的元素集合</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取单个类</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;example&quot;</span>);</span><br><span class="line"><span class="comment">// 可以获取同时包含 &quot;example&quot; 和 &quot;color&quot; 类名的所有元素，并修改它的颜色:</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;example color&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>query</p><ul><li><p><span style="font-weight: bold;" data-type="strong"><code>querySelector()</code></span>  ：返回文档中匹配指定 <u>CSS 选择器</u>的<span style="font-weight: bold;" data-type="strong">第一个元素</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;p&quot;</span>)      <span class="comment">//获取文档中第一个 &lt;p&gt; 元素：</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#demo&quot;</span>)     <span class="comment">//获取文档中id=&quot;demo&quot;的元素</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.example&quot;</span>);   <span class="comment">//获取文档中第一个 class=&quot;example&quot; 的元素</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;p.example&quot;</span>);    <span class="comment">//获取文档中 class=&quot;example&quot;的第一个 &lt;p&gt; 元素</span></span><br><span class="line">...... </span><br><span class="line"><span class="comment">// 还可以写CSS的并集选择器、复合选择器等等。按照css规范来实现。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong"><code>querySelectorAll()</code></span> ：返回文档中匹配的 <u>CSS 选择器</u>的 <span style="font-weight: bold;" data-type="strong">所有元素节点列表</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> listItems = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(listItems.<span class="property">length</span>); <span class="comment">// 输出: 3</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><blockquote><p>ℹ get 和 query 的区别</p><p>getXXXByXXX 获取的是<span style="font-weight: bold;" class="mark">动态</span>集合，querySelector 获取的是<span style="font-weight: bold;" data-type="strong"><span style="font-weight: bold;" class="mark">静态</span></span>集合。</p><p>这句话是的难点在于对静态和动态的理解，<u><span style="font-weight: bold;" data-type="strong">什么是静态，什么是动态？</span></u></p><p>简单的说就是，<span style="font-weight: bold;" data-type="strong">动态就是</span><span style="font-weight: bold;" data-type="strong"><span style="font-weight: bold;" class="mark">选出的元素会随文档改变</span></span>，静态是<span style="font-weight: bold;" class="mark">取出来之后就和文档的改变无关了</span>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-model</span>=<span class="string">&quot;aa&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> querySelector = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#test&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> getElementById = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(querySelector === getElementById) <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> querySelectorAll = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i &lt; querySelectorAll.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">        querySelector.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(querySelectorAll.<span class="property">length</span>) </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//值为2,动态添加元素并没有使querySelectorAll发生变化</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> getElementsByTagName = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i &lt; <span class="number">3</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">        getElementById.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(getElementsByTagName.<span class="property">length</span>) </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//值为4+3=7,每次动态添加元素都使getElementsByTagName发生了变化</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>⚠️ 备注：这两种方法都不能查找伪类元素。</p></blockquote><h2 id="创建-插入-删除元素"><a class="markdownIt-Anchor" href="#创建-插入-删除元素"></a> 创建、插入、删除元素</h2><ol><li><p><span style="font-weight: bold;" data-type="strong">创建新元素</span></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newElement = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tagName&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong">插入元素到指定位置</span></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parentElement.<span class="title function_">appendChild</span>(newElement); <span class="comment">// 在子元素末尾插入</span></span><br><span class="line">parentElement.<span class="title function_">insertBefore</span>(newElement, referenceElement); <span class="comment">// 在指定元素之前插入</span></span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong">删除元素</span></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parentElement.<span class="title function_">removeChild</span>(childElement);</span><br></pre></td></tr></table></figure></li></ol><h2 id="获取元素自定义属性和文本内容"><a class="markdownIt-Anchor" href="#获取元素自定义属性和文本内容"></a> 获取元素自定义属性和文本内容</h2><ol><li><p><span style="font-weight: bold;" data-type="strong">获取/设置元素的属性值</span></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认属性的获取</span></span><br><span class="line">element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;class&#x27;</span>);</span><br><span class="line">element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="comment">// 自定义属性的设置和获取</span></span><br><span class="line">element.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-custom&#x27;</span>, <span class="string">&#x27;new value&#x27;</span>);</span><br><span class="line">element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-custom&#x27;</span>);</span><br></pre></td></tr></table></figure><p>自定义属性还可以通过<code>element.dataset['custom']</code>获取</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">dataset</span>[<span class="string">&#x27;custom&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong">获取/设置元素的文本内容</span></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> textContent = element.<span class="property">textContent</span>;</span><br><span class="line">element.<span class="property">textContent</span> = <span class="string">&quot;new text&quot;</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="操作元素样式"><a class="markdownIt-Anchor" href="#操作元素样式"></a> 操作元素样式</h2><ul><li><p><span style="font-weight: bold;" data-type="strong">操作class</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加 class</span></span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;class&quot;</span>)</span><br><span class="line"><span class="comment">// 移除 class</span></span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;class&quot;</span>)</span><br><span class="line"><span class="comment">// 切换 class，有则移除，无则添加</span></span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&quot;class&quot;</span>)</span><br><span class="line"><span class="comment">//检测是否存在 class</span></span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&quot;class&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p><span style="font-weight: bold;" data-type="strong">直接操作style</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myDiv&#x27;</span>);</span><br><span class="line"><span class="comment">// 直接设置样式</span></span><br><span class="line">element.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">element.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;yellow&#x27;</span>;</span><br><span class="line">element.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;20px&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>协程 Coroutine 是什么？Python 的async用法</title>
      <link href="//post/what-is-corporate-coroutine-python-s-async-usage-zp0b11.html"/>
      <url>//post/what-is-corporate-coroutine-python-s-async-usage-zp0b11.html</url>
      
        <content type="html"><![CDATA[<ul><li><p>协程是什么</p><ul><li>协程的作用是在执行函数A时可以随时中断去执行函数B，然后中断函数B继续执行函数A（可以自由切换）。 但这一过程并不是函数调用，这一整个过程看似像多线程，然而协程只有一个线程执行。协程就是一个人干多个活，如果一个任务进行过程中有比较多的等待时间，并不需要自己参与，就可以利用这段时间去干别的事情。</li></ul></li><li><p>协程的主要应用场景</p><ul><li>协程很适合处理((20231124114842-nvxmq57 “IO密集型程序”))的效率问题，Tornado web 框架、文件下载、网络爬虫等应用。协程能够在 IO 等待时间就去切换执行其他任务，当 IO 操作结束后再自动回调，那么就会大大节省资源并提供性能减少了不必要的等待时间，提高了执行速度。</li><li>但需要注意的是<span style="font-weight: bold;" data-type="strong">协程的本质还是个单线程，它不能同时将单个CPU的多个核用上，因此对于CPU密集型程序协程需要和多进程配合，光靠协程没有太大用</span>。比如，要进行大量的计算、逻辑判断，消耗 CPU 资源，比如计算圆周率、对视频进行高清解码等等。</li></ul></li><li><p>协程的例子</p><ul><li><blockquote><p>“假设有1个洗衣房（进程），里面有10台洗衣机（任务），有一个洗衣工（线程）在负责这10台洗衣机。那么洗衣房就相当于1个进程，洗衣工就相当1个线程。如果有10个洗衣工，就相当于10个线程，1个进程是可以开多线程的。这就是多线程！<br><span style="font-weight: bold;" data-type="strong">那么协程呢？</span>  先不急。大家都知道，洗衣机洗衣服是需要等待时间的，如果10个洗衣工，1人负责1台洗衣机，这样效率肯定会提高，但是不觉得浪费资源吗？明明1 个人能做的事，却要10个人来做。只是把衣服放进去，打开开关，就没事做了，等衣服洗好再拿出来就可以了。<span style="font-weight: bold;" data-type="strong">就算很多人来洗衣服，1个人也足以应付了</span>，开好第一台洗衣机，在等待的时候去开第二台洗衣机，再开第三台，……直到有衣服洗好了，就回来把衣服取出来， 接着再取另一台的（哪台洗好先就取哪台，所以协程是无序的）。这就是计算机的协程！洗衣机就是执行的方法。”</p></blockquote></li><li><blockquote><p>小明同学的妈妈给他早上安排了三件事：</p><ol><li>洗衣机洗衣服需要花 15 分钟</li><li>电饭煲做饭需要花 20 分钟</li><li>做作业需要花 25 分钟</li></ol><p>那么请问：小明同学早上完成以上三件事需要花多久？？</p><p>——可以接近25分钟完成，因为洗衣服和煮饭只需要按按钮就行了，之后专心去做作业就可以</p></blockquote></li></ul></li><li><p>IO 密集型的操作是什么</p><ul><li><p>I/O是什么：IO是指Input/Output，即输入和输出。以内存为中心：</p><ul><li>Input指从外部读入数据到内存，例如，把文件从磁盘读取到内存，从网络读取数据到内存等等。</li><li>Output指把数据从内存输出到外部，例如，把数据从内存写入到文件，把数据从内存输出到网络等等。</li></ul></li><li><p>计算密集型和IO 密集型</p><ul><li>计算密集型的操作：计算密集型任务的特点是要进行大量的计算、逻辑判断，消耗 CPU 资源，比如计算圆周率、对视频进行高清解码等等。</li><li>IO 密集型的操作：涉及到<span style="font-weight: bold;" data-type="strong">网络、磁盘 IO </span> 的任务都是 IO 密集型任务，这类任务的特点是 CPU 消耗很少，任务的大部分时间都在等待 IO 操作完成（因为 IO 的速度远远低于 CPU 和内存的速度）</li></ul></li></ul></li><li><p>对协程的疑惑：举的例子，洗衣机、电饭煲都是自己能做事的机器，人只是去启动他，当然可以一个人启动好多台机器，等待结果，但是对于计算机而言，像洗衣这种事情，怎么做到一个线程你后台洗衣服，我前台做煲饭的。</p><ul><li><p>我大概懂了，计算机这种情况就类似于IO密集型程序，CPU消耗很少，主要时间在等IO完成，比如</p><ul><li>等待键盘输入</li><li>控制打印机打印文件</li><li><span style="font-weight: bold;" data-type="strong">从硬盘读取文件、写入文件</span></li><li><span style="font-weight: bold;" data-type="strong">向网络发送请求，查询数据库、等待下载完成</span></li></ul></li></ul></li><li><p>python 协程代码示例</p><ul><li><p>同步编程 vs 异步编程</p><ul><li><p>同步编程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">washing1</span>():</span><br><span class="line">    time.sleep(<span class="number">3</span>)  <span class="comment"># 第一台洗衣机,</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer1 finished&#x27;</span>)  <span class="comment"># 洗完了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">washing2</span>():</span><br><span class="line">    time.sleep(<span class="number">8</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer2 finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">washing3</span>():</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer3 finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    washing1()</span><br><span class="line">    washing2()</span><br><span class="line">    washing3()</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗时：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(end_time-start_time))</span><br></pre></td></tr></table></figure><p>washer1 finished<br>washer2 finished<br>washer3 finished<br>总共耗时：16.00322961807251</p></li><li><p>异步编程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">washing1</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)  <span class="comment"># 第一台洗衣机,</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer1 finished&#x27;</span>)  <span class="comment"># 洗完了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">washing2</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">8</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer2 finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">washing3</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">5</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;washer3 finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;start main:&#x27;</span>)</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    <span class="comment"># step1 创建一个事件循环, 将异步函数（协程）加入事件队列</span></span><br><span class="line">    task_list = [</span><br><span class="line">        washing1(),</span><br><span class="line">        washing2(),</span><br><span class="line">        washing3()</span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># step2 执行事件队列 直到最晚的一个事件被处理完毕后结束</span></span><br><span class="line">    asyncio.run(asyncio.wait(task_list) )</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----------end main----------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗时:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(end_time-start_time))</span><br></pre></td></tr></table></figure><p>start main:<br>washer1 finished<br>washer3 finished<br>washer2 finished<br>-----------end main----------<br>总共耗时:8.002010822296143</p></li></ul></li><li><p>用代码实现连接并查询数据库的同时，下载一个 APK 文件到本地。(<a href="https://xie.infoq.cn/article/d92c1068b9e50b55cced54708">Ref</a>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiomysql</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> aiofiles <span class="keyword">as</span> aiofiles</span><br><span class="line"><span class="keyword">from</span> aiohttp <span class="keyword">import</span> ClientSession</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_app</span>():</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;http://www.123.apk&quot;</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="comment"># 网络IO请求，获取响应</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url)<span class="keyword">as</span> res:</span><br><span class="line">            <span class="keyword">if</span> res.status == <span class="number">200</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;下载成功&quot;</span>, res)</span><br><span class="line">                <span class="comment"># 磁盘IO请求，读取响应数据</span></span><br><span class="line">                apk = <span class="keyword">await</span> res.content.read()</span><br><span class="line">                <span class="keyword">async</span>  <span class="keyword">with</span>  aiofiles.<span class="built_in">open</span>(<span class="string">&quot;demo2.apk&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="comment"># 磁盘IO请求，数据写入本地磁盘</span></span><br><span class="line">                    <span class="keyword">await</span> f.write(apk)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;下载失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">excute_sql</span>(<span class="params">sql</span>):</span><br><span class="line">    <span class="comment"># 网络IO操作：连接MySQL</span></span><br><span class="line">    conn = <span class="keyword">await</span> aiomysql.connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123&#x27;</span>, db=<span class="string">&#x27;mysql&#x27;</span>, )</span><br><span class="line">    <span class="comment"># 网络IO操作：创建CURSOR</span></span><br><span class="line">    cur = <span class="keyword">await</span> conn.cursor()</span><br><span class="line">    <span class="comment"># 网络IO操作：执行SQL</span></span><br><span class="line">    <span class="keyword">await</span> cur.execute(sql)</span><br><span class="line">    <span class="comment"># 网络IO操作：获取SQL结果</span></span><br><span class="line">    result = <span class="keyword">await</span> cur.fetchall()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 网络IO操作：关闭链接</span></span><br><span class="line">    <span class="keyword">await</span> cur.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">task_list = [get_app(), execute_sql(sql=<span class="string">&quot;SELECT Host,User FROM user&quot;</span>)]</span><br><span class="line">asyncio.run(asyncio.wait(task_list))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码逻辑分析：</p><ul><li>【step1】<code>asyncio.run()</code>创建了事件循环。<code>wait()</code>方法将 task 任务列表加入到当前的事件循环中； <em>（注意：必须先创建事件循环，后加入任务列表，否则会报错）</em></li><li>【step2】事件循环监听事件状态，开始执行代码，先执行列表中的<code>get_app()</code>方法，当代码执行到<code>async with session.get(url)as res:</code>时，<span style="font-weight: bold;" data-type="strong">遇到 await 关键字表示有 IO 耗时操作，线程会将该任务挂起在后台执行</span>，并<span style="font-weight: bold;" data-type="strong">切换到另外一个异步函数</span><code>excute_sql()</code>；</li><li>【step3】当代码执行到<code>excute_sql()</code>的第一个 IO 耗时操作后，线程会重复先前的操作，将该任务挂起，去执行其他可执行代码。假如此时事件循环监听到<code>get_app()</code>中的第一 IO 耗时操作已经执行完成，那么线程会切换到该方法第一个 IO 操作后的代码，并按顺序执行直到遇上下一个 await 装饰的 IO 操作；假如事件循环监听到<code>excute_sql()</code>中的第一个 IO 操作先于<code>get_app()</code>的第一个 IO 操作完成，那么线程会继续执行<code>excute_sql</code>的后续代码；</li><li>【step4】线程会重复进行上述第 3 点中的步骤，直到代码全部执行完成，事件循环也会随之停止。</li></ul></li></ul></li></ul><p>‍</p><p>‍</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 后台异步执行函数</title>
      <link href="//post/matlab-background-asynchronous-execution-function-z1zmis9.html"/>
      <url>//post/matlab-background-asynchronous-execution-function-z1zmis9.html</url>
      
        <content type="html"><![CDATA[<p>当在 MATLAB 中运行普通代码时，必须等待该代码完成运行，然后才能运行其他代码。</p><p>其实Matlab 目前的多线程编程已经优化的挺好的，看到有些文章使用 Timer 计时器函数曲线救国，以实现多任务后台同时运行，然而 Timer 只是单线程定时执行函数，只是可以指定什么时候执行什么任务，当一个任务运行的时候依然是串行方式，并不是真正的异步，是依然会堵塞主线程的</p><p>现在2021b起就自带backgroundPool后台池，自动扩展线程，结合parfeval可以在后台异步执行函数，不干扰主线程。网上这方面资料貌似还比较少，但是真的好用。</p><blockquote><p>Matlab 文档：<a href="https://ww2.mathworks.cn/help/matlab/background-processing.html?s_tid=CRUX_lftnav">后台处理 - MATLAB &amp; Simulink - MathWorks 中国</a></p></blockquote><h2 id="parfeval-异步后台运行函数"><a class="markdownIt-Anchor" href="#parfeval-异步后台运行函数"></a> parfeval 异步后台运行函数</h2><ul><li><p>文档：<a href="https://ww2.mathworks.cn/help/matlab/ref/parfeval.html">parfeval</a></p><p>F = parfeval(backgroundPool,fcn,n,X1,…,Xm)</p><p>F = parfeval(fcn,n,X1,…,Xm)</p></li><li><p><code>parfeval</code> 和 <code>parfevalOnAll</code> 的区别</p><ul><li><code>parfeval</code> 请求在并行池中的工作线程上异步执行。您可以使用 <code>cancel</code> 取消执行。它只是把它发给任何一个worker。</li><li>使用 <code>parfevalOnAll</code> 在所有工作线程上执行一个函数，使用场景有限，一般用于删除、关闭所有worker的指定任务。</li></ul></li><li><p><code>F = parfeval(fcn,n,X1,...,Xm)</code>  和 <code>F = parfeval(backgroundPool,fcn,n,X1,...,Xm)</code>，不加backgroundPool和加了有什么区别</p><p>这语法是Matlab 2021b加的，不加pool就是自动开启pool，如果没有Parallel Computing Toolbox 就是按正常串行运行函数</p><p>Starting in R2021b, you can now run <a href="https://ww2.mathworks.cn/help/parallel-computing/parallel.pool.parfeval.html"><code>parfeval</code></a> in serial with no pool. This behavior allows you to share parallel code that you write with users who do not have Parallel Computing Toolbox.</p><p>When you use the syntax <code>parfeval(fcn,n,X1,...,Xm)</code>, MATLAB tries to use an open parallel pool if you have Parallel Computing Toolbox. If a parallel pool is not open, MATLAB will create one if automatic pool creation is enabled.</p><p>If parallel pool creation is disabled or if you do not have Parallel Computing Toolbox, the function is evaluated in serial. In previous releases, MATLAB threw an error instead.</p></li><li><p>pareval 和 parfor</p><ul><li><p>pareval的主要功能是后台异步运行函数，可以让耗时长的函数在后台慢慢跑；parfor主要是用于前台加快循环运算</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 普通单线程运行</span></span><br><span class="line">n = <span class="number">200</span>;</span><br><span class="line">A = <span class="number">500</span>;</span><br><span class="line">a = <span class="built_in">zeros</span>(n);</span><br><span class="line">tic</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:n</span><br><span class="line">    a(<span class="built_in">i</span>) = <span class="built_in">max</span>(<span class="built_in">abs</span>(eig(<span class="built_in">rand</span>(A))));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">toc <span class="comment">% Elapsed time is 24.068519 seconds.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 并行计算</span></span><br><span class="line">delete(gcp(<span class="string">&#x27;nocreate&#x27;</span>))</span><br><span class="line">parpool(<span class="string">&#x27;Threads&#x27;</span>)</span><br><span class="line">n = <span class="number">200</span>;</span><br><span class="line">A = <span class="number">500</span>;</span><br><span class="line">a = <span class="built_in">zeros</span>(n);</span><br><span class="line">tic</span><br><span class="line"><span class="keyword">parfor</span> <span class="built_in">i</span> = <span class="number">1</span>:n</span><br><span class="line">    a(<span class="built_in">i</span>) = <span class="built_in">max</span>(<span class="built_in">abs</span>(eig(<span class="built_in">rand</span>(A))));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">toc <span class="comment">% Elapsed time is 4.168100 seconds.</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="backgroundpool-后台运行函数支持多线程"><a class="markdownIt-Anchor" href="#backgroundpool-后台运行函数支持多线程"></a> backgroundPool 后台运行函数（支持多线程）</h2><ul><li><p>backgroundPool 是基于线程的吗？能调用几个线程？</p><ul><li><p>backgroundPool就是基于线程运行代码。线程数和计算机最大核心数有关系，如果没有Parallel Computing Toolbox，backgroundPo调用一个线程，如果有Parallel Computing Toolbox，backgroundPool能调用计算机的最大核心数。需要注意的是，后台的一个线程只能同时跑一个任务，任务数大于线程数就会堵塞。.<a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/asynchronous-functions.html#mw_6b0d4b53-ccf6-4df0-a900-96df2f505b14">（Ref）</a></p></li><li><p>获取backgroundPool有多少可用workers</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; backgroundPool().NumWorkers</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>具体测试</p><ul><li><p>正常同步运行代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 同步执行多个任务 </span></span><br><span class="line">tic</span><br><span class="line"><span class="built_in">disp</span>(task(<span class="number">1</span>,<span class="string">&quot;Normal&quot;</span>))</span><br><span class="line"><span class="built_in">disp</span>(task(<span class="number">2</span>,<span class="string">&quot;Normal&quot;</span>))</span><br><span class="line"><span class="built_in">disp</span>(task(<span class="number">3</span>,<span class="string">&quot;Normal&quot;</span>))</span><br><span class="line">toc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">task</span><span class="params">(taskID,poolType)</span></span></span><br><span class="line">    pause(<span class="number">5</span>);</span><br><span class="line">    output = sprintf(<span class="string">&#x27;Task %d is done in %s at %s&#x27;</span>, taskID, poolType,datetime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Task 1 is done in Normal at 2023-11-25 14:12:19<br>Task 2 is done in Normal at 2023-11-25 14:12:24<br>Task 3 is done in Normal at 2023-11-25 14:12:29</p></li><li><p>使用backgroundPool异步运行：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">b(<span class="number">1</span>:<span class="number">3</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line">    b(<span class="built_in">i</span>) = parfeval(backgroundPool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;backgroundPool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行后台计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">afterEach(b, @<span class="built_in">disp</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">task</span><span class="params">(taskID,poolType)</span></span></span><br><span class="line">    pause(<span class="number">5</span>);</span><br><span class="line">    output = sprintf(<span class="string">&#x27;Task %d is done in %s at %s&#x27;</span>, taskID, poolType,datetime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Task 2 is done in backgroundPool at 2023-11-25 14:13:03<br>Task 3 is done in backgroundPool at 2023-11-25 14:13:03<br>Task 1 is done in backgroundPool at 2023-11-25 14:13:03</p></li></ul></li></ul></li><li><p>backgroundPool 能后台保存文件吗？</p><ul><li><p>✅ 后台保存图像</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">img = imread(<span class="string">&#x27;cameraman.tif&#x27;</span>);</span><br><span class="line">f = parfeval(backgroundPool, @imwrite, <span class="number">0</span>, img, <span class="string">&#x27;test_backgroundPool.jpg&#x27;</span>);</span><br><span class="line">afterEach(f,@done,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&quot;Waiting for imwrite&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">done</span><span class="params">(~)</span></span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;done&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>✅ 后台保存表格</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="built_in">zeros</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line">f = parfeval(backgroundPool, @writematrix, <span class="number">0</span>, m, <span class="string">&#x27;test.csv&#x27;</span>);</span><br><span class="line">afterEach(f,@done,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&quot;Waiting for imwrite&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>✅ 后台调用txt</p><ul><li><p>fopen</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="built_in">zeros</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line">f = parfeval(backgroundPool, @writetext, <span class="number">0</span>,<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;Hello Matlab&#x27;</span>);</span><br><span class="line">afterEach(f,@done,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&quot;Waiting for imwrite&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">done</span><span class="params">(~)</span></span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;done&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writetext</span><span class="params">(fullpath,str)</span></span></span><br><span class="line">    fid = fopen(fullpath, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    fprintf(fid, str);</span><br><span class="line">    fclose(fid);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>writelines</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="built_in">zeros</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line">f = parfeval(backgroundPool, @writelines, <span class="number">0</span>, <span class="string">&#x27;Hello Matlab&#x27;</span>,<span class="string">&#x27;./test.txt&#x27;</span>);</span><br><span class="line">afterEach(f,@done,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&quot;Waiting for imwrite&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">done</span><span class="params">(~)</span></span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;done&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>注意：backgroundPool 后台运行的函数如果有disp，并不会显示到主线程</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">b(<span class="number">1</span>:<span class="number">8</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    b(<span class="built_in">i</span>) = parfeval(backgroundPool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;backgroundPool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行后台计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">task</span><span class="params">(taskID,poolType)</span></span></span><br><span class="line">    pause(<span class="number">5</span>);</span><br><span class="line">    fprintf(<span class="string">&#x27;Task %d is done in %s at %s&#x27;</span>, taskID, poolType,datetime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>可以添加<code>afterEach(f, @disp, 0);</code>来显示</p></li><li><p>backgroundPool 是Matlab 2021b才出的功能，backgroundPool的作用是什么，parfeval本身不是支持后台运行任务吗</p><ul><li><p>我的想法</p><ul><li>更轻便：当MATLAB基于进程的并行池第一次启动时，通常需要几秒钟的时间，基于线程的并行池会快些，需要指定线程或进程个数，而backgroundPool会根据需要自行扩展后台线程数，backgroundPool会更轻便。</li><li>基于线程：backgroundPool 基于线程，并不占用基于进程的并行池.</li><li><blockquote><p>疑惑：暂时没觉得parfeval调用基于线程的并行池和调用backgroundPool有什么区别</p></blockquote></li></ul></li><li><p>举例（我的电脑核心数为8）</p><ul><li><p>8个基于进程的并行池和8个后台池都同时执行完成了所有任务</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">delete(gcp(<span class="string">&#x27;nocreate&#x27;</span>))</span><br><span class="line">pool=parpool(<span class="string">&#x27;Processes&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 并行池后台异步执行多个任务</span></span><br><span class="line">f(<span class="number">1</span>:<span class="number">8</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    f(<span class="built_in">i</span>) = parfeval(pool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;parpool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行并行计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">afterEach(f, @<span class="built_in">disp</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b(<span class="number">1</span>:<span class="number">8</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    b(<span class="built_in">i</span>) = parfeval(backgroundPool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;backgroundPool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行后台计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">afterEach(b, @<span class="built_in">disp</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">task</span><span class="params">(taskID,poolType)</span></span></span><br><span class="line">    pause(<span class="number">5</span>);</span><br><span class="line">    output = sprintf(<span class="string">&#x27;Task %d is done in %s at %s&#x27;</span>, taskID, poolType,datetime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Task 4 is done in parpool at 2023-11-25 11:41:46<br>Task 2 is done in parpool at 2023-11-25 11:41:46<br>Task 3 is done in parpool at 2023-11-25 11:41:46<br>Task 5 is done in parpool at 2023-11-25 11:41:46<br>Task 8 is done in parpool at 2023-11-25 11:41:46<br>Task 6 is done in parpool at 2023-11-25 11:41:46<br>Task 1 is done in parpool at 2023-11-25 11:41:46<br>Task 7 is done in parpool at 2023-11-25 11:41:46<br>Task 1 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 7 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 5 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 2 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 6 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 3 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 4 is done in backgroundPool at 2023-11-25 11:41:46<br>Task 8 is done in backgroundPool at 2023-11-25 11:41:46</p></li><li><p>8个基于线程的并行池和8个后台池同时运行，后台池只能抢到一个线程，等到基于线程的并行池的任务全部完成，后台池才能用其他的线程执行任务</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">delete(gcp(<span class="string">&#x27;nocreate&#x27;</span>))</span><br><span class="line">pool=parpool(<span class="string">&#x27;Threads&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 并行池后台异步执行多个任务</span></span><br><span class="line">f(<span class="number">1</span>:<span class="number">8</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    f(<span class="built_in">i</span>) = parfeval(pool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;parpool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行并行计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">afterEach(f, @<span class="built_in">disp</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b(<span class="number">1</span>:<span class="number">8</span>) = parallel.FevalFuture;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    b(<span class="built_in">i</span>) = parfeval(backgroundPool, @task, <span class="number">1</span>, <span class="built_in">i</span>, <span class="string">&#x27;backgroundPool&#x27;</span>); <span class="comment">% 以参数i调用 task 函数并进行后台计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">afterEach(b, @<span class="built_in">disp</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">task</span><span class="params">(taskID,poolType)</span></span></span><br><span class="line">    pause(<span class="number">5</span>);</span><br><span class="line">    output = sprintf(<span class="string">&#x27;Task %d is done in %s at %s&#x27;</span>, taskID, poolType,datetime(<span class="string">&#x27;now&#x27;</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Task 7 is done in parpool at 2023-11-25 11:48:19<br>Task 6 is done in parpool at 2023-11-25 11:48:19<br>Task 3 is done in parpool at 2023-11-25 11:48:19<br>Task 4 is done in parpool at 2023-11-25 11:48:19<br>Task 8 is done in parpool at 2023-11-25 11:48:19<br>Task 2 is done in parpool at 2023-11-25 11:48:19<br>Task 5 is done in parpool at 2023-11-25 11:48:19<br>Task 1 is done in backgroundPool at 2023-11-25 11:48:19<br>Task 1 is done in parpool at 2023-11-25 11:48:19<br>Task 2 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 3 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 7 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 8 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 5 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 4 is done in backgroundPool at 2023-11-25 11:48:24<br>Task 6 is done in backgroundPool at 2023-11-25 11:48:24</p></li></ul></li></ul></li></ul><h2 id="获取后台运行结果"><a class="markdownIt-Anchor" href="#获取后台运行结果"></a> 获取后台运行结果</h2><p><code>fetchOutputs</code>、<code>fetchNext</code>手动获取后台结果，<code>afterEach</code>、<code>afterAll</code>后台运行完成自动执行函数获取结果</p><ul><li><p>手动获取后台结果</p><ul><li><p>fetchOutputs：运行完之后获取结果，虽然能后台运行，但是如果没处理完，你直接fetchOutputs，就会卡住</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">f = parfeval(backgroundPool,@test_pause,<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fetchOutputs(f)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span> = <span class="title">test_pause</span><span class="params">(t)</span></span></span><br><span class="line">    pause(t);</span><br><span class="line">    a =<span class="number">5</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://ww2.mathworks.cn/help/matlab/ref/parallel.fevalfuture.fetchnext.html">fetchNext</a>：Retrieve next unread outputs from <code>Future</code> array</p><ul><li><p>多次运行一个函数，直到找到令人满意的结果。在这种情况下，当结果大于0.95时，取消 F。（好像和while没差，可能就是在处理的过程中还能后台产生值，更快一些）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> idx = N:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">    F(idx) = parfeval(backgroundPool,@<span class="built_in">rand</span>,<span class="number">1</span>); <span class="comment">% Create a random scalar</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">result = NaN; <span class="comment">% No result yet</span></span><br><span class="line"><span class="keyword">for</span> idx = <span class="number">1</span>:N</span><br><span class="line">    [~, thisResult] = fetchNext(F);</span><br><span class="line">    <span class="keyword">if</span> thisResult &gt; <span class="number">0.95</span></span><br><span class="line">        result = thisResult;</span><br><span class="line">        <span class="comment">% Have all the results needed, so break</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% With required result, cancel any remaining futures</span></span><br><span class="line">cancel(F)</span><br><span class="line">result</span><br></pre></td></tr></table></figure></li><li><p>请求几个任务，并在等待完成后更新进度条。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> idx = N:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">    <span class="comment">% Compute the rank of N magic squares</span></span><br><span class="line">    F(idx) = parfeval(backgroundPool,@rank,<span class="number">1</span>,<span class="built_in">magic</span>(idx));</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"><span class="comment">% Build a waitbar to track progress</span></span><br><span class="line">h = waitbar(<span class="number">0</span>,<span class="string">&#x27;Waiting for FevalFutures to complete...&#x27;</span>);</span><br><span class="line">results = <span class="built_in">zeros</span>(<span class="number">1</span>,N);</span><br><span class="line"><span class="keyword">for</span> idx = <span class="number">1</span>:N</span><br><span class="line">    [completedIdx,thisResult] = fetchNext(F);</span><br><span class="line">    <span class="comment">% Store the result</span></span><br><span class="line">    results(completedIdx) = thisResult;</span><br><span class="line">    <span class="comment">% Update waitbar</span></span><br><span class="line">    waitbar(idx/N,h,sprintf(<span class="string">&#x27;Latest result: %d&#x27;</span>,thisResult));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">delete(h)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>运行完之后自动获取结果：afterEach 和 afterAll 区别</p><ul><li><p>afterEach：<a href="https://ww2.mathworks.cn/help/matlab/ref/parallel.future.aftereach.html">Run function after each function finishes running in the background - MATLAB afterEach - MathWorks 中国</a></p><p>B = afterEach(A,fcn,n)<br>B = afterEach(A,fcn,n,PassFuture=true)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">f = parfeval(backgroundPool,@test_pause,<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">afterEach(f,@<span class="built_in">disp</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    f(<span class="built_in">i</span>) = parfeval(backgroundPool,@<span class="built_in">rand</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">afterEach(f,@<span class="built_in">disp</span>,<span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>PassFuture=true作用</p><ul><li>表示回调函数fcn的输入参数是Future数组中的每个Future元素，而不是执行函数的输出结果。这样做的意义是，即使某次执行中发生了错误，也不会影响回调函数的执行</li></ul></blockquote></li><li><p>afterAll：<a href="https://ww2.mathworks.cn/help/matlab/ref/parallel.future.afterall.html">Run function after all functions finish running in the background - MATLAB afterAll - MathWorks 中国</a></p><p>例子：每次完成任务后更新进度条，全部任务完成后关闭进度条</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">w = waitbar(<span class="number">0</span>,<span class="string">&#x27;Please wait ...&#x27;</span>);</span><br><span class="line">N = <span class="number">20</span>;</span><br><span class="line">w.UserData = [<span class="number">0</span> N];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:N</span><br><span class="line">    delay = <span class="built_in">rand</span>;</span><br><span class="line">    f(<span class="built_in">i</span>) = parfeval(backgroundPool,@pause,<span class="number">0</span>,delay);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">afterEach(f,@(~)updateWaitbar(w),<span class="number">0</span>);</span><br><span class="line">afterAll(f,@(~)delete(w),<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateWaitbar</span><span class="params">(w)</span></span></span><br><span class="line">    <span class="comment">% Update a waitbar using the UserData property.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% Check if the waitbar is a reference to a deleted object</span></span><br><span class="line">    <span class="keyword">if</span> isvalid(w)</span><br><span class="line">        <span class="comment">% Increment the number of completed iterations </span></span><br><span class="line">        w.UserData(<span class="number">1</span>) = w.UserData(<span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">% Calculate the progress</span></span><br><span class="line">        progress = w.UserData(<span class="number">1</span>) / w.UserData(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">% Update the waitbar</span></span><br><span class="line">        waitbar(progress,w);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="dataqueue"><a class="markdownIt-Anchor" href="#dataqueue"></a> DataQueue</h2><blockquote><p>可以把其他线程发过来的数据展示到当前进程，比如使用imshow自动展示后台处理的图片、对工业相机拍摄的图像后台处理后实时展示。不过貌似对f使用afterEach就好了，有什么场景需要用这个吗？</p></blockquote><p>例子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 创建一个 DataQueue 对象，用于接受后台线程的data，执行处理函数 </span></span><br><span class="line">q = parallel.pool.DataQueue;</span><br><span class="line">afterEach(q,@showImage);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 后台模糊图像</span></span><br><span class="line">img = imread(<span class="string">&#x27;cameraman.tif&#x27;</span>);</span><br><span class="line">f = parfeval(backgroundPool,@blurImage,<span class="number">1</span>,q,img);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 用来模糊图像，并将结果发送到 DataQueue</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blurred_img</span> = <span class="title">blurImage</span> <span class="params">(q,img)</span></span></span><br><span class="line"></span><br><span class="line">    blurred_img = imgaussfilt (img, <span class="number">2</span>); <span class="comment">% 使用高斯滤波模糊图像</span></span><br><span class="line">    send (q, blurred_img); <span class="comment">% 将模糊后的图像发送到 DataQueue end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 用来接收 DataQueue 的数据，并显示图像 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showImage</span> <span class="params">(data)</span> </span></span><br><span class="line">    <span class="built_in">figure</span>;</span><br><span class="line">imshow (data);</span><br><span class="line">title (<span class="string">&#x27;Blurred Image&#x27;</span>); </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>函数</p><ul><li><p>send(q,data) 将值为 data 的数据项发送到队列 q。</p><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/parallel.pool.dataqueue.send.html">将数据发送到 DataQueue 或 PollableDataQueue - MATLAB send - MathWorks 中国</a></li></ul></li><li><p><code>afterEach</code></p></li><li><p>poll ：Retrieve data from <code>PollableDataQueue</code></p><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/parallel.pool.pollabledataqueue.poll.html">Retrieve data from PollableDataQueue - MATLAB poll - MathWorks 中国</a></li></ul></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颜色是什么？为什么我们能看到颜色？</title>
      <link href="//post/what-is-the-color-why-can-we-see-color-1v2pq4.html"/>
      <url>//post/what-is-the-color-why-can-we-see-color-1v2pq4.html</url>
      
        <content type="html"><![CDATA[<p>你看到的颜色是物体还是物体反射的光，为什么相机仅凭光就可以记录图像，光带有信息吗？</p><p>牛顿在思考为什么物体具有不同颜色这个问题上，通过棱镜实验将白光分解为七种颜色的光，解释是<span style="font-weight: bold;" data-type="strong">因为物体会反射白光中的不同颜色的光，我们看到的一切都是光</span>。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191033475.png" alt="光波会色散成一组可观察到的电磁波谱"></div><div class="image-meta"><span class="image-caption center">光波会色散成一组可观察到的电磁波谱</span></div></div><p>那<span style="font-weight: bold;" data-type="strong">光是什么，光为什么具有颜色</span>？麦克斯韦通过麦克斯韦方程推导发现光和电磁波速度相同，认为<span style="font-weight: bold;" data-type="strong">光是一种电磁波，电磁波是电磁辐射能量在空间的传递现象，所以不同颜色是不同的电磁辐射</span>：当波长为 650nm 的电磁波射入你的眼睛，那么你就看到了红色，当波长为 570nm 的电磁波射入你的眼睛，那么你就看到了黄色。人肉眼可见的电磁波辐射波长范围是380nm-750nm。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191033495.png" alt="光是一种肉眼可以看见（接受）的电磁波（可见光谱）"></div><div class="image-meta"><span class="image-caption center">光是一种肉眼可以看见（接受）的电磁波（可见光谱）</span></div></div><p>可一个白炽灯可以发射的光谱范围完全覆盖了人肉眼可见的波长区域，并且灯泡发射的黑色光能量最高，那为什么我们看到的灯泡不是黑色的？这是因为，虽然白炽灯发射的辐射能量在可见光范围的波长都存在，但眼睛对于不同波长的光敏感不同，即使灯丝发射的辐射在可见范围内是750nm的黑色光波能量最高，但黑色的敏感度很低，所以在敏感度的加权下就显得不明显——所以实际上<span style="font-weight: bold;" data-type="strong">颜色是按照人类对光的敏感度加权之后的电磁波谱</span>。</p><p>‍</p><p>眼睛中有两种与视觉有关的细胞，<span style="font-weight: bold;" data-type="strong">视杆细胞和视锥细胞</span>，其中视杆细胞和黑暗低光照有关，视锥细胞与色彩感觉有关。视锥细胞则有3种，这3种细胞对不同波长的光的响应程度是不一样的，从而被命名为S、M、L，方便对应短、中、长波长敏感的视锥细胞。同一种锥体对不同波长的光敏感不同，所以颜色实际上可以用L、M、S的各自敏感度来表示（L，M，S），也就是说，在数学上，我们的眼睛将颜色从光谱无限维度的空间降低到三维空间，即三种锥细胞曲线下的面积数值。光是一种电磁波，颜色是人能感觉到的波谱，这显然是复杂的。那么从现在开始，从眼睛感觉出发，从降维之后看到的世界开始，颜色是简单的，视锥细胞可以把任何光谱颜色变成三个数字组成的数组，这就是描述颜色方法——LMS色彩空间。这也就是说， <span style="font-weight: bold;" data-type="strong">「颜色」，是生物体对光波的解读。宇宙本身是没有「颜色」这种概念的，宇宙只有不同波长的光波，仅此而已。</span></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191033645.png" alt="三种细胞对光波的敏感度"></div><div class="image-meta"><span class="image-caption center">三种细胞对光波的敏感度</span></div></div><p>为了方便在屏幕上重现看到的颜色，人们往往使用RGB三维颜色空间来表示颜色，红、绿、蓝是光三原色，之所以三基色能够模拟多种色彩<span style="font-weight: bold;" data-type="strong">并不是物理原因，而是生理原因——</span> 是因为人眼的三种视锥细胞分别对红，黄绿，蓝紫的光线特别敏感，通过搭配三种固定波长的光我们可以合成其他颜色的光（注意，三种细胞并不是分别对红色、绿色和蓝色最敏感）。需要注意的是，<span style="font-weight: bold;" data-type="strong">这种三原色组成的颜色只对「人」有效。由于其他的动物锥形感光细胞与人类不一致，因此表达效果会有偏差。</span> 此外，仅靠RGB三种波长是无法匹配出435nm到540nm之间的任何光的，比如纯青色是无法在屏幕中展示的，也就是看到的纯青色只是一种近似的替代而已，事实上没有显示设备能完全还上面所有的自然色域。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191033371.png" alt="屏幕的色域"></div><div class="image-meta"><span class="image-caption center">屏幕的色域</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="http://127.0.0.1:6806/assets/image-20230609015558-i3k7nks.png" alt="RGB"></div><div class="image-meta"><span class="image-caption center">RGB</span></div></div><p>而对于美术专业和印刷行业的人，他们更习惯用CMYK表示颜色，即利用色料的三原色混色原理（青色+品红+黄色），加上黑色油墨来表示颜色。RGB是「<span style="font-weight: bold;" data-type="strong">叠加型原色</span>」，而CMYK是「<span style="font-weight: bold;" data-type="strong">消减型原色</span>」，这个模型的原理是通过仿真自然界实际上是通过反射光波长让我们看到颜色的。红色的纸为什么是红色的？因为它把其他颜色的波长吸收了，只反射了红色的波长。白色纸是因为没有吸收任何波长，全部反射，最终所有光波进入你的眼睛，看到了白色；黑色纸吸收了所有波长，没有反射，因此没有任何光波进入你的眼睛，看到的是黑色 <span style="font-weight: bold;" data-type="strong">。</span> 假设要配出黄颜色，对于屏幕来说，红光+绿光就可以了，如果要打印出来呢 <span style="font-weight: bold;" data-type="strong"> ？</span> 如果直接用红绿的墨水去配色可以吗？ 红墨水之所以是红的是因为它吸收了蓝和绿波长，绿墨会吸收红蓝反射绿，两者混在一起，红墨的红会被绿墨吸收一部分，绿墨的绿会被红墨吸收一部分，难以印出明亮的颜色。那么我们换一种思路，使得每种油墨吸收一种反射两种呢？这样就得到：只吸收红反射蓝绿的油墨就是青色（C），只吸收绿反射红蓝的就是品红（M），只吸收蓝反射红绿的就是黄色（Y）。这时，如果把青墨和品红墨相加，蓝色都不被两种墨吸收所以反射最强。这样通过CMY不同的组合就能组合出其他颜色， 而黑色墨是负责把亮的颜色调暗的。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191033832.png" alt="CMKY"></div><div class="image-meta"><span class="image-caption center">CMKY</span></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.bilibili.com/video/BV1pF411s7E3/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">颜色是什么——你看到的颜色是物体还是物体反射的光？_哔哩哔哩_bilibili</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 光学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
            <tag> 成像原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人眼为什么能看到虚像</title>
      <link href="//post/why-can-human-eyes-see-virtual-statues-z1og6up.html"/>
      <url>//post/why-can-human-eyes-see-virtual-statues-z1og6up.html</url>
      
        <content type="html"><![CDATA[<ul><li><span style="font-weight: bold;" data-type="strong">实像和虚像的区别在于</span>，光线能在光屏上汇聚，成的像叫实像，不能汇聚，但<u>此时发出的光相当于物体在其他位置发出的光，那个位置所在的像叫虚像</u>。这个散射的光依然能够通过一个凸透镜成像，并且成的像会是虚像的大小。</li><li>所以<span style="font-weight: bold;" data-type="strong">虚像发出的光没什么特别的，就和正常物体发出的光一样，都是散射的</span>，但是能够通过人眼这个凸透镜汇聚，在视网膜成像，只不过虚像的位置、大小可能是“假的”，人眼却觉得那个物体就在哪里，就这么大。</li></ul><hr><p>‍</p><p>要理解实像和虚像的区别，首先得搞清楚到底什么才是“像”。在光学上所谓的像，其实是和“真实物体”相对的一个概念。例如，一支蜡烛是真实的物体，透过凸透镜后呈在白屏上的那个长得和蜡烛相似的图案就是蜡烛的像。也就是说，像只是一种光影的效果，并不是真实存在的可以触摸的某种物体。</p><p>既然像只是光线产生的效果，那我们就可以从光线的角度来理解实像和虚像了。还是以蜡烛的凸透镜成像过程为例，从蜡烛上任取一个点A，追踪这个点发出的光线，会发现这些光线是朝向四面八方的（下图，图中以圆形分布的光线为例进行说明）。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191029606.png"></div></div><p>这一系列光线中，有一部分光线被凸透镜收集并发生折射，若是透镜与蜡烛的相对位置合适，那么经过凸透镜后的光线将产生会聚，也就意味着在会聚位置形成了一个“实像点”B，蜡烛对应的无数个这样的实像点组合起来，就是蜡烛所呈的实像。可以看出，实像点也是光能量的会聚点，因此能够照亮光屏或将底片曝光。</p><p>但如果蜡烛距离凸透镜更近一些（下图，图中省略了未进入凸透镜的光线），经过凸透镜折射的光线在传播方向上虽然也发生了偏折，但偏折的角度却不足以使得这些光线产生会聚作用。从效果上来看，这些光相当于从B点发射出来的。但是由于实际光线并未向B处传播，能量也并未在B处会聚，因此B只是一个不存在的假想的光点，所以称为“虚像点”。虚像点组成的像就是虚像了。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191028932.png"></div></div><p>既然虚像位置实际上并没有光能会聚，那么为什么人眼或相机能够看到虚像呢？这是因为人眼或相机本身并不单单是一张感光的底片，同时还带有光学系统（如人眼的晶状体结构）。这些光学系统能够将发散的光束重新会聚到一起，在视网膜或感光底片上形成实像C，这样一来人眼或相机就看到虚像了。</p>]]></content>
      
      
      <categories>
          
          <category> 光学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成像原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凸透镜为什么能成像？</title>
      <link href="//post/why-can-convex-lens-be-used-z1cu3qk.html"/>
      <url>//post/why-can-convex-lens-be-used-z1cu3qk.html</url>
      
        <content type="html"><![CDATA[<p>现在的相机、显微镜都用到了凸透镜，而不是用小孔成像，为什么要用凸透镜废弃小孔成像呢？凸透镜的作用是什么？</p><p>我复习了下初中物理的凸透镜成像规律：</p><ol><li>平行于光轴入射的光线经过后焦点出射；</li><li>经过光心入射的光学方向保持不变；</li><li>经过前焦点入射的光线平行于光轴出射。</li></ol><p>我们都知道光线通过凸透镜时，会发生折射现象，而凸透镜的作用就在于它能够将物体同一个点发射的光经过折射聚焦到光屏上，从而得到一个清晰倒立的像。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191023613.png"></div></div><p>所以凸透镜可以认为是小孔成像的plus版本：</p><ol><li>能够成清晰的像；</li><li>能让更多的光线进入；</li><li>增加了成像的亮度和清晰度；</li><li>能调整焦距来改变成像距离，焦距小，能拍到更远的像，焦距大，能拍到近的像；</li><li>凸透镜还可以通过组合多个透镜来实现更复杂的成像系统；</li><li>通过调整光圈的孔径、成像距离、焦距，通过镜头进入相机的光束横截面积会变化，照片的景深由此可以改变；</li><li>通过不断完善光学系统和感光底片，成像所需的曝光时间越来越小，人们能够越来越方便地记录下那一刻瞬间；</li></ol><p>人的眼睛其实就相当于一个凸透镜，当外界光线经过晶状体折射之后会在视网膜上形成倒立缩小的实像，再经过视神经传给大脑我们就有了视觉。我们能看清远近不同的物体就是因为晶状体的曲度可以调节，当看近处时曲度变大，看远处时曲度变小。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191023382.png" alt="正常眼球看远处和近处时的调焦方式"></div><div class="image-meta"><span class="image-caption center">正常眼球看远处和近处时的调焦方式</span></div></div><p>‍</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.bilibili.com/video/BV1qb4y1h7bE/?spm_id_from=333.999.0.0&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">为什么不用小孔成像做照相机？相机成像详解_哔哩哔哩_bilibili</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 光学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
            <tag> 成像原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么小孔成像才能成像，大孔不能成像？</title>
      <link href="//post/why-can-small-hole-imaging-be-used-and-large-holes-cannot-be-imaged-z2rx7bz.html"/>
      <url>//post/why-can-small-hole-imaging-be-used-and-large-holes-cannot-be-imaged-z2rx7bz.html</url>
      
        <content type="html"><![CDATA[<p>小孔成像是最简单的成像原理。所以为什么小孔可以成像而大孔不能成像？实际上，想要成像，就要求一点发出的光在光屏处成聚焦或者汇聚的形成。</p><p>小孔能够成像是因为小孔由于够小，可以认为一个点发出的光只打到光屏上的一个点，<span style="font-weight: bold;" data-type="strong">光屏上各个光点有序组合，物体的点与光屏上的点一一映射，因此形成了像</span>。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191020273.jpg"></div></div><p>而大孔由于一个点到光屏上是发散的，再加上不同点到光屏上的点会重合，导致光屏上的任意光点和原发光体并没有一一对应关系，所以成不了清晰的像，变成了一坨光斑。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191019672.jpg"></div></div><p>墨子在战国时代便发现了小孔成像，而在西方中世纪人们利用只有一个小孔的屋子来临摹窗外的风景，发端于小孔成像原理的各种成像工具，帮助艺术家们绘制更繁复的细节。</p><p>小孔成像的问题在于，一个点发出的各个方向的光，几乎只有一个方向的光能通过小孔打到光屏上成像，这就使得成的像亮度很低。</p><p>此外，小孔的尺寸太大会导致画面模糊，而小孔的尺寸太小会导致没有足够的能量穿过小孔，画面很暗，并且由于衍射的原因，画面也会模糊。即便是非常仔细的调整小孔的尺寸，最后的成像效果都不够清晰，因为<span style="font-weight: bold;" data-type="strong">事实上由于光的波粒二象性，几何光学中理想的小孔成像就不存在</span>。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311191018991.png"></div></div><p>现在的相机、显微镜都用到了凸透镜，而不是用小孔成像，凸透镜可以认为是小孔成像的plus版本，能够通过折射将一个点发出或反射的各个方向的光汇聚成一个点，能够将更多的光能集中到像平面上，提高信噪比，得到更清晰的像</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.bilibili.com/video/BV1AR4y1J7P5/?vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">为什么只能小孔才能成像，大孔不行_哔哩哔哩_bilibili</a></li><li><a href="https://zhuanlan.zhihu.com/p/97542357">31. 镜头、曝光，以及对焦（上） - 知乎 (zhihu.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 光学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
            <tag> 成像原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 如何给 mask 里的 ROI 编号</title>
      <link href="//post/how-to-give-the-roi-number-in-mask-zm8e9p.html"/>
      <url>//post/how-to-give-the-roi-number-in-mask-zm8e9p.html</url>
      
        <content type="html"><![CDATA[<p>Matlab 有内置函数<a href="https://ww2.mathworks.cn/help/images/ref/bwlabel.html">bwlabel</a> 可以给二值化图像，根据区域的连通性进行编号</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 创建二值图像</span></span><br><span class="line">&gt;&gt; BW = logical ([<span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">               <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 使用 4 连通对象创建标签矩阵</span></span><br><span class="line">&gt;&gt; L = bwlabel(BW,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">L =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">2</span>     <span class="number">2</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">2</span>     <span class="number">2</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span>     <span class="number">3</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://ww2.mathworks.cn/help/images/ref/bwlabel.html">对二维二值图像中的连通分量进行标注 - MATLAB bwlabel - MathWorks 中国</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab &#39;Hello World&#39; vs &quot;Hello World&quot; 单引号和双引号有何区别</title>
      <link href="//post/what-is-the-difference-between-matlab-hello-world-vs-hello-world-single-quotation-number-and-dual-quotation-number-z1ynuyi.html"/>
      <url>//post/what-is-the-difference-between-matlab-hello-world-vs-hello-world-single-quotation-number-and-dual-quotation-number-z1ynuyi.html</url>
      
        <content type="html"><![CDATA[<p><code>'Hello World'</code>单引号是字符数组 char ，<code>&quot;Hello World&quot;</code> 双引号是单个字符串标量string scalar，字符串数组是<code>[&quot;Hello&quot;, &quot;World&quot;]</code></p><p>下面具体罗列了它们的区别：</p><h2 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h2><p>单引号 <code>'Hello World'</code>有多个字符，会认为是字符数组，即各个字符可以通过索引来提取</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line">&gt;&gt; a(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;H&#x27;</span></span><br></pre></td></tr></table></figure><p>而双引号 <code>&quot;Hello World&quot;</code> 会被认为是单个字符串，无法直接用索引获取子字符串，需要用<code>extract</code>函数来提取子字符串</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; b = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">&gt;&gt; b(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Hello World&quot;</span></span><br><span class="line">&gt;&gt; extract(b,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;H&quot;</span></span><br></pre></td></tr></table></figure><h2 id="拼接"><a class="markdownIt-Anchor" href="#拼接"></a> 拼接</h2><ul><li><p>方括号<code>[]</code>拼接方式只适用于 char，因为本质上char就是数组，本质上就是在用逗号合并数组的方法合并字符数组。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; [<span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27;World&#x27;</span>] </span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;HelloWorld&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;World&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>×<span class="number">2</span> string 数组</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Hello&quot;</span>    <span class="string">&quot;World&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>加号<code>+</code>拼接方式只用于 string</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="string">&#x27;Hello&#x27;</span> + <span class="string">&#x27;World&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">159</span>   <span class="number">212</span>   <span class="number">222</span>   <span class="number">216</span>   <span class="number">211</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="string">&quot;Hello&quot;</span> + <span class="string">&quot;World&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;HelloWorld&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>函数<code>strcat</code>既可用于string也可用于char</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; strcat(<span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27;World&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;HelloWorld&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; strcat(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;HelloWorld&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>sprintf也既可用于string也可用于char</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; sprintf(<span class="string">&#x27;Hello %s&#x27;</span>,<span class="string">&#x27;World&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sprintf(<span class="string">&quot;Hello %s&quot;</span>,<span class="string">&quot;World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Hello World&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="判断字符数"><a class="markdownIt-Anchor" href="#判断字符数"></a> 判断字符数</h2><ul><li><p>函数<code>length</code>只能用于char，用于string只会返回1</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">length</span>(<span class="string">&#x27;Hello World&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">11</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">length</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>判断字符是否为空，string也不能用 <code>isempty </code>判断是否为空</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">isempty</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">isempty</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>判断字符数的最佳做法是使用 <code>strlength</code> 函数。无论输入是字符串标量还是字符数组，都可以返回正确的数字，也可以用来判断字符是否为空</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; strlength(<span class="string">&#x27;Hello World&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">11</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; strlength(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">11</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; logical(strlength(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; logical(strlength(<span class="string">&quot;&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="函数传参"><a class="markdownIt-Anchor" href="#函数传参"></a> 函数传参</h2><p>目前一般函数的字符传参都是支持char和string混用的，不过还是需要注意下函数说明。</p><p>但以命令形式使用 <code>cd</code>、<code>dir</code>、<code>copyfile</code> 或 <code>load</code> 等函数时，应避免使用双引号。在命令形式中，双引号被视为字面文本的一部分，而不是字符串构造运算符，因此导致报错。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; cd <span class="string">&quot;C:\Program Files&quot;</span></span><br><span class="line">错误使用 cd</span><br><span class="line">输入参数太多。</span><br></pre></td></tr></table></figure><blockquote><p><code>cd &quot;C:\Program Files&quot;</code> 等效于 <code>cd('&quot;C:\Program','Files&quot;')</code></p></blockquote><p>涉及空格，命令形式只支持用单引号包裹，或者改用函数形式才支持传入双引号</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="string">&#x27;C:\Program Files&#x27;</span></span><br><span class="line">cd(<span class="string">&quot;C:\Program Files&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><p><a href="https://www.mathworks.com/help/matlab/matlab_prog/frequently-asked-questions-about-string-arrays_zh_CN.html">有关字符串数组的常见问题解答 - MATLAB &amp; Simulink (mathworks.com)</a></p><ul><li>为什么在命令形式中使用字符串会返回错误？</li><li>为什么元胞数组中的字符串返回错误？</li><li>为什么使用 length() 调用字符串会返回 1？</li><li>为什么 isempty(“”) 返回 0？</li><li>为什么使用方括号追加字符串返回多个字符串？</li></ul></li><li><p><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/update-your-code-to-accept-strings.html#mw_7f89d759-1649-4135-bb88-d7ae4dd6f6e4">更新您的代码以接受字符串</a></p><ul><li>Matlab更推荐函数传参使用字符串，因为其是对象，性能更好</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 基础编程语法</title>
      <link href="//post/matlab-basic-programming-grammar-1ghj9i.html"/>
      <url>//post/matlab-basic-programming-grammar-1ghj9i.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构概览"><a class="markdownIt-Anchor" href="#数据结构概览"></a> 数据结构概览</h2><ul><li><p>int、float、complex</p></li><li><p>logical：true、false</p></li><li><p>char <code>' '</code> &amp; string <code>&quot; &quot;</code></p></li><li><p>array：<code>[]</code></p></li><li><p>strcuct: <code>()</code> &amp; <code>.</code></p></li><li><p>cell: <code>&#123;&#125;</code></p></li><li><p>others</p><ul><li>function handle</li><li>table</li><li>map</li><li>datetime</li></ul></li></ul><h2 id="条件语句"><a class="markdownIt-Anchor" href="#条件语句"></a> 条件语句</h2><ul><li><p>if…elseif…else…end</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> expression1</span><br><span class="line">    &lt;statements1&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">elseif</span> expression2</span><br><span class="line">    &lt;statements2&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &lt;statements3&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>switch…end</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> &lt;expression&gt;</span><br><span class="line">   <span class="keyword">case</span> &lt;value1&gt;</span><br><span class="line">      &lt;statements1&gt;</span><br><span class="line">   <span class="keyword">case</span> &#123;&lt;value2&gt;,&lt;value3&#125; <span class="comment">% 可以合并多种情况</span></span><br><span class="line">      &lt;statements2&gt;</span><br><span class="line">   <span class="keyword">otherwise</span></span><br><span class="line">      &lt;statements3&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>当情况(<code>case</code>)为真时，MATLAB 会执行相应的语句，然后退出 <code>switch</code>块。</li><li><code>otherwise</code>块是可选的，并且仅在没有 <code>case</code>为真时执行。</li></ul></li></ul><h2 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h2><ul><li><p>while…end</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;expression&gt;</span><br><span class="line">   &lt;statements&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>for…end</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index = values</span><br><span class="line">   &lt;statements&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>values 可以是循环一整个 valArray 的每个元素，这点和 python 很像</li></ul></li></ul><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><ul><li><p>单函数定义</p><ul><li><p>普通函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[out1,out2, ..., outN]</span> = <span class="title">myfun</span><span class="params">(in1,in2,in3, ..., inN)</span></span></span><br><span class="line"><span class="comment">% Annotation</span></span><br><span class="line">    expression</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>注：Matlab 2019b起函数已经支持设置默认值、键值对传参、参数验证等功能了，详见<a href="/post/matlab-arguments-to-return-the-function-to-the-function-2e76vf.html">Matlab  arguments 让函数回归函数</a></p></li><li><p>匿名函数</p><p>语法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f = @(arglist)expression</span><br></pre></td></tr></table></figure><p>例子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">power = @(x, n) x.^n;</span><br><span class="line">result1 = power(<span class="number">7</span>, <span class="number">3</span>)</span><br><span class="line">result2 = power(<span class="number">49</span>, <span class="number">0.5</span>)</span><br><span class="line">result3 = power(<span class="number">10</span>, <span class="number">-10</span>)</span><br><span class="line">result4 = power (<span class="number">4.5</span>, <span class="number">1.5</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>多函数的定义：自上而下书写，主函数写在最前面</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span><span class="params">()</span></span></span><br><span class="line">    fprintf(<span class="string">&quot;hello matlab\n&quot;</span>)</span><br><span class="line">    hello2()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello2</span><span class="params">()</span></span></span><br><span class="line">    fprintf(<span class="string">&quot;hello matlab2\n&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>函数的嵌套</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span> = <span class="title">A</span><span class="params">(p1, p2)</span></span></span><br><span class="line">...</span><br><span class="line">B(p2)</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">B</span><span class="params">(p3)</span></span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>函数的调用：</p><ul><li><p>单文件：函数定义放在调用之后</p></li><li><p>多文件：</p><ul><li>通过<u>文件名</u>来调用的，而不是函数名！！！</li><li><u>第一个函数</u>会被认为是主函数，按惯例与 m 文件同名</li></ul></li></ul></li><li><p>其他</p><ul><li>函数体中提供了两个名为 <a href><code>nargin</code></a> 和 <a href><code>nargout</code></a>的数量，方便记录输入变量和输出变量</li><li>关于 end：虽然它有时是可选的，但使用 <code>end</code> 可提高代码可读性。所以一般还是加上</li></ul></li></ul><h2 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h2><p>这里简单展示 Matlab 和 Python 面向对象语法</p><p>Matlab 面向对象语法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">classdef</span> demo &lt; parent</span><br><span class="line">    <span class="keyword">properties</span>  (Access = public) </span><br><span class="line">        property1</span><br><span class="line">        property2 logical = <span class="built_in">true</span>;  <span class="comment">% set type and default value</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">methods</span> (Access = public)</span><br><span class="line"><span class="comment">% Constructor</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">self</span> = <span class="title">demo</span><span class="params">(va1, val2)</span></span></span><br><span class="line">            self.property1 = val1</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">methods</span></span><br><span class="line"><span class="comment">% Class public method</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">(self,val)</span></span></span><br><span class="line">            &lt;statements1&gt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">    <span class="keyword">methods</span> (Access = private)</span><br><span class="line"><span class="comment">% Class private method</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">(self,val)</span></span></span><br><span class="line">             &lt;statements2&gt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Python 面向对象语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>(<span class="title class_ inherited__">Parent</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, val1, val2</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.property1 = val1</span><br><span class="line">        self.property2 = <span class="literal">True</span>  <span class="comment"># Default value</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fun1</span>(<span class="params">self, val</span>):</span><br><span class="line">        <span class="comment"># &lt;statements1&gt;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_fun2</span>(<span class="params">self, val</span>):</span><br><span class="line">        <span class="comment"># &lt;statements2&gt;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab reshape 按列扫描、按列填充——容易踩坑</title>
      <link href="//post/matlab-reshape-scan-and-fill-in-columns-easy-to-step-on-the-pit-18flah.html"/>
      <url>//post/matlab-reshape-scan-and-fill-in-columns-easy-to-step-on-the-pit-18flah.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Matlab 的 reshape 会先将输入数据按列扫描变为一维列向量，输出数据则是根据列向量逐列填充。在转换数据时如果不注意这一点很容易踩坑！</p></blockquote><h2 id="官方文档"><a class="markdownIt-Anchor" href="#官方文档"></a> 官方文档</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">reshape</span> - 重构数组</span><br><span class="line">   此 MATLAB 函数 使用大小向量 sz 重构 A 以定义 <span class="built_in">size</span>(B)。例如，<span class="built_in">reshape</span>(A,[<span class="number">2</span>,<span class="number">3</span>]) 将</span><br><span class="line">   A 重构为一个 <span class="number">2</span>×<span class="number">3</span> 矩阵。sz 必须至少包含 <span class="number">2</span> 个元素，prod(sz) 必须与 <span class="built_in">numel</span>(A) 相同。</span><br><span class="line"></span><br><span class="line">   B = <span class="built_in">reshape</span>(A,sz)</span><br><span class="line">   B = <span class="built_in">reshape</span>(A,sz1,...,szN)</span><br><span class="line"></span><br><span class="line">   输入参数</span><br><span class="line">       A - 输入数组</span><br><span class="line">           向量 | 矩阵 | 多维数组</span><br><span class="line">       sz - 输出大小</span><br><span class="line">           由整数组成的行向量</span><br><span class="line">       sz1,...,szN - 每个维度的大小</span><br><span class="line">           两个或以上的整数 | []（可选）</span><br><span class="line"></span><br><span class="line">   输出参数</span><br><span class="line">       B - 重构的数组</span><br><span class="line">           向量 | 矩阵 | 多维数组 | 元胞数组</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://ww2.mathworks.cn/help/matlab/ref/reshape.html">MATLAB 官方文档：reshape</a></p></blockquote><h2 id="使用笔记"><a class="markdownIt-Anchor" href="#使用笔记"></a> 使用笔记</h2><p>第一次使用reshape的时候，没注意到它是按列获取数据的，再进行重构矩阵的，掉入坑中</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A = <span class="number">1</span>:<span class="number">6</span></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>  </span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(A,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span></span><br></pre></td></tr></table></figure><p>如果要把1d数组变为2d数组，并且希望它是按行进行重构数组的，就需要把转化后的行和列进行调换，再把reshape后的数组进行转置</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; B = <span class="built_in">reshape</span>(A,<span class="number">3</span>,<span class="number">2</span>)&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br></pre></td></tr></table></figure><p>如果是想要把2d数组变为1d数组，并且希望是按行提取数据的，就需要先把矩阵转置，再用reshape</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; B</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(B,<span class="number">1</span>,[])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">2</span>     <span class="number">5</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(B&#x27;,<span class="number">1</span>,[])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/reshape.html">MATLAB 官方文档：reshape</a></li><li><a href="https://zhuanlan.zhihu.com/p/344941033">Reshape函数顺序解析-Matlab - 知乎 (zhihu.com)</a></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311122247705.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 如何将图形转化为轮廓</title>
      <link href="//post/how-does-matlab-convert-graphics-into-outline-zo6ihg.html"/>
      <url>//post/how-does-matlab-convert-graphics-into-outline-zo6ihg.html</url>
      
        <content type="html"><![CDATA[<p>Matlab 自带 bwboundaries 函数，能够解析图形，返回图片上所有图形的轮廓</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outline</span> = <span class="title">mask_to_outline</span><span class="params">(mask)</span></span></span><br><span class="line">    <span class="comment">% mask_to_outline : convert roi mask to outline mask</span></span><br><span class="line">    <span class="keyword">arguments</span> (Input)</span><br><span class="line">        mask (:,:) double</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">arguments</span> (Output)</span><br><span class="line">        outline (:,:) logical</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    B = bwboundaries(mask==<span class="number">1</span>, <span class="string">&#x27;holes&#x27;</span>); <span class="comment">% 获取不连通区域的边界</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% 初始化一个空矩阵来存储所有轮廓点</span></span><br><span class="line">    numBoundaries = <span class="built_in">length</span>(B);</span><br><span class="line">    totalPoints = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:numBoundaries</span><br><span class="line">        totalPoints = totalPoints + <span class="built_in">size</span>(B&#123;k&#125;, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    allBoundaries = <span class="built_in">zeros</span>(totalPoints, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% 遍历每个不连通区域的边界</span></span><br><span class="line">    currentIndex = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:numBoundaries</span><br><span class="line">        boundary = B&#123;k&#125;;</span><br><span class="line">        <span class="comment">% 将当前区域的轮廓点添加到allBoundaries矩阵中</span></span><br><span class="line">        boundarySize = <span class="built_in">size</span>(boundary, <span class="number">1</span>);</span><br><span class="line">        allBoundaries(currentIndex:currentIndex+boundarySize<span class="number">-1</span>, :) = boundary;</span><br><span class="line">        currentIndex = currentIndex + boundarySize;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 将轮廓坐标转换为outline mask</span></span><br><span class="line">    outline = <span class="built_in">zeros</span>(<span class="built_in">size</span>(mask));</span><br><span class="line">    linearIndices = <span class="built_in">sub2ind</span>(<span class="built_in">size</span>(outline),allBoundaries(:, <span class="number">1</span>), allBoundaries(:, <span class="number">2</span>));</span><br><span class="line">    outline(linearIndices) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>ℹ 这里展示的代码会把所有孔洞的轮廓都返回，如果只想要求闭合轮廓则是 <code>bwboundaries(I, 'noholes');</code></p></blockquote><h2 id="结果展示"><a class="markdownIt-Anchor" href="#结果展示"></a> 结果展示</h2><p>原来的 mask 图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311121904150.png"></div></div><p>得到的outline图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311121904669.png"></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://blog.csdn.net/qq_31347869/article/details/102881985">【精选】MatLab求取多个闭合区域的轮廓、面积和bbox_matlab boundingbox-CSDN博客</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 使用 np.vectorize 向量化函数，进行批量处理</title>
      <link href="//post/python-uses-npvectorize-directional-function-to-perform-batch-processing-ipcdn.html"/>
      <url>//post/python-uses-npvectorize-directional-function-to-perform-batch-processing-ipcdn.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>通常情况下，NumPy 能够直接对数组执行元素级操作，这就是所谓的&quot;向量化&quot;操作。但有时候，如果你有一个在标量上定义的函数，你可能想要将其应用到整个数组上，而不是对数组中的每个元素进行循环操作。<code>np.vectorize</code> 函数允许你在 NumPy 数组上以向量化的方式应用一个普通的 Python 函数。这使得你可以用一种更简洁和有效的方式处理整个数组，而不需要显式地编写循环。</p></blockquote><h2 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h2><p>我需要记录图像上 roi 位置，为了让 roi 能够重叠，我选择用 numpy 创建一个二维字符串数组，每个 roi 用编号来表示，roi 所在位置就会填入对应编号，如果 roi 位置存在重叠，则用逗号隔开。</p><p>具体示例如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">matrix = np.zeros((<span class="number">3</span>, <span class="number">3</span>), dtype=<span class="built_in">object</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">matrix[:,:] =<span class="string">&#x27;1&#x27;</span></span><br><span class="line">matrix[<span class="number">1</span>:<span class="number">3</span>,<span class="number">1</span>:<span class="number">3</span>] =<span class="string">&#x27;2,3&#x27;</span></span><br><span class="line">matrix[<span class="number">1</span>,<span class="number">1</span>] =<span class="string">&#x27;1,2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(matrix)</span><br></pre></td></tr></table></figure><blockquote><p>[[[‘1’ ‘1’ ‘1’]<br>[‘1’ ‘1,2’ ‘2,3’]<br>[‘1’ ‘2,3’ ‘2,3’]]</p></blockquote><blockquote><p>ℹ numpy创建字符串矩阵最好用object，不要用str、U3、U5这种，否则只会固定字符串长度，一旦超过就会被截取，用object可能比str占用内存小，运行速度快！</p><ul><li><a href="https://zhuanlan.zhihu.com/p/556852726">numpy 数组的字符串元素类型和内存分配，引发的字符串长度问题</a></li><li><a href="https://stackoverflow.com/questions/29877508/what-does-dtype-object-mean-while-creating-a-numpy-array">python - What does dtype=object mean while creating a numpy array? - Stack Overflow</a></li></ul></blockquote><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p>如何使用 Python 代码，能够提取指定 ROI 的位置呢，这样就可以提取单个 roi 的 mask 进行后续处理了</p><h2 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h2><p>使用 <code>np.vectorize</code> 可以向量化函数，使函数能对每个元素执行，并返回值。</p><p>所以就可以这样写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">contains_value</span>(<span class="params">cell, value</span>):</span><br><span class="line">    <span class="keyword">return</span> value <span class="keyword">in</span> cell.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将函数转换为能够处理numpy数组的函数</span></span><br><span class="line">contains_value_vectorized = np.vectorize(contains_value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用函数到整个矩阵上，查找&#x27;1&#x27;</span></span><br><span class="line">result_1 = contains_value_vectorized(matrix, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用函数到整个矩阵上，查找&#x27;2&#x27;</span></span><br><span class="line">result_2 = contains_value_vectorized(matrix, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result_3 = contains_value_vectorized(matrix, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result_1)</span><br><span class="line"><span class="built_in">print</span>(result_2)</span><br><span class="line"><span class="built_in">print</span>(result_3)</span><br></pre></td></tr></table></figure><blockquote><p>[[ True  True  True]<br>[ True  True False]<br>[ True False False]]</p><p>[[False False False]<br>[False  True  True]<br>[False  True  True]]</p><p>[[False False False]<br>[False False  True]<br>[False  True  True]]</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 自定义代码支持滚轮放大和拖动图片</title>
      <link href="//post/matlab-custom-code-supports-roller-amplification-and-drag-pictures-20eamw.html"/>
      <url>//post/matlab-custom-code-supports-roller-amplification-and-drag-pictures-20eamw.html</url>
      
        <content type="html"><![CDATA[<p>Matlab 虽然自带的 imshow 也支持鼠标滚轮放大缩小，鼠标左键拖动放大的图片调整视野，但是一旦把 menubar 给关了，就丢失了 zoom 和 pan 的功能，最离谱的是——zoom 和 pan 还只能开一个，开了 zoom 就不能开 pan。所以打算自己撸一个同时支持鼠标滚轮放大图片和左键拖动图片的功能。</p><h2 id="实现方案"><a class="markdownIt-Anchor" href="#实现方案"></a> 实现方案</h2><p>具体实现功能</p><ul><li>鼠标滚轮放大/缩小图片</li><li>鼠标左键长按拖拽图片</li><li>鼠标左键双击恢复图片</li></ul><h3 id="鼠标滚轮放大图片"><a class="markdownIt-Anchor" href="#鼠标滚轮放大图片"></a> 鼠标滚轮放大图片</h3><p>比较简单，监听 Figure 的鼠标滚轮事件 WindowScrollWheelFcn，根据滚动值 event.VerticalScrollCount 来判断滚动方向进行放大或缩小</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">im_zoom</span><span class="params">(self,~,event)</span></span></span><br><span class="line"></span><br><span class="line">    currentPosition = self.ax.CurrentPoint;</span><br><span class="line">    x = currentPosition(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    y = currentPosition(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> x &gt;= self.ax.XLim(<span class="number">1</span>) &amp;&amp; x &lt;= self.ax.XLim(<span class="number">2</span>) &amp;&amp; y &gt;= self.ax.YLim(<span class="number">1</span>) &amp;&amp; y &lt;= self.ax.YLim(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> event.VerticalScrollCount &gt; <span class="number">0</span></span><br><span class="line">            scale = <span class="number">1.1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            scale = <span class="number">1</span>/<span class="number">1.1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        xlim_range = get(self.ax, <span class="string">&#x27;xlim&#x27;</span>);</span><br><span class="line">        ylim_range = get(self.ax, <span class="string">&#x27;ylim&#x27;</span>);</span><br><span class="line">        <span class="comment">% 进行放大缩小</span></span><br><span class="line">        set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;crosshair&#x27;</span>); <span class="comment">% change mouse point</span></span><br><span class="line">        self.ax.XLim = (xlim_range - x) * scale + x; <span class="comment">% 能保证鼠标滚动时，即使放大缩小，鼠标所在的位置还在原来的位置，保持不变</span></span><br><span class="line">        self.ax.YLim = (ylim_range - y) * scale + y;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="鼠标拖拽图片"><a class="markdownIt-Anchor" href="#鼠标拖拽图片"></a> 鼠标拖拽图片</h3><p>会复杂一点，</p><ol><li><p>鼠标左键点击，ax.UserData.status 设置为’axes_paning’（默认情况为’idle’），并记录当前鼠标位置</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">im_pan_start</span><span class="params">(self)</span></span></span><br><span class="line">    self.ax.UserData.status = <span class="string">&#x27;axes_paning&#x27;</span>;</span><br><span class="line">    self.ax.UserData.previous_point = self.ax.CurrentPoint;</span><br><span class="line">    set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;fleur&#x27;</span>); <span class="comment">% change mouse point</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>监听鼠标移动事件，根据鼠标移动的位置，来更新 ax 的 XLim 和 YLim，实现平移效果为了只有鼠标按住左键才能拖动，只有 ax.UserData.status 为’axes_paning’时，才进行平移。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fig_motion</span><span class="params">(self,~,~)</span></span></span><br><span class="line">    currentPosition = self.ax.CurrentPoint;</span><br><span class="line">    x = currentPosition(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    y = currentPosition(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> x &gt;= self.ax.XLim(<span class="number">1</span>) &amp;&amp; x &lt;= self.ax.XLim(<span class="number">2</span>) &amp;&amp; y &gt;= self.ax.YLim(<span class="number">1</span>) &amp;&amp; y &lt;= self.ax.YLim(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">switch</span> self.ax.UserData.status</span><br><span class="line">            <span class="keyword">case</span>  <span class="string">&quot;axes_paning&quot;</span></span><br><span class="line">                self.im_panning()</span><br><span class="line">            <span class="keyword">otherwise</span></span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>当鼠标左键抬起后，将 ax.UserData.status 设置为’idle’，使得 fig_motion 功能失效</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">im_pan_stop</span><span class="params">(self)</span></span></span><br><span class="line">    self.ax.UserData.status = <span class="string">&#x27;idle&#x27;</span>;</span><br><span class="line">    set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;arrow&#x27;</span>); <span class="comment">% recover mouse point</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="鼠标左键双击恢复图片"><a class="markdownIt-Anchor" href="#鼠标左键双击恢复图片"></a> 鼠标左键双击恢复图片</h3><ul><li><p>载入图片时，记录 ax 原始的 XLim 和 YLim</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">self.ax.XLim = self.ax.UserData.origin_xlim;</span><br><span class="line">self.ax.YLim = self.ax.UserData.origin_ylim;</span><br></pre></td></tr></table></figure></li><li><p>左键双击时，恢复为原始的 XLim 和 YLim</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fig_click</span><span class="params">(self,src,~)</span></span></span><br><span class="line">    set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;arrow&#x27;</span>);</span><br><span class="line">    <span class="keyword">switch</span> src.SelectionType</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;open&#x27;</span> <span class="comment">% Double Click</span></span><br><span class="line">            <span class="comment">% Double Click to restore origin xlim and ylim</span></span><br><span class="line">            self.im_zoom_restore()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">im_zoom_restore</span><span class="params">(self)</span></span></span><br><span class="line">    self.ax.XLim = self.ax.UserData.origin_xlim;</span><br><span class="line">    self.ax.YLim = self.ax.UserData.origin_ylim;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="全部代码"><a class="markdownIt-Anchor" href="#全部代码"></a> 全部代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">classdef</span> FigureManualZoom &lt; handle</span><br><span class="line">    <span class="keyword">properties</span></span><br><span class="line">        fig;</span><br><span class="line">        ax;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">methods</span></span><br><span class="line">        <span class="comment">% Class Constructor</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">self</span> = <span class="title">FigureManualZoom</span><span class="params">()</span></span></span><br><span class="line">            self.fig = <span class="built_in">figure</span>(<span class="string">&quot;Name&quot;</span>,<span class="string">&#x27;Test&#x27;</span>,<span class="string">&quot;NumberTitle&quot;</span>,<span class="string">&quot;off&quot;</span>,<span class="string">&#x27;Menubar&#x27;</span>,<span class="string">&#x27;none&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>,[<span class="number">10</span>,<span class="number">10</span>,<span class="number">408</span>,<span class="number">408</span>]);</span><br><span class="line">            self.set_fig_center(self.fig);</span><br><span class="line">            self.fig.WindowButtonDownFcn = @self.fig_click;</span><br><span class="line">            self.fig.WindowScrollWheelFcn = @self.im_zoom;</span><br><span class="line">            self.fig.WindowButtonMotionFcn = @self.fig_motion;</span><br><span class="line">            self.fig.WindowButtonUpFcn = @self.fig_click_done;</span><br><span class="line">            self.ax = axes(<span class="string">&#x27;Parent&#x27;</span>,self.fig);</span><br><span class="line">            im = imread(<span class="string">&quot;cellpose_test.tif&quot;</span>);</span><br><span class="line">            im_size = <span class="built_in">size</span>(im);</span><br><span class="line">            imshow(im,[],<span class="string">&#x27;parent&#x27;</span>,self.ax,<span class="string">&#x27;border&#x27;</span>,<span class="string">&#x27;tight&#x27;</span>,<span class="string">&#x27;initialmagnification&#x27;</span>,<span class="string">&#x27;fit&#x27;</span>);</span><br><span class="line">            self.ax.UserData.status = <span class="string">&#x27;idle&#x27;</span>;</span><br><span class="line">            self.ax.UserData.previous_point = [];</span><br><span class="line">            self.ax.UserData.origin_xlim = [<span class="number">0</span> im_size(<span class="number">2</span>)];</span><br><span class="line">            self.ax.UserData.origin_ylim = [<span class="number">0</span> im_size(<span class="number">2</span>)];</span><br><span class="line">            self.ax.XLim = self.ax.UserData.origin_xlim;</span><br><span class="line">            self.ax.YLim = self.ax.UserData.origin_ylim;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% Custom Methods</span></span><br><span class="line">    <span class="keyword">methods</span></span><br><span class="line">        <span class="comment">% Put fig in the center of current screen</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">set_fig_center</span><span class="params">(~, fig)</span></span></span><br><span class="line">            <span class="comment">%SET_FIG_CENTER: </span></span><br><span class="line"></span><br><span class="line">            <span class="comment">% Get the screen size</span></span><br><span class="line">            screenSize = get(<span class="number">0</span>, <span class="string">&#x27;ScreenSize&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">% Get the size of the Figure</span></span><br><span class="line">            figSize = get(fig, <span class="string">&#x27;Position&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">% Calculate the position for centering the Figure</span></span><br><span class="line">            centeredPosition = [(screenSize(<span class="number">3</span>) - figSize(<span class="number">3</span>)) / <span class="number">2</span>, (screenSize(<span class="number">4</span>) - figSize(<span class="number">4</span>)) / <span class="number">2</span>, figSize(<span class="number">3</span>:<span class="number">4</span>)];</span><br><span class="line"></span><br><span class="line">            <span class="comment">% Set the position of the Figure</span></span><br><span class="line">            set(fig, <span class="string">&#x27;Position&#x27;</span>, centeredPosition);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment">% Listening for mouse click events</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fig_click</span><span class="params">(self,src,~)</span></span></span><br><span class="line">            set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;arrow&#x27;</span>);</span><br><span class="line">            <span class="keyword">switch</span> src.SelectionType</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;normal&#x27;</span> <span class="comment">% Left Click</span></span><br><span class="line">                    self.im_pan_start();</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;open&#x27;</span> <span class="comment">% Double Click</span></span><br><span class="line">                    <span class="comment">% Double Click to restore origin xlim and ylim</span></span><br><span class="line">                    self.im_zoom_restore()</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;alt&#x27;</span> <span class="comment">% Ctrl + Left Click / Right Click</span></span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;extend&#x27;</span> <span class="comment">% Shift + Left Click</span></span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">otherwise</span></span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% Listening for mouse click completion events</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fig_click_done</span><span class="params">(self,~,~)</span></span></span><br><span class="line">            self.im_pan_stop();</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% Listening for mouse movement events</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fig_motion</span><span class="params">(self,~,~)</span></span></span><br><span class="line">            currentPosition = self.ax.CurrentPoint;</span><br><span class="line">            x = currentPosition(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">            y = currentPosition(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> x &gt;= self.ax.XLim(<span class="number">1</span>) &amp;&amp; x &lt;= self.ax.XLim(<span class="number">2</span>) &amp;&amp; y &gt;= self.ax.YLim(<span class="number">1</span>) &amp;&amp; y &lt;= self.ax.YLim(<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">switch</span> self.ax.UserData.status</span><br><span class="line">                    <span class="keyword">case</span>  <span class="string">&quot;axes_paning&quot;</span></span><br><span class="line">                        self.im_panning()</span><br><span class="line">                    <span class="keyword">otherwise</span></span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">im_zoom_restore</span><span class="params">(self)</span></span></span><br><span class="line">            self.ax.XLim = self.ax.UserData.origin_xlim;</span><br><span class="line">            self.ax.YLim = self.ax.UserData.origin_ylim;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">im_pan_start</span><span class="params">(self)</span></span></span><br><span class="line">            self.ax.UserData.status = <span class="string">&#x27;axes_paning&#x27;</span>;</span><br><span class="line">            self.ax.UserData.previous_point = self.ax.CurrentPoint;</span><br><span class="line">            set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;fleur&#x27;</span>); <span class="comment">% change mouse point</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">im_pan_stop</span><span class="params">(self)</span></span></span><br><span class="line">            self.ax.UserData.status = <span class="string">&#x27;idle&#x27;</span>;</span><br><span class="line">            set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;arrow&#x27;</span>); <span class="comment">% recover mouse point</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">        <span class="comment">% Drag the image with the left mouse button</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">im_panning</span><span class="params">(self)</span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">% get mouse position in UIaxes</span></span><br><span class="line">            current_position = self.ax.CurrentPoint;</span><br><span class="line"></span><br><span class="line">            <span class="comment">% get current location (in pixels)</span></span><br><span class="line">            <span class="comment">% get current XY-limits</span></span><br><span class="line">            xlim_range = get(self.ax, <span class="string">&#x27;xlim&#x27;</span>);</span><br><span class="line">            ylim_range = get(self.ax, <span class="string">&#x27;ylim&#x27;</span>);</span><br><span class="line">            <span class="comment">% find change in position</span></span><br><span class="line">            delta_points = current_position - self.ax.UserData.previous_point;</span><br><span class="line"></span><br><span class="line">            <span class="comment">% Adjust limits</span></span><br><span class="line">            set(self.ax, <span class="string">&#x27;Xlim&#x27;</span>, xlim_range - delta_points(<span class="number">1</span>));</span><br><span class="line">            set(self.ax, <span class="string">&#x27;Ylim&#x27;</span>, ylim_range - delta_points(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">% save new position</span></span><br><span class="line">            self.ax.UserData.previous_point = get(self.ax, <span class="string">&#x27;CurrentPoint&#x27;</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% Mouse wheel zooms in and out of images</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">im_zoom</span><span class="params">(self,~,event)</span></span></span><br><span class="line"></span><br><span class="line">            currentPosition = self.ax.CurrentPoint;</span><br><span class="line">            x = currentPosition(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">            y = currentPosition(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> x &gt;= self.ax.XLim(<span class="number">1</span>) &amp;&amp; x &lt;= self.ax.XLim(<span class="number">2</span>) &amp;&amp; y &gt;= self.ax.YLim(<span class="number">1</span>) &amp;&amp; y &lt;= self.ax.YLim(<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">if</span> event.VerticalScrollCount &gt; <span class="number">0</span></span><br><span class="line">                    scale = <span class="number">1.1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    scale = <span class="number">1</span>/<span class="number">1.1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                xlim_range = get(self.ax, <span class="string">&#x27;xlim&#x27;</span>);</span><br><span class="line">                ylim_range = get(self.ax, <span class="string">&#x27;ylim&#x27;</span>);</span><br><span class="line">                <span class="comment">% 进行放大缩小</span></span><br><span class="line">                set(self.fig,<span class="string">&#x27;Pointer&#x27;</span>,<span class="string">&#x27;crosshair&#x27;</span>); <span class="comment">% change mouse point</span></span><br><span class="line">                self.ax.XLim = (xlim_range - x) * scale + x; <span class="comment">% 能保证鼠标滚动时，即使放大缩小，鼠标所在的位置还在原来的位置，保持不变</span></span><br><span class="line">                self.ax.YLim = (ylim_range - y) * scale + y;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://github.com/danyalejandro/imgzoompan">danyalejandro/imgzoompan: A MatLab code add-on that provides mouse zoom &amp; pan functionality for 2D images. (github.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 把 ROI mask 以一定透明度叠加到黑白图像上</title>
      <link href="//post/matlab-superimposes-mask-a-certain-transparency-to-the-image-2seqqa.html"/>
      <url>//post/matlab-superimposes-mask-a-certain-transparency-to-the-image-2seqqa.html</url>
      
        <content type="html"><![CDATA[<h2 id="方法一直接把mask写入im"><a class="markdownIt-Anchor" href="#方法一直接把mask写入im"></a> 方法一：直接把mask写入im</h2><p>先把im转化为hsv图像，由于是黑白图，即把黑白图的灰度值赋给hsv的v通道。</p><p>然后mask 信息只加载在saturation通道，saturation越低，透明度越低。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">converted_im</span> = <span class="title">mask_overlay_im</span><span class="params">(im,mask)</span></span></span><br><span class="line">    <span class="comment">% 把mask叠加到图像上</span></span><br><span class="line"></span><br><span class="line">    im = single(im);</span><br><span class="line">    HSV = <span class="built_in">zeros</span>([<span class="built_in">size</span>(im), <span class="number">3</span>], <span class="string">&#x27;single&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">max</span>(im(:)) &gt; <span class="number">1</span></span><br><span class="line">        v = im / <span class="number">255</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        v= im;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    HSV(:,:,<span class="number">3</span>) = v; <span class="comment">% value</span></span><br><span class="line"></span><br><span class="line">    n_roi = <span class="built_in">max</span>(mask(:));</span><br><span class="line">    hues = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">1</span>, n_roi+<span class="number">1</span>);</span><br><span class="line">    hues = hues(randperm(n_roi));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n = <span class="number">1</span>:<span class="built_in">max</span>(mask(:))</span><br><span class="line">        mask_indices = (mask == n);</span><br><span class="line">        HSV(mask_indices) = hues(n); <span class="comment">% hue</span></span><br><span class="line">        HSV(:,:,<span class="number">2</span>) = HSV(:,:,<span class="number">2</span>) .* ~mask_indices +  <span class="number">0.4</span>*mask_indices; <span class="comment">% saturation</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    converted_im = uint8(<span class="built_in">hsv2rgb</span>(HSV) * <span class="number">255</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311051042778.png" alt="将图片转化为hsv后，将roi信息写入saturation通道，实现图片叠加"></div><div class="image-meta"><span class="image-caption center">将图片转化为hsv后，将roi信息写入saturation通道，实现图片叠加</span></div></div><h2 id="方法二使用imshow"><a class="markdownIt-Anchor" href="#方法二使用imshow"></a> 方法二：使用imshow</h2><p>在Figure上显示底下的图片，然后hold on在画一张，利用imshow的handles可以设置AlphaData，只设置roi区域有一定透明度，空白区域AlphaData设置为0，从而实现图像叠加。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% test mask overlay to image</span></span><br><span class="line">colored_mask = mask_to_rgb(matlab_mask);</span><br><span class="line">binary_mask = matlab_mask&gt;<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">imshow(im,[])</span><br><span class="line"><span class="built_in">hold</span> on </span><br><span class="line">alpha = <span class="number">0.3</span>;</span><br><span class="line">h = imshow(colored_mask,[])</span><br><span class="line">h.AlphaData=binary_mask*alpha;</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311051133051.png" alt="使用imshow绘制两层，调整顶层mask透明度，实现图片叠加"></div><div class="image-meta"><span class="image-caption center">使用imshow绘制两层，调整顶层mask透明度，实现图片叠加</span></div></div><blockquote><p>⚠注意：使用imshow的CData更改图像，scale不会改变……所以是需要让两张图片的最大灰度值相差不大的，比如都设置成255. 如果一个最大灰度值是255，一个最大灰度值只是1，就会导致图片过曝惨白一片。</p></blockquote><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab  arguments 让函数回归函数</title>
      <link href="//post/matlab-arguments-to-return-the-function-to-the-function-2e76vf.html"/>
      <url>//post/matlab-arguments-to-return-the-function-to-the-function-2e76vf.html</url>
      
        <content type="html"><![CDATA[<p>Matlab  arguments 是Matlab 2019才有的语法，它让Matlab 编写函数能以更简单的设置函数默认参数、支持键值对传参、支持参数验证以及自动参数类型转化等功能。习惯Python简单粗暴的编写函数的我，总算因为arguments这个语法，对Matlab的函数编写少了一丝敌意。目前class也是能用arguments语法对类属性进行设置。</p><h2 id="语法概览"><a class="markdownIt-Anchor" href="#语法概览"></a> 语法概览</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">arguments</span> <span class="comment">% 基本语法</span></span><br><span class="line">    argName1 (dimensions) class &#123;validators&#125; = defaultValue</span><br><span class="line">    ...</span><br><span class="line">    argNameN ...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">arguments</span> (Input) <span class="comment">% 验证输入参数</span></span><br><span class="line">    argName1 (dimensions) class &#123;validators&#125; = defaultValue</span><br><span class="line">    ...</span><br><span class="line">    argNameN ...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">arguments</span> (Output) <span class="comment">% 验证输出参数</span></span><br><span class="line">    argName1 (dimensions) class &#123;validators&#125;</span><br><span class="line">    ...</span><br><span class="line">    argNameN ...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">arguments</span> (Input,Repeating) <span class="comment">% 声明重复输入参数:可以重复输入两组组数据，如果不指定Output Repeating，需要调用的代码块支持输入重复两组数据，才能达到一次输入多次调用函数的效果</span></span><br><span class="line">    argName1 (dimensions) class &#123;validators&#125; = defaultValue</span><br><span class="line">    ...</span><br><span class="line">    argNameN ... </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">arguments</span> (Output,Repeating) <span class="comment">% % 声明重复输出参数: 与Input Repeating结合使用，可以达到一次输入多次调用函数的效果</span></span><br><span class="line">    argName (dimensions) class &#123;validators&#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>argName (dimensions) class &#123;validators&#125; = defaultValue</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311051733668.png"></div></div><ol><li><p><code>(dimensions)</code> ：输入大小，指定为包含两个或多个数值的以逗号分隔的列表，如 <code>(1,2)</code>、<code>(3,5,2)</code> 或 <code>(1,:)</code>。冒号表示该维度可以包含任意长度。</p><ul><li><code>(1, 1) </code>：表示标量</li><li><code>(1, :)</code>：表示行向量</li><li><code>(:, 1)</code>：表示列向量</li><li><code>(: , :)</code>：表示必须是3行的矩阵.</li><li><code>(3, 4)</code>：表示必须是3行, 4列的矩阵.</li></ul></li><li><p><code>class</code> ：输入变量的类型:<code>double</code>, <code>string</code>,<code>char,</code> <code>cell,</code> 或者自定义的class。如果变量类型不符合，会自动进行转化，比如double类型被转化为uint8。</p></li><li><p><code>&#123;validators&#125;</code> - 用于参数验证的函数，验证函数支持<span style="font-weight: bold;" data-type="strong">自定义。</span> 有关验证函数的列表，请参阅 <a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/argument-validation-functions.html">参数验证函数</a>。举例：</p><ul><li><code>mustBeNumeric</code>、<code>mustBeNumericOrLogical</code>、<code>mustBeVector</code></li><li><code>mustBeText</code>、<code>mustBeTextScalar</code> 或 <code>mustBeNonZeroLengthText</code></li><li>将 <code>style</code> 限制为字符串 <code>&quot;--&quot;</code> 和 <code>&quot;:&quot;</code>：<code>style &#123;mustBeMember(style,[&quot;--&quot;,&quot;:&quot;])&#125;   </code></li></ul></li><li><p><code>defaultValue</code> - 默认值必须符合指定的大小、类型和验证规则。<span style="font-weight: bold;" data-type="strong">默认值也可以是表达式</span>。指定默认值会使该参数成为<span style="font-weight: bold;" data-type="strong">可选参数，函数调用传参时候可以不用传</span>。可选参数必须位于函数签名中和 <code>arguments</code> 块中的必需参数后。</p></li></ol><h2 id="我的使用笔记"><a class="markdownIt-Anchor" href="#我的使用笔记"></a> 我的使用笔记</h2><h3 id="支持设置默认参数"><a class="markdownIt-Anchor" href="#支持设置默认参数"></a> 支持设置默认参数</h3><p>默认参数：像python一样设置默认参数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">power_set_supply</span><span class="params">(app, options)</span></span></span><br><span class="line">    <span class="comment">% manual : https://www.siglent.com/u_file/download/22_11_24/SPD3303C_QuickStart_C02A.pdf</span></span><br><span class="line">    <span class="comment">% function : 设置电流电压并选择output</span></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        app Power_supply_control_20230508_Add_PMTcooling</span><br><span class="line">        options.USBAddress string</span><br><span class="line">        options.track uint8 = <span class="number">0</span> <span class="comment">%  0| 1| 2，分别表示（独立，串联，并联）</span></span><br><span class="line">        options.currentCH1 double = <span class="number">3.2</span></span><br><span class="line">        options.currentCH2 double = <span class="number">3.2</span></span><br><span class="line">        options.voltageCH1 double = <span class="number">12</span></span><br><span class="line">        options.voltageCH2 double = <span class="number">12</span></span><br><span class="line">        options.ch1Output &#123;mustBeNumericOrLogical&#125; = <span class="built_in">false</span></span><br><span class="line">        options.ch2Output &#123;mustBeNumericOrLogical&#125;  = <span class="built_in">false</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>默认参数还可以是表达式</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">clip</span><span class="params">(x,x_min,x_max)</span></span></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        x</span><br><span class="line">        x_min = <span class="built_in">min</span>(x,[],<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">        x_max = <span class="built_in">max</span>(x,[],<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    y=<span class="built_in">min</span>(<span class="built_in">max</span>(x,x_min),x_max);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>class的properties也可以设置默认值等arguments的语法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">classdef</span> ColorInRGB</span><br><span class="line">   <span class="keyword">properties</span></span><br><span class="line">      Color (<span class="number">1</span>,<span class="number">3</span>) = [<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">methods</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">obj</span> = <span class="title">ColorInRGB</span><span class="params">(c)</span></span></span><br><span class="line">         <span class="keyword">if</span> nargin &gt; <span class="number">0</span></span><br><span class="line">            obj.Color = c;</span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="参数验证"><a class="markdownIt-Anchor" href="#参数验证"></a> 参数验证</h3><p>除了验证是数字、文本外，下面这个示例还可以设置style必须是指定的字符。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fRepeat</span><span class="params">(x,y,style)</span></span></span><br><span class="line">    <span class="keyword">arguments</span> (Repeating)</span><br><span class="line">        x (<span class="number">1</span>,:) double</span><br><span class="line">        y (<span class="number">1</span>,:) double</span><br><span class="line">        style &#123;mustBeMember(style,[<span class="string">&quot;--&quot;</span>,<span class="string">&quot;:&quot;</span>])&#125;   </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% Reshape the cell arrays of inputs and call plot function</span></span><br><span class="line">    z = <span class="built_in">reshape</span>([x;y;style],<span class="number">1</span>,[]);</span><br><span class="line">    <span class="keyword">if</span> ~<span class="built_in">isempty</span>(z)</span><br><span class="line">        <span class="built_in">plot</span>(z&#123;:&#125;);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="支持自动转化output数据类型"><a class="markdownIt-Anchor" href="#支持自动转化output数据类型"></a> 支持自动转化Output数据类型</h3><p>自动把输出图像变为uint8类型。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rgb_image</span> = <span class="title">rgb_add_area</span><span class="params">(rgb_image,roi_position,colormaps)</span></span></span><br><span class="line">    <span class="comment">% add roi to rgb mask</span></span><br><span class="line">    <span class="keyword">arguments</span> (Input)</span><br><span class="line">        rgb_image (:,:,<span class="number">3</span>) uint8</span><br><span class="line">        roi_position (:,:) logical</span><br><span class="line">        colormaps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">arguments</span> (Output)</span><br><span class="line">        rgb_image uint8</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">% rgb_image = double(rgb_image);</span></span><br><span class="line">    <span class="comment">% Transform 2D logical array to 3D logical array to index 3D Array</span></span><br><span class="line">    roi_3D = <span class="built_in">repmat</span>(roi_position,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">    <span class="comment">% Assign a RGB to the specified position</span></span><br><span class="line">    randowm_rgb_color = colormaps(randi([<span class="number">1</span>,<span class="built_in">length</span>(colormaps)]),:);</span><br><span class="line">    rgb_image(roi_3D) = <span class="built_in">repmat</span>(randowm_rgb_color,sum(roi_position,<span class="string">&#x27;all&#x27;</span>),<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="支持namevalue设置参数"><a class="markdownIt-Anchor" href="#支持namevalue设置参数"></a> 支持name=value设置参数</h3><p>设置默认参数后，函数调用的时候没输入参数也能使用</p><p>函数定义</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">myFunction</span><span class="params">(x,options)</span></span></span><br><span class="line"><span class="keyword">arguments</span> </span><br><span class="line">    x</span><br><span class="line">    options.Name1</span><br><span class="line">    options.Name2</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">y = x;</span><br><span class="line"><span class="built_in">disp</span>(options);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>函数调用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; myFunction(<span class="number">1</span>,Name1=<span class="string">&quot;Hello&quot;</span>,Name2=<span class="string">&quot;Matlab&quot;</span>)</span><br><span class="line">    Name1: <span class="string">&quot;Hello&quot;</span></span><br><span class="line">    Name2: <span class="string">&quot;Matlab&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>⚠注意：错误使用的常见报错</p><p>以下两个例子都是对位置参数使用键值对传参，导致的错误</p><ul><li><p>例子1：报错“输入参数太多”。</p><p><span style="font-weight: bold;" data-type="strong">函数定义</span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">myFunction</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">arguments</span> </span><br><span class="line">    x</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line">y = x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><span style="font-weight: bold;" data-type="strong">函数调用</span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; myFunction(x=<span class="number">1</span>)</span><br><span class="line">错误使用 myFunction</span><br><span class="line">输入参数太多。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>例子2：报错“函数要求名称 ‘Name1’ 之前恰好有 1 个位置输入”。</p><p><span style="font-weight: bold;" data-type="strong">函数定义</span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">myFunction</span><span class="params">(x,options)</span></span></span><br><span class="line"><span class="keyword">arguments</span> </span><br><span class="line">    x</span><br><span class="line">    options.Name1</span><br><span class="line">    options.Name2</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">y = x;</span><br><span class="line"><span class="built_in">disp</span>(options);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><span style="font-weight: bold;" data-type="strong">函数调用</span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;&gt; myFunction(x=<span class="number">1</span>,Name1=<span class="string">&quot;Hello&quot;</span>,Name2=<span class="string">&quot;Matlab&quot;</span>)</span><br><span class="line">错误使用 myFunction</span><br><span class="line"> myFunction(x=<span class="number">1</span>,Name1=<span class="string">&quot;Hello&quot;</span>,Name2=<span class="string">&quot;Matlab&quot;</span>)</span><br><span class="line">              ↑</span><br><span class="line">位置 <span class="number">2</span> 处的参数无效。 函数要求名称 <span class="string">&#x27;Name1&#x27;</span> 之前恰好有 <span class="number">1</span> 个位置输入。</span><br></pre></td></tr></table></figure></li></ul></blockquote><h2 id="官方示例"><a class="markdownIt-Anchor" href="#官方示例"></a> 官方示例</h2><p>见：<a href="https://ww2.mathworks.cn/help/matlab/ref/arguments.html">声明函数参数验证 - MATLAB arguments - MathWorks 中国</a></p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/arguments.html">声明函数参数验证 - MATLAB arguments - MathWorks 中国</a></li><li><a href="https://zhuanlan.zhihu.com/p/344538954">arguments: MATLAB输入检查的新语法 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/617993965">[MATLAB]如何优雅地使用 arguments (一) - 知乎 (zhihu.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 如何正确把图像转为uint8</title>
      <link href="//post/how-does-matlab-turn-the-image-to-uint8-z29w8nb.html"/>
      <url>//post/how-does-matlab-turn-the-image-to-uint8-z29w8nb.html</url>
      
        <content type="html"><![CDATA[<p>虽然官方函数有 <code>im2uint8</code>，然而这个函数只适用于 double 类型范围在 0~1 的数组。</p><p>如果矩阵数据图像是 double 类型（0~1 之间）可直接 im2uint8，这样不仅完成数据类型转换，而且将 0~1 之间映射为了 0~255 之间的数据。但是如果图像矩阵数据是 double 类型的 0~255，直接 im2uint8 转换的话，matlab 会将大于 1 的数据都转换为 255，0~1 之间的数据才会映射到 0~255 之间整型的数据</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; im = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">im =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">&gt;&gt; im2uint8(im)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">2</span>×<span class="number">3</span> uint8 matrix</span><br><span class="line"></span><br><span class="line">   <span class="number">255</span>   <span class="number">255</span>   <span class="number">255</span></span><br><span class="line">   <span class="number">255</span>   <span class="number">255</span>   <span class="number">255</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要先把数据归一化到 0~1，再用 im2uint8，才能把原图的灰度值从[0，1]映射到[0,255]</p><ol><li><code>mat2gray</code> 将数据归一化到 0~1</li><li><code>im2uint8</code> 将归一化后的 0~1，映射为[0,255]</li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; im2uint8(mat2gray(double(im)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">2</span>×<span class="number">3</span> uint8 matrix</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>    <span class="number">51</span>   <span class="number">102</span></span><br><span class="line">   <span class="number">153</span>   <span class="number">204</span>   <span class="number">255</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>虽然官方函数有<code>im2uint8</code>，然而这个函数只适用于 double 类型范围在 0~1 的数组。需要先把数据归一化到 0~1，再用 im2uint8，才能把原图的灰度值从 [0,1] 映射到 [0,255].</p><p>‍</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.ilovematlab.cn/thread-306187-1-1.html?_dsign=c5f24f59">对数变换中，im2uint8(mat2gray(g))怎样理解？ – MATLAB 中文论坛 (ilovematlab.cn)</a></li><li><a href="https://ww2.mathworks.cn/help/images/ref/mat2gray.html?requestedDomain=cn">MATLAB mat2gray - MathWorks 中国</a></li><li><a href="https://ww2.mathworks.cn/help/images/ref/im2uint8.html?requestedDomain=cn">MATLAB im2uint8 - MathWorks 中国</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 有没有像 np.clip 一样的函数，限制数组的最大值和最小值</title>
      <link href="//post/is-there-a-function-like-npclip-like-npclip-limiting-the-maximum-and-minimum-value-of-the-array-1deveo.html"/>
      <url>//post/is-there-a-function-like-npclip-like-npclip-limiting-the-maximum-and-minimum-value-of-the-array-1deveo.html</url>
      
        <content type="html"><![CDATA[<p>其实用max和min叠加就可以实现，限制数组的最大值和最小值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y=<span class="built_in">min</span>(<span class="built_in">max</span>(x,x_min),x_max);</span><br></pre></td></tr></table></figure><p>可以包装为函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">clip</span><span class="params">(x,x_min,x_max)</span></span></span><br><span class="line">    <span class="keyword">arguments</span></span><br><span class="line">        x</span><br><span class="line">        x_min = <span class="built_in">min</span>(x,[],<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">        x_max = <span class="built_in">max</span>(x,[],<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    y=<span class="built_in">min</span>(<span class="built_in">max</span>(x,x_min),x_max);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>💡 这里用到了Matlab arguments 来给x_min和x_max 设置默认值</p></blockquote><p>调用看看</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x = <span class="built_in">reshape</span>(<span class="number">1</span>:<span class="number">9</span>,<span class="number">3</span>,<span class="number">3</span>)&#x27;</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; clip(x,<span class="number">2</span>,<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> = <span class="number">3</span>×<span class="number">3</span>  </span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">7</span>     <span class="number">7</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 如何用二维mask给三维矩阵批量赋值</title>
      <link href="//post/how-does-matlab-give-the-rgb-image-specified-area-and-assign-the-color-in-batches-i1rsr.html"/>
      <url>//post/how-does-matlab-give-the-rgb-image-specified-area-and-assign-the-color-in-batches-i1rsr.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h2><p>我通过细胞分割，得到二维的 roi mask，需要转化为有颜色的 roi mask，即需要把一个个 roi 所在的位置加上随机颜色，有颜色就代表生成的图片会是 RGB 三通道，就需要用二维矩阵的位置信息给三维矩阵赋值。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311051152061.png"></div></div><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><h3 id="已知-roi-的整体位置信息"><a class="markdownIt-Anchor" href="#已知-roi-的整体位置信息"></a> 已知 roi 的整体位置信息</h3><p>二维矩阵通过传入逻辑矩阵，就可以赋值给对应的位置，例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a == <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">3</span>×<span class="number">3</span> logical 数组</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span></span><br><span class="line">   <span class="number">1</span>   <span class="number">1</span>   <span class="number">1</span></span><br><span class="line">   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(a == <span class="number">3</span>) =<span class="number">0</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">0</span>     <span class="number">4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于 RGB 图像这样的三维矩阵而言，同样可以。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">color_mask = <span class="built_in">zeros</span>([<span class="built_in">size</span>(mask), <span class="number">3</span>], <span class="string">&#x27;single&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取指定roi的位置，其所在位置在mask中的取值会是逻辑1</span></span><br><span class="line">roi_position = (mask == <span class="number">1</span>);</span><br><span class="line"><span class="comment">% 把二维的逻辑矩阵变为三维的逻辑矩阵，即在第三维复制三层</span></span><br><span class="line">roi_3D = <span class="built_in">repmat</span>(roi_position,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 这样就可以获取到RGB图像上所有指定的位置上的值了</span></span><br><span class="line">color_mask(roi_3D)</span><br></pre></td></tr></table></figure><p>如果是要批量同时给三个通道加上 RGB 三个颜色，可以将 1×3 的 RGB 颜色复制 n 个，n=roi 像素数目，就可以实现批量给三个通道赋值！</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 这样就可以直接给RGB图像进行批量赋颜色了</span></span><br><span class="line">color_mask(roi_3D) = <span class="built_in">repmat</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">3</span>)*<span class="number">255</span>,sum(roi_position,<span class="string">&#x27;all&#x27;</span>),<span class="number">1</span>); </span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311050245716.png" alt="给空RGB的指定roi区域涂上随机颜色"></div><div class="image-meta"><span class="image-caption center">给空RGB的指定roi区域涂上随机颜色</span></div></div><p>如果是只给一个通道赋值或某两个赋值，用二维roi mask 就可以，不需要转化为 3d mask，见下面的简单示例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 创建示例二维矩阵 masks 和三维矩阵 three</span></span><br><span class="line">masks = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>; <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>; <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">HSV = <span class="built_in">cat</span>(<span class="number">3</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>; <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>], [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>; <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>; <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>; <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>; <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取 masks 中值为 2 的位置</span></span><br><span class="line">mask_indices = masks == <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">HSV(:,:,<span class="number">1</span>) = HSV(:,:,<span class="number">1</span>) .* ~mask_indices + <span class="number">0.3</span> * mask_indices; <span class="comment">% 第二层赋值为0.3</span></span><br><span class="line">HSV(:,:,<span class="number">2</span>) = HSV(:,:,<span class="number">2</span>) .* ~mask_indices + <span class="number">0.4</span> * mask_indices; <span class="comment">% 第二层赋值为0.4</span></span><br></pre></td></tr></table></figure><blockquote><p><code>HSV(:,:,1) .* ~mask_indices</code> 的作用是 roi 区域变为 0，然后再加 <code>0.3 * mask_indices</code>，就可以实现单通道的批量赋值</p></blockquote><h3 id="只知道每个点坐标位置"><a class="markdownIt-Anchor" href="#只知道每个点坐标位置"></a> 只知道每个点坐标位置</h3><p>手动圈选 roi，我只能得到单个 stoke 中每个点的坐标信息，该如何变为 roi 的 outline，在 RGB 图像上绘制颜色呢？</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311050242439.png" alt="手动圈选的ROI只有每个点的坐标信息"></div><div class="image-meta"><span class="image-caption center">手动圈选的ROI只有每个点的坐标信息</span></div></div><p>也可以参考上面的做法，先是通过循环根据每个点的坐标信息给空二维 mask 填入 1，这样得到一个 roi 位置矩阵后，将其转化维三维矩阵，即可通过索引赋值实现需求。</p><p>另外一个不用循环的做法是利用 sub2ind 函数，批量把一系列坐标变为线性索引，从而实现批量赋值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">outline = <span class="built_in">zeros</span>(<span class="built_in">size</span>(mask), <span class="string">&#x27;single&#x27;</span>);</span><br><span class="line">linearIndices = <span class="built_in">sub2ind</span>(<span class="built_in">size</span>(outline), <span class="built_in">round</span>(stroke(:, <span class="number">2</span>)),<span class="built_in">round</span>(stroke(:, <span class="number">1</span>)));</span><br><span class="line">outline(linearIndices) = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311050139194.png" alt="使用sub2ind可以把坐标批量变为线性索引，从而实现批量赋值"></div><div class="image-meta"><span class="image-caption center">使用sub2ind可以把坐标批量变为线性索引，从而实现批量赋值</span></div></div><p>之所以要用sub2ind，而不是直接 <code>outline(round(stroke(:, 2)),round(stroke(:, 1)))</code>，是因为matlab 索引传入列表的时候会认为你要提取子矩阵，而不是对应索引的的几个点</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.5752</span>    <span class="number">0.3532</span>    <span class="number">0.0430</span></span><br><span class="line">    <span class="number">0.0598</span>    <span class="number">0.8212</span>    <span class="number">0.1690</span></span><br><span class="line">    <span class="number">0.2348</span>    <span class="number">0.0154</span>    <span class="number">0.6491</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = a([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">2</span>]) # 返回的值并不是以为的(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">2</span>,<span class="number">2</span>)两个点，而是得到第一行到第二行的第二列，由于第二个维度输入了两个<span class="number">2</span>，重复返回第二列的值，于是得到四个点</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.3532</span>    <span class="number">0.3532</span></span><br><span class="line">    <span class="number">0.8212</span>    <span class="number">0.8212</span></span><br></pre></td></tr></table></figure><p>如果希望填充的是 roi 的整个区域，而不是 roi 轮廓，可以使用 poly2mask，可以直接把 roi 轮廓变为 mask</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img_size = <span class="built_in">size</span>(mask);</span><br><span class="line">roi_mask = poly2mask(stroke(:,<span class="number">1</span>), stroke(:,<span class="number">2</span>),img_size(<span class="number">1</span>),img_size(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311050113082.png" alt="poly2mask，可以直接把roi轮廓变为roi"></div><div class="image-meta"><span class="image-caption center">poly2mask，可以直接把roi轮廓变为roi</span></div></div><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>这篇博客介绍了如何将二维的 ROI mask 转化为有颜色的 ROI mask。提供了两种解决方案。第一种是已知 ROI 的整体位置信息，可以直接利用逻辑矩阵的位置信息给三维矩阵赋值，实现批量填充颜色。第二种是只知道每个点的坐标位置，可以通过循环或者 sub2ind 函数将坐标转化为线性索引，然后进行批量赋值。此外，如果希望填充整个 ROI 区域而不是轮廓，可以使用 poly2mask 函数将 ROI 轮廓转化为 ROI mask。</p><p>‍</p><p>‍</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://blog.csdn.net/YaoYee_21/article/details/110248515">【Matlab】如何提取矩阵中特定位置的元素？_matlab sub2ind 提取矩阵中每一行的特定元素-CSDN博客</a></li></ul><p>‍</p><p>‍</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 直接用 if 判断矩阵的返回值</title>
      <link href="//post/matlab-directly-judges-the-return-value-of-the-matrix-with-if-zqyaqj.html"/>
      <url>//post/matlab-directly-judges-the-return-value-of-the-matrix-with-if-zqyaqj.html</url>
      
        <content type="html"><![CDATA[<p>matlab if 判断一个矩阵是判断都为1，只要有一个不为1，就返回false</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="built_in">ones</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line"><span class="keyword">if</span>  a</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is true&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is false&quot;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">This is <span class="built_in">true</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a(<span class="number">1</span>,<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>  a</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is true&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is false&quot;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">This is <span class="built_in">false</span></span><br></pre></td></tr></table></figure><p>如果只是要判断矩阵有大于1的数，就希望返回true，可以用any</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="built_in">ones</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line">a(<span class="number">1</span>,<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>  any(a,<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is true&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is false&quot;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">This is <span class="built_in">true</span></span><br></pre></td></tr></table></figure><blockquote><p>⚠ 如果要判断矩阵都为0的时候，希望返回true，不可以用isempty，isempty只是针对空数组才返回0，zeros数组可不为空</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="built_in">zeros</span>(<span class="number">512</span>,<span class="number">512</span>);</span><br><span class="line"><span class="keyword">if</span>  <span class="built_in">isempty</span>(a)</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is true&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&quot;This is false&quot;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">This is <span class="built_in">true</span></span><br></pre></td></tr></table></figure></blockquote><p>‍</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>在Matlab中，我们可以使用if语句来判断一个矩阵中的元素是否全为1。如果矩阵中的所有元素都是1，那么条件为真，返回true；如果存在至少一个不为1的元素，那么条件为假，返回false。另外，如果我们只是想判断矩阵中是否存在大于1的数，可以使用any函数。当矩阵中存在大于1的数时，条件为真，返回true；否则，条件为假，返回false。通过这样的判断，我们可以根据需要编写相应的代码逻辑。</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>号外：GLaDOS签到白嫖已经不容易了</title>
      <link href="//post/outside-the-number-glados-sign-in-baiji-is-not-easy-anymore-z2vxoy1.html"/>
      <url>//post/outside-the-number-glados-sign-in-baiji-is-not-easy-anymore-z2vxoy1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>💡 Background</p><p>我之前入坑 GLaDOS 时，觉得 GLaDOS 简直是最良心的机场了，教育邮箱免费送 365 天，虽然送的套餐速度特别慢，但是只要花钱买一个 100 天 Basic 的，教育邮箱的 365 天也会叠加上去，变成 465 天 Basic 套餐。并且 GLaDOS 还可以签到一天送一天，简直是穷苦大学生福音呀！</p></blockquote><p>2023.11.04 晚上，我觉得机场速度有点慢，想升级下套餐，于是购买了 GlaDOS 的 Pro 套餐 100 天花费 20 美刀，差不多 140 元（买完之后才发现可以满 100 减 20，呜呜呜/(ㄒoㄒ)/~~）~</p><p>不过 Pro 套餐的 100 天 + 原来的 365 天，现在就有 465 天啦！希望之后的网速体验好些！</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311052038630.png" alt="GLaDOS的套餐"></div><div class="image-meta"><span class="image-caption center">GLaDOS的套餐</span></div></div><p>嗯，额，咦！！！！</p><p>在购买之前，我怎么只有 365 天了套餐了，按理来说我是免费的教育套餐 365+ 额外购买的 Basic 套餐 100 天，应该是 465 天左右才对呀！</p><p>去看下 GlaDOS 的签到才发现，可能从八月份起，就没有再签到了，自己原来利用 Github Action 进行签到的 repo 已经被关掉了。也简单搜了下，发现应该是官方去和 Github 反馈了，一系列用 Github Action 自动打卡的 repo 都被封了。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042332411.png"></div></div><p>此外，目前 GLaDOS 的签到赠送天数也从原来签到就送一天，变为了签到随机赠送 Points，满 100 Points 兑换 10 天会员。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042332008.png"></div></div><p>以后可能就老实每天打卡了，毕竟 GLaDOS 目前还有 465 天，等用完了之后再看看有没有更好更实惠的机场吧！</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11 23H2 更新 | Windows Copilot 来袭！</title>
      <link href="//post/20231104-updated-win11-23h2-1xki6y.html"/>
      <url>//post/20231104-updated-win11-23h2-1xki6y.html</url>
      
        <content type="html"><![CDATA[<h2 id="更新方法"><a class="markdownIt-Anchor" href="#更新方法"></a> 💡 更新方法</h2><p>我没有收到自动更新的提示，是直接去微软官网下载Windows11InstallationAssistant.exe更新的</p><p>更新前需要在设置中把区域改成美国</p><h2 id="更新后很棒的功能"><a class="markdownIt-Anchor" href="#更新后很棒的功能"></a> ⭐ 更新后很棒的功能</h2><p>第一，桌面端就有Copilot了，win+C可以快速启用，不仅可以生成文字还能生成图，还可以<span style="font-weight: bold;" data-type="strong">执行打开应用</span>等系统指令操作，但需要注意的是需要机场才可以用的，一般而言，edge上的bing chat能用这个也能用。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130234778.png" alt="Windows"></div><div class="image-meta"><span class="image-caption center">Windows</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311052037042.png" alt="Windows"></div><div class="image-meta"><span class="image-caption center">Windows</span></div></div><p>第二，文件管理器也更新了几个功能，最大惊喜是增加了图库，我从今年开始，由于买了相机，相机的照片就一般放在电脑里而不放在手机了，图库功能对我来说挺棒的！</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042309124.png" alt="copilot能在桌面直接打开"></div><div class="image-meta"><span class="image-caption center">copilot能在桌面直接打开</span></div></div>  <p>第三，截图工具终于支持OCR了，之前要OCR要么把图片粘贴给微信，要么用utools的OCR插件，有内置的还是很好用的</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311051120852.png"></div></div><p>第四，实时字幕支持很多语言了，支持中文，但是没有翻译功能</p><p>其他更新比如文件管理器支持解压rar、任务栏支持不合并、画图可以用ai生成图片和去除背景对我来说没啥太大用处。</p><p>‍</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.bilibili.com/video/BV1UN4y1678W/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">Windows 11 最新版（23H2）官方正式发布！新增8个实用功能，附最新安装教程，绕过TPM模块和内存限制 ！！ | 零度解说_哔哩哔哩_bilibili</a></li><li><a href="https://blogs.windows.com/windowsexperience/2023/09/26/the-most-personal-windows-11-experience-begins-rolling-out-today/">The most personal Windows 11 experience begins rolling out today | Windows Experience Blog</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动售货机怎么知道你拿了什么</title>
      <link href="//post/how-do-you-know-what-you-took-by-automatic-vending-machine-jeapx.html"/>
      <url>//post/how-do-you-know-what-you-took-by-automatic-vending-machine-jeapx.html</url>
      
        <content type="html"><![CDATA[<p>研究生的学校这学期，科研楼和宿舍楼下的新增了自动售货机，不是传统售货机那样，在外面选择商品，然后弹出来。而是扫码或人脸识别之后，就可以打开冰柜门，自由挑选，想拿多少拿多少（取决于钱包）。非常好奇其原理，于是简单查了查。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042334778.jpg" alt="学校的自动售货机"></div><div class="image-meta"><span class="image-caption center">学校的自动售货机</span></div></div><p>这类可开门的自动售货机大概有四种原理</p><ol><li><p>RFID超高频识别：用上这种技术的售货机，商品上会贴一张RFID标签，当你把它拿出来后，标签就会穿过售货机内部的磁场，产生感应电流，并向外发射特定频率的无线电信号。售货机中的阅读器接收到对应信号，就能完成结算，扣掉你的钱。</p><ul><li>问题：每件商品上都需要贴电子标签</li></ul></li><li><p>静态识别：在每一层货架上都安装一个摄像头，俯视这一层的商品，在你开关门的时候，它会分别拍下两张照片，服务器比对商品信息，完成结算。</p><ul><li>问题：每层都要安装摄像头，不仅硬件成本高，而且每层还得留出一定高度。</li></ul></li><li><p>视觉动态识别：摄像头并不装在货架上，而是装在售货机的顶层，在你拿取商品时，它会拍下一小段视频上传到服务器，服务器会通过算法识别出图像中的商品信息，然后再做结算。</p><ul><li>问题：不能保证100%识别正确，一旦摄像头被遮挡，就无法识别</li></ul></li><li><p>重力感应识别：每层都放一个重力感应器，拿完商品后，它会根据重量变化识别商品，完成结算</p><ul><li>问题：有些产品重量相似，价格可能有差异，无法区分</li></ul></li></ol><p>学校上的自动售货机是广东哈士奇制冷科技股份有限公司出品的，其智能冰柜的介绍就有“综合运用RFID超高频识别技术、重力感应技术和视觉识别技术，打造24小时无人智能零售空间”的广告语，我也尝试查了中国专利，暂时没找到该公司相关专利。考虑到我从冰柜里买的饮料并没有RFID标签，大概率学校的自动售货机是综合运用了重力感应技术和视觉识别技术，毕竟光靠机器视觉识别不一定准确，再加上摄像头一旦被遮挡就无法正确识别。</p><p>要证明视觉识别技术很容易，我在冰柜门顶部已经发现了两个摄像头。要证明重力感应，也不难，只要有人遮住摄像头，拿走一个商品，如果还能判断你拿的是什么，就说明也用上了。但是我不敢，希望有勇士站出来，去勇敢验证！勇敢冲！</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042303912.jpg" alt="终于找到它的摄像头了！一开始以为在货架顶端"></div><div class="image-meta"><span class="image-caption center">终于找到它的摄像头了！一开始以为在货架顶端</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311042254537.jpg" alt="希望有人去遮挡摄像头，看看会不会真的影响个人征信啥的"></div><div class="image-meta"><span class="image-caption center">希望有人去遮挡摄像头，看看会不会真的影响个人征信啥的</span></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://mp.weixin.qq.com/s/rciXRAAaKQpjNyUwIyy48Q">自动售货机怎么知道你拿了啥？你能骗过它吗？| 图文 (qq.com)</a></li><li><a href="https://www.hongdian.com/m2m/soluview_100000112383341.html">重力感应售货机无线联网方案 (hongdian.com)</a></li><li><a href="https://henan.china.com/m/news/roll/2022/0216/022022_249336.html">商用智能化丨HCK哈士奇创新推出新一代无人化、智能化新品商用冷柜-中华新闻 (china.com)</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活百科 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 区别 Ctrl+ 鼠标左键和鼠标右键单击</title>
      <link href="//post/matlab-different-ctrl-mouse-right-and-mouse-right-click-1f0inv.html"/>
      <url>//post/matlab-different-ctrl-mouse-right-and-mouse-right-click-1f0inv.html</url>
      
        <content type="html"><![CDATA[<p>Matlab 版本：2023b</p><p>Matlab 的 UIFigure WindowButtonDownFcn 回调可以监听鼠标点击事件，UIFigure.SelectionType 记录了鼠标点击情况，只返回以下四个值：</p><ul><li><p><code>normal</code>：代表单击鼠标左键；</p></li><li><p><code>extend</code>：代表 Shift+ 左键、鼠标中键或左右键一起按</p><ul><li>备注：实测左右键一起按没用，事实上一般人也不会左右键一起按</li></ul></li><li><p><code>alt</code>：代表 Ctrl+ 左键，或者单击右键；</p></li><li><p><code>open</code>：代表双击鼠标任意键</p><ul><li>备注：我实测只有双击鼠标左键才会返回 open，双击右键不会</li></ul></li></ul><p>可以看到 Matlab 非常脑残地用 alt 同时代表 Ctrl+左键或单击右键，而我的项目又需要 Ctrl+ 左键和右键分别代表不同的事件，所以尝试写代码进行区分：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">fig = uifigure();</span><br><span class="line">fig.WindowButtonDownFcn = @figureClickCallback;</span><br><span class="line">fig.WindowKeyPressFcn = @figureKeyPressCallback;</span><br><span class="line">fig.WindowKeyReleaseFcn = @figureKeyReleaseCallback;</span><br><span class="line">fig.UserData.CtrlPressed = <span class="built_in">false</span>;</span><br><span class="line">fig.UserData.ShiftPressed = <span class="built_in">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">figureClickCallback</span><span class="params">(src, ~)</span></span></span><br><span class="line">    <span class="keyword">switch</span> src.SelectionType</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;normal&#x27;</span></span><br><span class="line">            <span class="built_in">disp</span>(<span class="string">&#x27;Left Click&#x27;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;alt&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> src.UserData.CtrlPressed</span><br><span class="line">                <span class="built_in">disp</span>(<span class="string">&#x27;Ctrl + Left Click&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">disp</span>(<span class="string">&#x27;Right Click&#x27;</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;extend&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> src.UserData.ShiftPressed</span><br><span class="line">                <span class="built_in">disp</span>(<span class="string">&#x27;Shift + Left Click&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">disp</span>(<span class="string">&#x27;Middle Click&#x27;</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;open&#x27;</span></span><br><span class="line">            <span class="built_in">disp</span>(<span class="string">&quot;Double Click&quot;</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">figureKeyPressCallback</span><span class="params">(src, event)</span></span></span><br><span class="line">    <span class="keyword">switch</span> event.Key</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;control&#x27;</span></span><br><span class="line">             src.UserData.CtrlPressed = <span class="built_in">true</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;shift&#x27;</span></span><br><span class="line">            src.UserData.ShiftPressed = <span class="built_in">true</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">figureKeyReleaseCallback</span><span class="params">(src, event)</span></span></span><br><span class="line">    <span class="keyword">switch</span> event.Key</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;control&#x27;</span></span><br><span class="line">             src.UserData.CtrlPressed = <span class="built_in">false</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;shift&#x27;</span></span><br><span class="line">            src.UserData.ShiftPressed = <span class="built_in">false</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>💡 <span style="font-weight: bold;" data-type="strong"> </span> 这里妙用了 Figure 的 UserData，设置一个 CtrlPressed 和 ShiftPressed 字段来存储是否按住了 Ctrl 和 Shift 键，不需要额外设置一个全局变量。</p></blockquote><blockquote><p>⚠ 注意：Matlab UIFigure KeyPressFcn 和 WindowKeyPressFcn 不一样</p><ul><li><code>KeyPressFcn</code> is evaluated only when the figure has focus (but not its children).</li><li><code>WindowKeyPressFcn</code>, on the other hand, is evaluated whenever the figure or any of its children has focus.</li></ul><p>对于要判断Ctrl是否按下，需要用WindowKeyPressFcn，如果用KeyPressFcn，一旦点击GUI其他组件，可能就失效，而调用鼠标左键的函数了。</p><p>ref：<a href="https://stackoverflow.com/questions/25174400/matlab-difference-between-keypressfcn-and-windowkeypressfcn">matlab: difference between KeyPressFcn and WindowKeyPressFcn - Stack Overflow</a></p></blockquote><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Matlab 绘制钙成像热图，并使用kmeans聚类</title>
      <link href="//post/draw-calcium-imaging-hot-pictures-with-matlab-and-use-kmeans-clustering-qp7bq.html"/>
      <url>//post/draw-calcium-imaging-hot-pictures-with-matlab-and-use-kmeans-clustering-qp7bq.html</url>
      
        <content type="html"><![CDATA[<p>得逐渐学习怎么分析实验数据了呢</p><h2 id="用-matlab-绘制钙成像热图并使用kmeans聚类"><a class="markdownIt-Anchor" href="#用-matlab-绘制钙成像热图并使用kmeans聚类"></a> 用 Matlab 绘制钙成像热图，并使用kmeans聚类</h2><p>总结下几个难点</p><ol><li>kmeans每次聚类效果不一样，发现可以通过设置start解决</li><li>聚类完且绘制完热图如何显示神经元所属的标签，找到了slandarer大佬写的SClusterBlock函数，可以指定分组bar的位置，还能返回分组bar每个类别的中心位置方便加上文字标签</li><li>我想要自由移动分组bar和colorbar，但发现调到右边很容易就在figure上不显示了，思考了下发现，原来在Matlab中，figure就像一个画布，axes则是通过Position指定在画布上画的位置，所有axes加起来，宽度不能超过1，高度不能超过1，否则就会有图像可能超出找不到。更简单的方式是先绘图，然后在figure窗口更改axes位置，生成代码。领悟到这点，以后就可以通过组合axes，更自由绘图了呢</li></ol><p>关于钙荧光信号的聚类，最简单粗暴的就是kmeans了吧，但看到有文章用回归模型来聚类，不太懂，了解下</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130243430.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130243924.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130243993.png"></div></div><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成随机的神经元钙信号数据</span></span><br><span class="line">data = <span class="built_in">readtable</span>(<span class="string">&#x27;suite2p_ROI_data_added_columns.csv&#x27;</span>,<span class="string">&#x27;ReadVariableNames&#x27;</span>,<span class="built_in">true</span>) <span class="comment">% csv有header</span></span><br><span class="line">cells = data(data.is_cell == <span class="number">1</span>,:)</span><br><span class="line">cells_activity = cells(:, <span class="number">2</span>:<span class="number">1200</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 使用k-means算法进行聚类</span></span><br><span class="line">numClusters = <span class="number">5</span>;  <span class="comment">% 聚类数量</span></span><br><span class="line">data_t  = table2array(cells_activity);</span><br><span class="line">[idx, centroids] = kmeans(data_t, numClusters,<span class="string">&#x27;Start&#x27;</span>, <span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">1199</span>));</span><br><span class="line"></span><br><span class="line">class_name = string(<span class="number">1</span>:numClusters);</span><br><span class="line"></span><br><span class="line">[sortedResult, sortedIdx] = <span class="built_in">sort</span>(idx);</span><br><span class="line"></span><br><span class="line">sortedNeuronData = data_t(sortedIdx, :);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 可视化聚类结果</span></span><br><span class="line">fig=<span class="built_in">figure</span>(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">100</span>,<span class="number">100</span>,<span class="number">800</span>,<span class="number">800</span>]);</span><br><span class="line">axMain=axes(<span class="string">&#x27;Parent&#x27;</span>,fig);</span><br><span class="line">axMain.Position=[<span class="number">0.06</span>,<span class="number">.1</span>,<span class="number">.80</span>,<span class="number">.80</span>];</span><br><span class="line">P=axMain.Position;</span><br><span class="line">imagesc(axMain,sortedNeuronData);</span><br><span class="line">axMain.YAxisLocation=<span class="string">&#x27;left&#x27;</span>; </span><br><span class="line">colormap(sky);</span><br><span class="line">cb = colorbar(<span class="string">&#x27;Location&#x27;</span>,<span class="string">&#x27;eastoutside&#x27;</span>);</span><br><span class="line">set(cb,<span class="string">&quot;Position&quot;</span>,cb.Position+[<span class="number">0.12</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-0.6</span>]);</span><br><span class="line">xlabel(<span class="string">&#x27;Frame&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;Neurons&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;calcium imaging heatmap&#x27;</span>);</span><br><span class="line"></span><br><span class="line">axBlockL=axes(<span class="string">&#x27;Parent&#x27;</span>,fig);</span><br><span class="line">axBlockL.Position=[<span class="number">0.86</span>,P(<span class="number">2</span>),P(<span class="number">3</span>)/<span class="number">20</span>,P(<span class="number">4</span>)];</span><br><span class="line">[X,Y]=SClusterBlock(sortedResult,<span class="string">&#x27;Orientation&#x27;</span>,<span class="string">&#x27;left&#x27;</span>,<span class="string">&#x27;Parent&#x27;</span>,axBlockL);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(X)</span><br><span class="line">    text(axBlockL,X(<span class="built_in">i</span>),Y(<span class="built_in">i</span>),class_name(<span class="built_in">i</span>),<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">17</span>,<span class="string">&#x27;HorizontalAlignment&#x27;</span>,<span class="string">&#x27;center&#x27;</span>,<span class="string">&#x27;FontName&#x27;</span>,<span class="string">&#x27;Cambria&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="根据聚类效果画每个cluster的平均图"><a class="markdownIt-Anchor" href="#根据聚类效果画每个cluster的平均图"></a> 根据聚类效果画每个cluster的平均图</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 绘制每个cluster 钙信号平均图</span></span><br><span class="line">ColorList=...</span><br><span class="line">    [<span class="number">0.5529</span>    <span class="number">0.8275</span>    <span class="number">0.7804</span></span><br><span class="line">    <span class="number">1.00</span> <span class="number">0.07</span> <span class="number">0.65</span></span><br><span class="line">    <span class="number">0.7451</span>    <span class="number">0.7294</span>    <span class="number">0.8549</span></span><br><span class="line">    <span class="number">0.9843</span>    <span class="number">0.5020</span>    <span class="number">0.4471</span></span><br><span class="line">    <span class="number">0.5020</span>    <span class="number">0.6941</span>    <span class="number">0.8275</span></span><br><span class="line">    <span class="number">0.9922</span>    <span class="number">0.7059</span>    <span class="number">0.3843</span></span><br><span class="line">    <span class="number">0.7020</span>    <span class="number">0.8706</span>    <span class="number">0.4118</span></span><br><span class="line">    <span class="number">0.9882</span>    <span class="number">0.8039</span>    <span class="number">0.8980</span></span><br><span class="line">    <span class="number">0.8510</span>    <span class="number">0.8510</span>    <span class="number">0.8510</span></span><br><span class="line">    <span class="number">0.7373</span>    <span class="number">0.5020</span>    <span class="number">0.7412</span></span><br><span class="line">    <span class="number">0.8000</span>    <span class="number">0.9216</span>    <span class="number">0.7725</span></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">0.9294</span>    <span class="number">0.4353</span>];</span><br><span class="line"></span><br><span class="line">fig_signal = <span class="built_in">figure</span>();</span><br><span class="line">ax_signal = axes(<span class="string">&#x27;Parent&#x27;</span>,fig_signal);</span><br><span class="line"><span class="built_in">hold</span>(ax_signal,<span class="string">&quot;on&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> i_cluster = <span class="number">1</span>:numClusters</span><br><span class="line">    <span class="comment">% find indeces of traces where cluster label equals to Ki</span></span><br><span class="line">    i_signal = data_t(labels == i_cluster,:);</span><br><span class="line">    <span class="comment">% calculate average activity trace for cluster Ki</span></span><br><span class="line">    md  = <span class="built_in">mean</span>(i_signal , <span class="number">1</span>);</span><br><span class="line">    s = std(i_signal,<span class="number">1</span>) </span><br><span class="line">    <span class="comment">% ！注意，这里进行了标准化,方便看每类神经元的活动normalize so that each trace is between 0 and 1</span></span><br><span class="line">    md= rescale(md)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% plot</span></span><br><span class="line">    xs = <span class="number">1</span>:<span class="built_in">length</span>(md);</span><br><span class="line"></span><br><span class="line">    <span class="comment">%fill([xs fliplr(xs)], [md+i_cluster-1-s fliplr(md+i_cluster-1+s)],[0.2,0.2,0.2],&quot;FaceAlpha&quot;,0.15,&#x27;EdgeColor&#x27;,&#x27;none&#x27;);</span></span><br><span class="line">    <span class="built_in">plot</span>(xs,md+i_cluster<span class="number">-1</span>,<span class="string">&#x27;Color&#x27;</span>,ColorList(i_cluster,:),<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">1.5</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">ax_signal.YTick=[];</span><br><span class="line">ax_signal.YLim=[<span class="number">0</span>,numClusters];</span><br><span class="line">title(<span class="string">&#x27;Average activity of each cluster&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> i_cluster = <span class="number">1</span>:numClusters</span><br><span class="line">    text(<span class="number">-46.5</span>, i_cluster<span class="number">-0.5</span>, [<span class="string">&#x27;c&#x27;</span>,num2str(i_cluster)]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>‍</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311011402172.png"></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://focalplane.biologists.com/2022/09/06/first-steps-for-presentation-and-analysis-of-calcium-imaging-data/">First steps for presentation and analysis of calcium imaging data - FocalPlane (biologists.com)</a></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 神经科学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Matlab </tag>
            
            <tag> 科研绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极性如何让水变得特殊</title>
      <link href="//post/how-to-make-water-special-zi87c0.html"/>
      <url>//post/how-to-make-water-special-zi87c0.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>做这篇笔记的起因：看《Neuroscience: Exploring the Brain》的Chapter3 讲到水的极性使得一个良好的溶剂，其他带电的或极性分子易溶于水。大学化学没学好，高中化学早忘光了，简单补一补关于离子键、共价键、极性、氢键的知识。查完资料，表示日常见的水原来这么神奇，非常惊叹！</p></blockquote><p>我们地球的70%是海水，我们身体的65%是由水组成的，很难不意识到它在我们生活中的重要性。这个简单的事实就是为什么科学家们不断地在其他星球上寻找水——水的存在可能表明生命的存在。</p><p>水虽然被认为是生命之源，但它身上有很多奇异甚至反常之处，比如固态的水（冰）密度比液态的水还小（所以冰块才会浮在水面上），比如水几乎是最难以被压缩的液体。这一切都和水独特的分子结构有关</p><h2 id="水的极性与氢键"><a class="markdownIt-Anchor" href="#水的极性与氢键"></a> 水的极性与氢键</h2><p>水的分子结构很简单，H2O，它由一个氧原子和两个氢原子组成。每个氢原子通过一对共享的电子与氧共价键合，同时氧也有两对不共享的电子。因此，氧原子周围有4对电子，两对电子与氢形成共价键，两对电子位于氧原子的另一面。与氢相比，氧的电负性比氢高，即更容易吸引电子。于是水分子的电子密度分布不均匀，由于不共享的电子对，水在氧原子附近有部分负电荷（δ - ），在氢原子附近有部分正电荷（δ + ）。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233011.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233723.png"></div></div><p>氢原子附近的部分正电荷和氧原子附近的部分负电荷之间的静电吸引导致水分子互相吸引，同时亦使它们和其他极性分子互相吸引。这种吸引力被称为氢键。水的极性和氢键解释了许多水的特性：</p><ul><li>离子和其他分子溶于水的能力是由于极性</li><li>冰漂浮是因为氢键使水分子在固体中比在液体中相距更远，在液体中每个分子少一个氢键</li><li>水独特的物理性质，包括高沸点、强表面张力、高比热和几乎通用的溶剂性质也是由于氢键</li></ul><p>‍</p><h2 id="溶剂万能溶剂"><a class="markdownIt-Anchor" href="#溶剂万能溶剂"></a> 溶剂：万能溶剂</h2><p>水被称为万能溶剂，因为溶解在水中的物质比溶解在任何其他化学物质中的物质都多。这与每个水分子的极性有关。</p><p>每个水分子的氢侧携带轻微的正电荷，而氧侧携带轻微的负电荷。这有助于水将离子化合物分解（分离）成它们的正离子和负离子。离子化合物的正部分被水的氧侧吸引，而化合物的负部分被水的氢侧吸引。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233756.png"></div></div><p>水的溶解性对于细胞内的化学反应和分子运输至关重要。</p><p>离子化合物、极性分子（如葡萄糖和氨基酸）可以与水分子相互作用，并溶解在水中，容易与水相互作用或溶解在水中的极性物质被称为亲水性物质hydrophilic (hydro- = “water”; -philic = “loving”)。但水对非极性物质如脂肪和烃类物质的溶解能力较弱，这些非极性化合物被称为疏水性化合物hydrophobic (hydro- = “water”; -phobic = “fearing”)。</p><p>水在细胞内和生物体中用作运输介质。极性分子通常通过水的溶解来传输，例如，营养物质和废物。</p><p>由于水分子的极性特性，非极性物质在水中往往不能与水分子相互作用，因此它们倾向于聚集在一起，减少与水分子的接触。这种现象被称为疏水作用。</p><p>疏水作用在生物体中起着重要的作用，例如脂肪酸和磷脂等疏水性分子在细胞膜的形成和稳定中发挥着关键的作用。由于脂质分子的疏水性，它们在水中会自发地聚集在一起，使疏水性的烃尾部相互接触，从而减少与水分子的接触。这种自组装过程形成了脂质双层结构，其中疏水性的烃尾部朝向内部，亲水性的磷酸头部朝向外部与水分子相互作用。疏水作用使脂质双层紧密结合，形成了细胞膜的基本结构。疏水作用的强大使得细胞膜能够自发地形成，并保持其稳定性。这种稳定性是细胞膜在维持细胞内外环境差异、调节物质的进出等生物学功能中至关重要的。</p><h2 id="密度热胀冷也胀"><a class="markdownIt-Anchor" href="#密度热胀冷也胀"></a> 密度：热胀冷也胀</h2><p>密度是质量与体积的比率，密度较大的物体容易下沉，而密度较小的物体容易漂浮。大多数物体的密度随着温度的变化而略有变化。一般来说，温度越高，物质的密度越小，因为更大的随机动能会使分子散开。物体受热时膨胀的量称为膨胀系数。</p><p>水的密度又是一个特例。水在3.98°C时密度最大，当它从这个温度冷却或变暖时，水会轻微膨胀，热胀冷也胀。</p><p>这意味着冰的密度比冷水稍小，这就是冰漂浮在水体表面的原因。水是少数固态能浮在液态上的物质之一！</p><p>在冰的结构中，每个氧原子与4个氢原子相连接而成四面体，每个氢原子与两个氧原子相连结。即氧原子的四个键(两个共价键，两个氢键)，指向一个四面体的四个顶点，每个水分子都被四个水分子所包围。但冰是一种很不紧凑的结构，这种四面体结构对空间的利用率较低，只有34%。当冰熔解时，一些氢键被破坏，四面体结构被瓦解，水分子可以比较紧密地堆积在一起，因此，冰在熔解时体积要缩小。因此冰比水疏松，密度只有水的0.9倍。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233668.png"></div></div><p>‍</p><p>从生态学意义上来看，浮冰通过隔离下面的水来减缓冻结过程，最冷的水在上方，湖泊底的水依然有4℃，保护水下的生物免受极端寒冷的影响。如果冰不能漂浮，湖水将自下而上冻结，杀死湖中所有的生态系统！</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233440.png" alt="湖水底部温度为4℃"></div><div class="image-meta"><span class="image-caption center">湖水底部温度为4℃</span></div></div><p>‍</p><h2 id="沸点和冰点"><a class="markdownIt-Anchor" href="#沸点和冰点"></a> 沸点和冰点</h2><p>尽管分子量很小，但它的沸点却高得令人难以置信（100摄氏度）。这是因为水在开始沸腾之前需要更多的能量来打破氢键。同样的概念也适用于冰点，水的冰点也比较高，这是由于冰的晶体结构中的水分子排列相对稳定，需要较高的能量才能破坏这种结构，所以水的冰点较高。水的沸点和冰点使分子能够非常缓慢地沸腾或冻结，这对生活在水中的生态系统非常重要。如果水很容易结冰或沸腾，环境的剧烈变化会影响水体，如海洋或湖泊，并导致所有生活在水中的生物死亡。</p><blockquote><p><span style="font-weight: bold;" data-type="strong">水和其他化合物的沸点冰点比较</span></p><table><thead><tr><th>化合物</th><th>沸点（摄氏度）</th><th>冰点（摄氏度）</th></tr></thead><tbody><tr><td>水（H2O）</td><td>100</td><td>0</td></tr><tr><td>乙醇（C2H5OH）</td><td>78.5</td><td>-114</td></tr><tr><td>甲烷（CH4）</td><td>-161.5</td><td>-182.5</td></tr><tr><td>氨（NH3）</td><td>-33.3</td><td>-77.7</td></tr><tr><td>氯化氢（HCl）</td><td>-85.1</td><td>-114.2</td></tr></tbody></table></blockquote><h2 id="比热容"><a class="markdownIt-Anchor" href="#比热容"></a> 比热容</h2><p>比热容是将一克物质的温度升高一摄氏度所需的热量。每种物质都有自己的比热容，水的比热容为1 cal/（g℃）。</p><p>水的比热容远高于其他普通物质。为了便于比较，油的比热容约为0.5cal/（g℃），铝的比热容约为0.2 cal/（g℃）。这意味着，与提高油或铝的温度相比，提高水的温度需要更多的热量。</p><p>水的高比热有助于地球温度保持适中，因为水在白天吸收热量，在晚上缓慢释放热量。因此，地球表面的温度变化不大，从56.7 °C到−89.2 °C不等。相比之下，月球没有液态水，其温度范围从150 °C 到-180°C。（月球上缺乏大气层，以及其他因素，也是造成温度范围大的原因之一。）</p><h2 id="表面张力"><a class="markdownIt-Anchor" href="#表面张力"></a> 表面张力</h2><p>除了水银，由于水具有所有非金属液体中最大的表面张力值72.8 mN/m（20℃），使水滴保持相对稳定。</p><p>表面张力是液体表面的一种特性，由于其分子的内聚力，这种特性使液体能够抵抗外力。在水中，氧原子的部分负电荷会与其他水分子的部分正电荷形成氢键。这种氢键的形成导致水分子之间存在相互吸引的力量，即内聚力，使得水分子倾向于聚集在一起。这种聚集现象使得水在表面形成一个紧密的分子层，从而形成表面张力。</p><p>表面张力是在水面上破皮所需的力的量度。其他液体也有表面张力，但由于氢键，水中的表面张力相当强。于是杯子里的水位实际上比杯子的高度要高依然不溢出、一些昆虫可以直接在水上行走、露水呈球形。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310251434078.png" alt="露水呈球形展示了水的表面张力"></div><div class="image-meta"><span class="image-caption center">露水呈球形展示了水的表面张力</span></div></div><h2 id="毛细作用"><a class="markdownIt-Anchor" href="#毛细作用"></a> 毛细作用</h2><p>没有毛细作用，植物和树木就无法茁壮成长。它有助于将水分带到根部。在附着力和内聚力的帮助下，水可以一路流到树枝和树叶上。</p><p>毛细作用是液体在细管状物体或多孔物体内部，由“液体与物体间附着力”和“因液体分子间内聚力而产生的表面张力”组合而成，令液体在不需施加外力的情况下，流向细管状物体或细缝的现象</p><p>毛细作用的发生是因为水是粘性的，这要归功于内聚力cohesion（水分子喜欢靠得很近）和附着力adhesion（水分子被吸引并粘在其他物质上）。水粘附在容器壁上会在边缘对液体产生向上的力，当与壁的粘附力强于液体分子之间的内聚力时，就会发生毛细作用，水面克服重力上升的现象。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310251202916.png" alt="水在毛细管中，中央较四周凹下"></div><div class="image-meta"><span class="image-caption center">水在毛细管中，中央较四周凹下</span></div></div><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><a href="https://www.bilibili.com/video/BV1344y1L7xp/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">TED科普：极性如何让水变得特殊_哔哩哔哩_bilibili</a></li><li><a href="https://water.mecc.edu/courses/Env211/lesson10.htm">Lesson 10: Properties of Water (mecc.edu)</a></li><li><a href="https://www.xiaohongshu.com/explore/6469d6610000000013032644?app_platform=android&amp;app_version=8.10.0&amp;author_share=2&amp;ignoreEngage=true&amp;share_from_user_hidden=true&amp;type=normal&amp;xhsshare=CopyLink&amp;appuid=62bf331f000000001b02a6f0&amp;apptime=1698162804">水这种物质，既不稳定，也不靠谱 (xiaohongshu.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 神经科学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经科学 </tag>
            
            <tag> 生物化学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无离线不笔记，我的笔记软件选择策略</title>
      <link href="/post/a86a49b6.html"/>
      <url>/post/a86a49b6.html</url>
      
        <content type="html"><![CDATA[<p>2023年10月23日，语雀持续宕机8小时后才修复（见<a href="https://mp.weixin.qq.com/s/WFLLU8R4bmiqv6OGa-QMcw">关于语雀 23 日故障的公告</a>）。借此，谈谈我对笔记软件的看法——无离线不笔记。</p><p>我深入接触的第一个电子笔记软件是微软的OneNote，OneNote笔记是优先本地的，同时也会保存到云端。OneNote哪都好，支持复杂的排版、支持手写、支持复制笔记链接创建Moc索引，但不支持Markdown、不支持大纲等等，只能放弃。</p><p>后来开始寻找其他合适的笔记软件，先后接触了notion、wolai、思源笔记、语雀、flowus等软件，现在基本都是使用思源笔记为主要笔记软件，会使用hexo、语雀、知乎、小红书等平台发表自己的随笔文章。</p><p>为什么要选择使用思源笔记呢，以前的我会列出思源笔记的很多有点，比如支持双链啦、优秀的编辑体验啦等等，但我这里只列出一个原因——本地优先。我想先明确一个概念——个人笔记软件和团队协作文档软件。我目前的笔记软件使用策略是，以个人笔记软件为主，把所有的笔记放在个人笔记软件，把需要团队协作、要分享的文章从个人笔记软件复制笔记粘贴放在团队协作文档软件里，有必要做些适当的修改。</p><p>解释下这么做的原因：</p><p>个人笔记软件是只是个人用，记录自己的生活学习工作，作为使用这么久电子笔记的过来人（从大一到研二），我的建议是——个人笔记尽量选择本地优先的笔记，数据默认在本地，支持云端同步或备份，因为个人笔记对个人来说非常重要，能不随便迁移数据就不要迁移，而所有云端在线笔记软件，你无法保证其运营策略和生命周期，什么时候突然收费了，什么时候服务器突然宕机打不开，甚至于什么时候不继续维护服务了，都无法保证。所以尽量选择本地优先的软件，把所有笔记都放在本地优先的软件里，能保证你在需要的情况下，只要你的电脑手机没问题，就能打开你的笔记。对于个人笔记软件而言，一定要放在本地，避免网络、服务提供者的问题造成笔记打不开、数据丢失等情况，能多端同步最好，不能也没什么。</p><p>而针对团队协作、分享文章、多端同步的需求，你大可以选择团队协作文档软件，比如flowus、notion、飞书等软件，这类需求，对软件的稳定性要求不高，只要能完成协作、分享的目的，就足够了，哪怕换另一个软件，数据无法迁移也无所谓，因为你的所有重要笔记都在个人笔记软件了。</p><p>最后，我之所以现在在以思源笔记为主力笔记软件，一是我没发现它有什么不好的地方，它很好的满足我的需求，二是已经成为习惯了，也没有必要再去寻找更好的软件。如果你不喜欢思源笔记软件，也可以看看obsidian，适合喜欢折腾的同学。</p><p>PS：我最近在参考《打开心智》一书提到的INKP笔记法，践行自上而下以及原子化概念的笔记方法，收获真的很大。以前就好像在知识的海洋里漫无目的的随机游走，现在就感觉我有一幅地图，我知道哪些区域已经探索过，哪些还没有，我现在应该往哪走。真觉得以前很多笔记都是白记，完全没能复用。目前笔记管理还在改进中，等完善好了，有空再分享目前我是怎么具体在思源笔记记笔记和搭建个人知识管理体系的。</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《心灵奇旅  Soul》| 我的Spark是享受存在本身</title>
      <link href="/post/cf0a2858.html"/>
      <url>/post/cf0a2858.html</url>
      
        <content type="html"><![CDATA[<h2 id="心灵奇旅-soul个人感悟"><a class="markdownIt-Anchor" href="#心灵奇旅-soul个人感悟"></a> 《心灵奇旅  Soul》个人感悟</h2><p>班级的心理健康观影活动看了这部电影</p><p>最受感动的有几个地方</p><ul><li>1⃣22号附身在Joe身上，坐在酒吧阶梯上望着天空，阳光很好，风儿轻快，街头上来来往往的人，繁忙的店铺，树上飘落的叶子悠悠旋转落在手上</li><li>2⃣Joe心心念念去二分音符酒吧，如愿与乐团展开一场精采的爵士演出，自己一路兢兢业业追逐梦想，但完成梦想之时反而没有想像中来得欣喜，在这个完美的一天即将结束时，却又有点空荡荡：“然后呢？”</li></ul><blockquote><p>“火花才不是什么人生目标呢，你们导师总是喜欢谈人生、谈意义，累不累呀”</p><p>“火花并不是人生目标，你想要生活的那一刻，火花就已经点亮了”</p></blockquote><p>spark不需要一定是某个事业、某个爱好，也可以是享受存在本身的一种能力。对我来说，就如22号那样，火花就是躺在草地上、吹吹风、抬头看看天空、旁观着其他人欢声笑语。未必有所成才算活着，梦想也不是什么了不起的东西。人活着最重要是什么？不是爱，不是恨，不是痛，也不是成功与失败，而是感知，有些人把它看作是庸俗的生活，有人却认为它是活着的全部意义。</p><blockquote><p>曾经有一条小鱼，一直渴望找到“大海”，而大鱼告诉它，你一直在大海里呀！小鱼不肯相信：这只是水，怎么能是大海呢？</p></blockquote><p>一个追求无拘无束音乐的人，却把自己束缚在了追求之中。小鱼不明白自己一直生活在大海中，因为它没有意识到水就是大海。</p><p>心流、正念、活在当下为什么被推崇？因为我们太容易沉浸于追逐目标、舞台、掌声、高处、未来，就是无法接受当下的自己和世界。</p><p>追求目标没有问题，但不应该忽视沿路的风景，即使最终我们无法到达终点，但我们也能原谅自己的平庸，并为一路的经历感到幸福。</p><h2 id="阿德勒心理学对目标驱动型幸福观的批判"><a class="markdownIt-Anchor" href="#阿德勒心理学对目标驱动型幸福观的批判"></a> 阿德勒心理学对目标驱动型幸福观的批判</h2><p>我看到羊梨笔记对<a href="siyuan://blocks/20230501213201-30dnsmq">《被讨厌的勇气》</a>关于目标驱动型幸福观的讲解，正好就有涉及到《心灵奇旅》这部电影，深以为然，这里搬运上他的讲解：</p><p>幸福是什么？有人认为是功成名就、财务自由，有人觉得能有一套自己的房子就算幸福，还有人认为全家身体健康就很幸福，电影中那位怀揣音乐梦想的乔老师则把与传奇乐手同台完成一次完美的演出视作最大的幸福……</p><p>对于幸福，每个人的理解都不尽相同，但大家不约而同地会把幸福同某个目标绑定，完成了目标就是幸福，追求目标的过程就是人生的奋斗历程。如果幸福像游戏里的目标、任务那样，需要完成它才能得到幸福，那么<strong>这样的幸福感，是一种脆弱的存在</strong>。</p><p>在《象与骑象人》这本书里讲到过这么一条适应原则：人的心理对变化特别敏感，但是对于静态状况，<strong>心理的反应就会钝化</strong>。因为当新的刺激出现时，神经细胞会产生强烈反应，但之后，神经细胞会逐渐“习惯”，对已经适应的刺激反应会趋于缓和。所以，每个人的心理迟早都会回复平常的自然平静状态。</p><p>**目标驱动型的幸福观，永远在一个个目标之间奔走：<strong>当你挣1万的时候，想着自己能够挣到2万就会特别幸福，但当你真的挣到了2万，高兴过一阵后，发现还有新的烦恼</strong>。**历尽千辛万苦征服一个目标的幸福感，要不了多久就会被随之而来的“贤者时刻”所替代；这样的幸福观里，拥有幸福感的时刻占据人生总时长的份额太低；更何况在很多很多时候，我们给自己制定的目标，是很可能达不成的。</p><p>阿德勒心理学对于幸福的定义是：**幸福就是贡献感，就是共同体感觉。共同体感觉=自我接纳+他者信赖+他者贡献。<strong>只要能做到这三点，能找到“共同体感觉”，不需要事业成功，不需要财务自由，甚至身体有缺陷，都可以获得幸福</strong>。**这种幸福在行为和心理上体现为：</p><p>第一，认清自己的优缺点之后还能觉得自己整体上挺不错的，而且知道自己哪些方面能变好，哪些方面不能变好也不必去变好；</p><p>第二，有可以信赖的伙伴，你也能够对他们做出贡献，并感觉到自己对大家有用，在这里找到自己的归属感**。**</p><blockquote><p>“人生是点的连续，是连续的刹那，过去和未来都不存在，人只拥有此时此刻”。</p></blockquote><p>人生中最大的谎言就是不活在“此时此刻”。纠结过去、关注未来，把微弱而模糊的光打向人生整体，自认为看到了些什么。人应该活在“此时此刻”，珍惜当下的每分每秒。</p><p><strong>远方的目标，是由一个个“此时此刻”组成的。</strong></p><p>跳舞的时候，只需要跳好当下就可以了，跳舞本身就是目的，最终会跳到哪里谁都不知道。但是跳着跳着可能会惊觉：“已经来到这里了吗？”</p><p>把过程本身也看作结果，聚焦“此时此刻”，认真而谨慎地做好现在能做的事情，可能跳着钢琴之舞的人就成为了钢琴家，跳着写作之舞的人就成为了作家。</p><p>即便没有达成这个预期的目标，你也拥有了很多个充实快乐的“此时此刻”，拥有了阿德勒所说的“甘于平凡的勇气”。因为你已经做了在你影响圈内能够做的努力，问心无愧。</p><h2 id="心灵奇旅-soul剧情"><a class="markdownIt-Anchor" href="#心灵奇旅-soul剧情"></a> 《心灵奇旅  Soul》剧情</h2><p>乔·贾德纳（Joe Gardner）人过中年仍抱有在 爵士乐队担任钢琴手的梦想，却怀才不遇，只能在 纽约一所国中担任兼职音乐教师。一日，透过以往学生阿寇（Curley）的引荐，乔得到与知名爵士乐手桃乐丝·威廉姆斯（Dorothea Williams）面试的机会。桃乐丝对于乔浑然忘我的即兴演出印象深刻，同意他晚上来 二分音符酒吧参加乐团表演。乔深感自己梦想即将成真，在狂喜之下冲出街道，然而大意掉进 人孔重伤昏迷。当乔恢复意识时，发现自己濒临死亡边缘，成为一个 灵魂，身在名为生之彼岸（Great Beyond）的空间，三位灵魂告知乔此处是灵魂的终点，随后消失于空间尽头的白光，见到此景的乔陷入恐惧，朝边界奋力挣扎，意外落入名为生之来处（Great Before）的空间，亦称作人生研讨会（The You Seminar）。</p><p>空间管理者杰瑞（Jerry）告诉乔，此处空间为新生灵魂被分配各种性格的地方，新生灵魂会透过传送门降生地球。乔还未听完介绍便急不可耐跳下传送门，却屡屡在落下地球途中被传送门送回。乔为了瞒过多位杰瑞，偷取名牌假扮为一位灵魂导师彼得·伯恩森，潜入人生研讨会说明课程了解回到地球的方式，杰瑞解释新生灵魂除了要体验多种性格，还能透过万物堂（Hall of Everything）尝试各种技能以找到自己生命的火花（Spark），而火花便是获得前往地球的通行证关键，随后将一位愤世忌俗的灵魂22号分配给乔，希望乔身为灵魂导师能协助22号得到火花接受转生。乔寄希望于自己能让22号获得火花，这样他才能借用22号的通行证返回地球，以准时参加桃乐丝的表演。22号向乔吹嘘自己曾让无数导师失望，包括 德肋撒修女、 穆罕默德·阿里、 玛莉王妃、 林肯、 荣格、 阿基米德等历史伟人，在乔带着22号在万物堂体验多种技能皆失败后，杰瑞欲将乔送回生之彼岸，22号由于好奇乔为何对一事无成的人生如此渴望，主动阻止杰瑞，答应继续协助乔。22号接着带乔前往人类精神与身体之间的 领域（The Zone）寻找月风（Moon Wind）帮忙，当人类陷入忘我的境界时灵魂会投射在此处，而那些迷失的人类灵魂将变得面目可憎游荡在领域中。在险些遭到迷失灵魂攻击后，月风一行人驾船出现，将灵魂净化。月风告诉乔自己虽在地球拥有肉体，但每个星期二都使自己陶醉于忘我境界，让灵魂进入领域，协助其他迷失的灵魂。在月风的协助下，乔藉著 冥想与昏迷的身躯产生连结，乔兴奋之余不小心与22号透过时空通道掉回地球，22号意外发现自己进入乔的体内，而乔反倒寄身于一只疗养用宠物猫的身体。与此同时，负责掌管灵魂数量的会计师泰瑞（Terry）发现乔冒充比永·波根森逃离死亡，主动请缨前去地球要把乔带回。</p><p>刚适应新身体的乔与22号笨拙地逃出医院，希望找到同样肉体身在纽约的月风协助。起初，22号对嘈杂的纽约街头恐惧不已不愿前进，乔偷来一片 披萨给22号品尝，首次尝到食物美味的22号同意继续与乔前行，并找到在街头杂耍的月风，月风告诉二人若想互换灵魂，须在傍晚六点半来找他进行交换仪式方能成功。在时间到来之前，乔匆忙带着22号回家梳洗，做好晚间演出的准备，此时乔的学生康妮（Connie）来访，向身在乔体内的22号抱怨自己想放弃 长号，然而目睹康妮放弃前的最后一段演出后，22号受到康妮对长号的热爱深深震撼，鼓励康妮继续尝试，22号也对人生有更多兴趣。随后，由于乔在帮22号修理发际线时意外剃坏发型，于是带着22号去找理发师老戴（Dez）救援，理发时22号与老戴和其他顾客无话不谈，老戴提到自己曾经的梦想是做一名兽医，后来因照顾女儿放弃梦想，选择做理发师餬口，不过仍满足于现在的生活，乔听完后陷入深思。路上，由于22号不经意将西装裤撑破，乔只得带22号找作为裁缝师的母亲（Libba Gardner）求助，乔的母亲拒绝乔与22号的请求，极力反对乔追逐爵士乐手的梦想，原因是乔与父亲为了梦想奔波却换来经济拮据的生活，心意已决的乔透过22号之口转述自己的想法，终于打动母亲，母亲拿出当年父亲的西装让22号穿着，身在猫咪体内的乔向母亲传达无言的感谢。傍晚时分，22号目睹一枚美丽的 枫属种子陶醉其中，经过一天的体验爱上作为人生活的感觉，相信或许走路、仰望天空皆能是自己的人生目标，乔反驳道这并非人生目标，不过是寻常生活而已，正当月风即将为两人互换灵魂时，22号反悔逃走，乔于追逐途中与22号落入泰瑞的陷阱，一同被擒回人生研讨会。</p><p>乔怒斥22号不守约定，同时惊讶地发现22号于不知不觉中已然拥有火花，得到通往地球的通行证。杰瑞同意在把乔带向生之彼岸之前，让乔与即将前往地球投胎的22号道别，在22号临行前乔仍忿忿不平批判22号的火花是透过自己的身体获得，并不属于22号，22号怒将通行证掷向乔，躲进忘我领域自暴自弃。乔仍好奇22号究竟是明白何种人生目标获得火花，杰瑞却告诉乔，火花不代表人生目标或志向，乔听完后仍迷惑不解，带着22号的通行证偷偷返回地球。回到自己身体的乔匆忙赶往二分音符酒吧，如愿与桃乐丝展开一场精采的爵士演出，桃乐丝彻底打消对乔的怀疑，认可乔加入她的爵士乐队，来捧场的母亲也为乔献出喝采。晚间众人散去，乔向桃乐丝感叹，自己一路兢兢业业追逐梦想，但完成梦想之时反而没有想像中来得欣喜，桃乐丝以一段寓言故事回应乔：曾经有条小鱼游到大鱼身边，询问大鱼海洋在何处，大鱼告诉小鱼你已身在海洋中，小鱼反回这并不是海洋，仅仅只是水罢了。乔若有所思地返回家中，拿出22号白天冒险一路捡拾的小物品，其中包含那枚枫树种子，此时乔灵感涌现开始演奏钢琴，随着人生跑马灯历历在目，理解到自己人生中无数美好的瞬间都代表着生命的火花，流下感动的泪水。</p><p>顿悟后的乔再度弹起钢琴，使自己的灵魂进入忘我领域，在此与月风重逢。月风告诉乔，22号由于体验过人生有了执著，已经变成迷失灵魂，两人尝试将22号追回，但失控的22号能力强大，不仅击沉月风的船只，更撞进人生研讨会大闹，过程中乔意外被22号吞噬。在22号体内，乔目睹无数22号过去的导师的幻影，不断用恶毒的言语辱骂22号，乔拿出幻化的枫树种子破除幻影，在两人意识交流中，乔告诉22号火花并非是特定的人生目标，而是当你准备好活出人生时便能获得，受到鼓舞的22号因此回复原状。尘埃落定后，乔将通行证归还予22号，让其能顺利前往地球展开新人生，22号出发前带有一丝犹疑，乔虽然明白自己会被送回，仍陪伴22号走完最后一程，而22号于落下地球途中与乔默默道别。乔按照原先安排将被送往生之彼岸，此时杰瑞出现，感谢乔的努力激励了他们所有人，杰瑞藉著偷拨泰瑞计算灵魂数字的算盘，让乔得以离开生之彼岸，拥有重返人生的机会，在临行前杰瑞询问乔会怎么度过人生，乔表示自己往后将珍惜生活中的每分每秒。</p><h2 id="ref"><a class="markdownIt-Anchor" href="#ref"></a> Ref</h2><ul><li><p><a href="https://zh.wikipedia.org/wiki/%E9%9D%88%E9%AD%82%E5%A5%87%E9%81%87%E8%A8%98">靈魂奇遇記 - 维基百科，自由的百科全书 (wikipedia.org)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/343214779">看完《心灵奇旅》，聊聊幸福的真相 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/350240102">怎么理解阿德勒学派所说的“人生不需要目标”？ - 知乎 (zhihu.com)</a></p></li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影 </tag>
            
            <tag> 心理学 </tag>
            
            <tag> 幸福感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 控制 Gentl 协议高速相机</title>
      <link href="//post/matlab-control-the-gentl-protocol-high-speed-camera-z6wcf.html"/>
      <url>//post/matlab-control-the-gentl-protocol-high-speed-camera-z6wcf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于科研项目需要，需要使用 Matlab 控制高速相机拍摄小鼠行为，并与三光子显微镜成像同步，在此总结下，如何使用 Matlab 来控制相机进行采集图像和录制视频</p></blockquote><h3 id="相机情况简介"><a class="markdownIt-Anchor" href="#相机情况简介"></a> 相机情况简介</h3><p>相机名：Basler acA1440-220um</p><p>相机参数：拍摄速度最高 227FPS，分辨率最高 1440 px x 1080 px</p><h3 id="使用简介"><a class="markdownIt-Anchor" href="#使用简介"></a> 使用简介</h3><p>相机需要使用USB 3.0 连接电脑，Basler Pylon Viewer 软件可以对相机进行参数设置并保存配置。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233517.png" alt="Basler"></div><div class="image-meta"><span class="image-caption center">Basler</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233435.png" alt="Basler"></div><div class="image-meta"><span class="image-caption center">Basler</span></div></div><h3 id="控制相机"><a class="markdownIt-Anchor" href="#控制相机"></a> 控制相机</h3><ul><li><p>软件：自带Pylon Viewer</p></li><li><p>代码</p><ul><li>Matlab Gentl Toolbox（不支持使用webcam、winvideo检测相机）</li><li>Python：<a href="https://github.com/basler/pypylon-samples">basler/pypylon-samples (github.com)</a></li></ul></li></ul><h3 id="pylon-viewer的使用"><a class="markdownIt-Anchor" href="#pylon-viewer的使用"></a> Pylon Viewer的使用</h3><p>下载地址：<a href="https://www.baslerweb.com/en-us/software/pylon/">pylon Software for Image Capture </a>（如果需要保存为mp4，需要额外下载 pylon Supplementary Package for MPEG-4 Windows）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233249.png" alt="Pylon"></div><div class="image-meta"><span class="image-caption center">Pylon</span></div></div><p>一些设置经验总结</p><ul><li>设置分别率，即图像尺寸大小。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233697.png"></div></div><ul><li><p>设置相机曝光时间（曝光时间越短，快门速度越快，越能抓拍高速运动的物体）</p><blockquote><p>帧率只决定曝光时间的上限，如果帧率提高抓拍依然模糊，可以适当缩短曝光时间，虽然会造成图片亮度不足</p></blockquote></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233271.png"></div></div><ul><li>增加相机输出图像的亮度：提高 gain（应该类似于相机的iso，亮度会提高，噪声也会提高）</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233299.png"></div></div><ul><li>保存用户配置，实测除了拍摄图像的分辨率大小外，其他设置的参数比如帧率、曝光时间等都是能在Matlab用的。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233875.png"></div></div><ul><li>软件设置录制：上方菜单【Window】→【Record Settings】</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130233500.png"></div></div><h2 id="matlab-环境配置和文档总结"><a class="markdownIt-Anchor" href="#matlab-环境配置和文档总结"></a> Matlab 环境配置和文档总结</h2><ul><li><p><span style="font-weight: bold;" data-type="strong">Matlab 环境配置</span>：需要安装两个 Toolbox</p><ul><li>GenTL Support from Image Acquisition Toolbox</li><li>Image Acquisition Toolbox</li></ul></li><li><p><span style="font-weight: bold;" data-type="strong">videoinput 文档</span>：<a href="https://ww2.mathworks.cn/help/imaq/videoinput.html?requestedDomain=cn">Create video input object - MATLAB - MathWorks 中国</a>，主要使用的函数总结</p></li></ul><h3 id="预览和结束预览"><a class="markdownIt-Anchor" href="#预览和结束预览"></a> 预览和结束预览</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202311130232920.png" alt="preview(obj"></div><div class="image-meta"><span class="image-caption center">preview(obj</span></div></div><ul><li><code>preview</code> 预览 【<a href="https://ww2.mathworks.cn/help/imaq/imaqdevice.preview.html">Ref</a>】</li><li><code>closepreview</code> 结束预览 【<a href="https://ww2.mathworks.cn/help/imaq/imaqdevice.closepreview.html">Ref</a>】</li></ul><h3 id="控制相机开始采集图像"><a class="markdownIt-Anchor" href="#控制相机开始采集图像"></a> 控制相机开始采集图像</h3><ul><li><p><code>start</code>：获取相机专属使用权 【<a href="https://ww2.mathworks.cn/help/imaq/start.html">Ref</a>】</p><p>Data logging is controlled with the <code>TriggerType</code> property.</p><table><thead><tr><th>Trigger Type</th><th>Logging Behavior</th></tr></thead><tbody><tr><td><code>'hardware'</code></td><td>Data logging occurs when the condition specified in the object’s <code>TriggerCondition</code> property is met via the <code>TriggerSource</code>.</td></tr><tr><td><code>'immediate'</code></td><td>Data logging occurs immediately.</td></tr><tr><td><code>'manual'</code></td><td>Data logging occurs when the <code>trigger</code> function is call</td></tr></tbody></table></li><li><p><code>trigger</code>：如果 <code>triggerconfig(vid,&quot;manual&quot;)</code>，则 <code>start</code> 后，需要 <code>trigger</code> 相机才会开始采集；【<a href="https://ww2.mathworks.cn/help/imaq/imaqdevice.trigger.html">Ref</a>】</p></li><li><p><code>vid.FramesPerTrigger</code>：specifies the number of frames the video input object acquires each time it executes a trigger using the selected video source. 【<a href="https://ww2.mathworks.cn/help/imaq/framespertrigger.html">Ref</a>】</p><ul><li>When the <code>FramesPerTrigger</code> property is set to <code>Inf</code>, the object ignores the value of the <code>TriggerRepeat</code> property.</li></ul></li><li><p><code>stop</code>：停止相机采集 【<a href="https://ww2.mathworks.cn/help/imaq/stop.html">Ref</a>】</p></li><li><p><code>wait</code>：Wait until image acquisition object stops running or logging, locks the MATLAB<sup>®</sup> command line until the video input object <code>obj</code> stops running 【<a href="https://ww2.mathworks.cn/help/imaq/wait.html">Ref</a>】</p></li></ul><h3 id="loggingmode-设置"><a class="markdownIt-Anchor" href="#loggingmode-设置"></a> LoggingMode 设置</h3><p><a href="https://ww2.mathworks.cn/help/imaq/loggingmode.html?requestedDomain=cn"><code>LoggingMode</code></a>：“memory” (default) | “disk” | “disk&amp;memory”</p><ul><li><p>memory，不提取数据只会把照片保存到内存，需要手动提取</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vid = videoinput(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;Mono8&#x27;</span>,<span class="string">&quot;LoggingMode&quot;</span>,<span class="string">&quot;memory&quot;</span>);</span><br><span class="line">vid.FramesPerTrigger = Inf;</span><br><span class="line">triggerconfig(vid,<span class="string">&quot;manual&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取相机使用权</span></span><br><span class="line">start(vid); <span class="comment">%start 这一句可能存在延迟，不要放在实际相机开始拍的调用里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 开始采集</span></span><br><span class="line">trigger(vid);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 等待采集完成</span></span><br><span class="line">pause(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 停止采集</span></span><br><span class="line">stop(vid);</span><br><span class="line">close(writerObj);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 录制结束后，需要手动提取frame，保存到视频里</span></span><br><span class="line">writerObj = VideoWriter(<span class="string">&#x27;./test.mp4&#x27;</span>,<span class="string">&#x27;MPEG-4&#x27;</span>);</span><br><span class="line">writerObj.FrameRate = <span class="number">150</span>; <span class="comment">%&lt;=150</span></span><br><span class="line">open(writerObj);</span><br><span class="line">frame = getdata(vid,vid.FramesAcquired);</span><br><span class="line">writeVideo(writerObj,frame);</span><br><span class="line">close(writerObj);</span><br></pre></td></tr></table></figure></li><li><p>disk：直接边采集边保存。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%%%% 录制视频代码</span></span><br><span class="line"><span class="comment">% log到硬盘</span></span><br><span class="line">vid = videoinput(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;Mono8&#x27;</span>,<span class="string">&quot;LoggingMode&quot;</span>,<span class="string">&quot;disk&quot;</span>);</span><br><span class="line">set(vid, <span class="string">&#x27;ROIPosition&#x27;</span>, [<span class="number">400</span> <span class="number">0</span> <span class="number">960</span> <span class="number">640</span> ]);</span><br><span class="line">vid.FramesPerTrigger = Inf; <span class="comment">% 一次Trigger后一直接收帧，直到接收到stop信号</span></span><br><span class="line">triggerconfig(vid,<span class="string">&quot;manual&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writerObj = VideoWriter(<span class="string">&#x27;./test.mp4&#x27;</span>,<span class="string">&#x27;MPEG-4&#x27;</span>);</span><br><span class="line">writerObj.FrameRate = <span class="number">150</span>; <span class="comment">%&lt;=150</span></span><br><span class="line">vid.DiskLogger = writerObj;</span><br><span class="line"></span><br><span class="line">preview(vid);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取相机使用权</span></span><br><span class="line">start(vid); <span class="comment">%start 这一句可能存在延迟，不要放在实际相机开始拍的调用里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 开始采集</span></span><br><span class="line">trigger(vid);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 等待采集完成</span></span><br><span class="line">pause(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 停止采集</span></span><br><span class="line">stop(vid);</span><br><span class="line">close(writerObj);</span><br><span class="line"></span><br><span class="line"><span class="comment">% disconnect video</span></span><br><span class="line">delete(vid)</span><br><span class="line">clear <span class="string">&quot;vid&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>disk&amp;memory：disk 一份，memory 一份，没必要</p></li></ul><h2 id="获取相机信息"><a class="markdownIt-Anchor" href="#获取相机信息"></a> 获取相机信息</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%%%% 获取相机信息</span></span><br><span class="line">info = imaqhwinfo(<span class="string">&#x27;gentl&#x27;</span>) <span class="comment">% 笔记本电脑和三光子运行这句会报错</span></span><br><span class="line">dev = imaqhwinfo(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt; dev = imaqhwinfo(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">dev = </span><br><span class="line"></span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line"></span><br><span class="line">             DefaultFormat: <span class="string">&#x27;Mono8&#x27;</span></span><br><span class="line">       DeviceFileSupported: <span class="number">0</span></span><br><span class="line">                DeviceName: <span class="string">&#x27;acA1440-220um (40241122)&#x27;</span></span><br><span class="line">                  DeviceID: <span class="number">1</span></span><br><span class="line">     VideoInputConstructor: <span class="string">&#x27;videoinput(&#x27;</span>gentl&#x27;, <span class="number">1</span>)&#x27;</span><br><span class="line">    VideoDeviceConstructor: <span class="string">&#x27;imaq.VideoDevice(&#x27;</span>gentl&#x27;, <span class="number">1</span>)&#x27;</span><br><span class="line">          SupportedFormats: &#123;<span class="string">&#x27;Mono12&#x27;</span>  <span class="string">&#x27;Mono8&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="测试帧率和帧率稳定性"><a class="markdownIt-Anchor" href="#测试帧率和帧率稳定性"></a> 测试帧率和帧率稳定性</h2><ol><li><span style="font-weight: bold;" data-type="strong">直接通过预览获取信息</span>：通过预览 <code>preview(vid)</code> 判断相机预设的帧率和 Matlab 获取的帧率是否一致</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310111407179.png"></div></div><ol start="2"><li><p><span style="font-weight: bold;" data-type="strong">计算实际帧率</span>：通过代码连续获取很多帧，并计时，计算帧率</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%%%%% 计算实际帧率</span></span><br><span class="line"></span><br><span class="line">vid = videoinput(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;Mono8&#x27;</span>);</span><br><span class="line">vid.FramesPerTrigger = <span class="number">1</span>; <span class="comment">% 一次触发获取一帧</span></span><br><span class="line">triggerconfig(vid,<span class="string">&quot;manual&quot;</span>); <span class="comment">% 设置手动触发，必须设置，否则每次触发相机都相当于要开机，延迟久</span></span><br><span class="line">start(vid);</span><br><span class="line">FPS = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span> iy = <span class="number">1</span>:<span class="number">10</span> <span class="comment">% 测试十次</span></span><br><span class="line">    Num = <span class="number">1000</span>;  <span class="comment">% 每次获取一千帧</span></span><br><span class="line"></span><br><span class="line">    tic</span><br><span class="line">    <span class="keyword">for</span> inum = <span class="number">1</span>:Num</span><br><span class="line">        Img = getsnapshot(vid); <span class="comment">% getsnapshot相当于手动触发</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    h = toc; <span class="comment">% 获取一千帧的耗时</span></span><br><span class="line"></span><br><span class="line">    FPS(iy) = Num/h; <span class="comment">% 计算FPS</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(<span class="number">1</span>:<span class="number">10</span>,FPS);</span><br><span class="line"><span class="comment">% 停止采集</span></span><br><span class="line">stop(vid);</span><br><span class="line">delete(vid);</span><br><span class="line">clear</span><br></pre></td></tr></table></figure></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310111325622.png" alt="十次计算的相机FPS"></div><div class="image-meta"><span class="image-caption center">十次计算的相机FPS</span></div></div><ol start="3"><li><span style="font-weight: bold;" data-type="strong">测试录制视频帧率实际稳定性</span>：控制相机拍摄手机秒表录制一段视频，potplayer 前进一秒，看看视频里的秒表是不是也是前进一秒；严格测试是视频逐帧前进，看秒表前进的时间和计算的是否一致，（注意手机的屏幕刷新率注意需要提高到 120Hz）。</li></ol><h2 id="录制视频"><a class="markdownIt-Anchor" href="#录制视频"></a> 录制视频</h2><h3 id="录制视频代码"><a class="markdownIt-Anchor" href="#录制视频代码"></a> 录制视频代码</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%%%% 录制视频代码</span></span><br><span class="line"><span class="comment">% log到硬盘</span></span><br><span class="line">vid = videoinput(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;Mono8&#x27;</span>,<span class="string">&quot;LoggingMode&quot;</span>,<span class="string">&quot;disk&quot;</span>);</span><br><span class="line">set(vid, <span class="string">&#x27;ROIPosition&#x27;</span>, [<span class="number">400</span> <span class="number">0</span> <span class="number">960</span> <span class="number">640</span> ]);</span><br><span class="line">vid.FramesPerTrigger = Inf; <span class="comment">% 一次Trigger后一直接收帧，直到接收到stop信号</span></span><br><span class="line">triggerconfig(vid,<span class="string">&quot;manual&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writerObj = VideoWriter(<span class="string">&#x27;./test.mp4&#x27;</span>,<span class="string">&#x27;MPEG-4&#x27;</span>);</span><br><span class="line">writerObj.FrameRate = <span class="number">150</span>; <span class="comment">%&lt;=150</span></span><br><span class="line">vid.DiskLogger = writerObj;</span><br><span class="line"></span><br><span class="line">preview(vid);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取相机使用权</span></span><br><span class="line">start(vid); <span class="comment">%start 这一句可能存在延迟，不要放在实际相机开始拍的调用里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 开始采集</span></span><br><span class="line">trigger(vid);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 等待采集完成</span></span><br><span class="line">pause(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 停止采集</span></span><br><span class="line">stop(vid);</span><br><span class="line">close(writerObj);</span><br><span class="line"></span><br><span class="line"><span class="comment">% disconnect video</span></span><br><span class="line">delete(vid)</span><br><span class="line">clear <span class="string">&quot;vid&quot;</span></span><br></pre></td></tr></table></figure><h3 id="matlab-怎么缩小-gentl-协议相机视频分辨率"><a class="markdownIt-Anchor" href="#matlab-怎么缩小-gentl-协议相机视频分辨率"></a> Matlab 怎么缩小 Gentl 协议相机视频分辨率</h3><blockquote><p>使用 Basler 自带 Pylon Viewer 软件，设置的视频分辨率，无法在 Matlab 里设置，所以需要额外设置</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vid = videoinput(<span class="string">&#x27;gentl&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;Mono8&#x27;</span>);</span><br><span class="line">set(vid, <span class="string">&#x27;ROIPosition&#x27;</span>, [<span class="number">400</span> <span class="number">0</span> <span class="number">960</span> <span class="number">640</span> ]);</span><br></pre></td></tr></table></figure><table><thead><tr><th>Parameters</th><th>Explanation</th></tr></thead><tbody><tr><td><code>XOffset</code></td><td>Position of the upper left corner of the ROI, measured in pixels.</td></tr><tr><td><code>YOffset</code></td><td>Position of the upper left corner of the ROI, measured in pixels.</td></tr><tr><td><code>Width</code></td><td>Width of the ROI, measured in pixels. The sum of <code>XOffset</code> and <code>Width</code> cannot exceed the width specified in <code>VideoResolution</code>.</td></tr><tr><td><code>Height</code></td><td>Height of the ROI, measured in pixels. The sum of <code>YOffset</code> and <code>Height</code> cannot exceed the height specified in <code>VideoResolution</code>.</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Vercel 自动部署 hexo 博客</title>
      <link href="/post/f5348a5e.html"/>
      <url>/post/f5348a5e.html</url>
      
        <content type="html"><![CDATA[<p>使用 Vercel 自动部署 hexo 博客的好处</p><ul><li>可以直接在云端的Github Repo添加修改文件；</li><li>Github 博客的repo提交commit修改后，Vercel自动部署生成静态文件，无需手动执行构建，避免了繁琐的手动部署过程；</li></ul><p>注意：</p><ul><li>博客打开的文件实际上用的是vercel上的html域名配置，和之前手动部署生成的hexo静态文件就没关系了。</li></ul><h2 id="vercel-部署"><a class="markdownIt-Anchor" href="#vercel-部署"></a> vercel 部署</h2><p>地址：<a href="https://vercel.com/new">New Project – Vercel</a></p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202309271513614.png"></div></div><h2 id="购买域名"><a class="markdownIt-Anchor" href="#购买域名"></a> 购买域名</h2><ul><li><p>地址：<a href="https://wanwang.aliyun.com/?">万网</a></p></li><li><p>购买域名：购买了achuan-2.top域名</p></li><li><p>添加解析：<a href="https://dns.console.aliyun.com/">域名控制台</a> 。可选择用CNAME或A记录，解析域名和www+域名。</p><ul><li><p>解析vercel</p><ul><li>A记录地址：<code>76.223.126.88</code></li><li>CNAME 记录地址：<code>cname-china.vercel-dns.com</code></li></ul></li></ul></li><li><p>一般用CNAME就好</p></li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202309271513820.png"></div></div><h2 id="vercel-hexo-app添加自定义域名"><a class="markdownIt-Anchor" href="#vercel-hexo-app添加自定义域名"></a> Vercel hexo APP添加自定义域名</h2><ul><li>地址：<a href="https://vercel.com/achuan-2/hexo/settings/domains">Project Settings – Dashboard – Vercel</a></li><li>输入域名：achuan-2.top</li><li>结果</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202309271511049.png"></div></div><h2 id="githubio设置cname"><a class="markdownIt-Anchor" href="#githubio设置cname"></a> github.io设置CNAME</h2><p>CNAME就是域名改为另一个域名的文件</p><p>hexo repo的 <code>source</code>目录新建 <code>CNAME</code>，填入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">achuan-2.top</span><br></pre></td></tr></table></figure><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用ABBYY和Acrobat 给图书扫描版pdf添加书签和目录跳转</title>
      <link href="//post/how-to-use-abbyy-and-acrobat-to-add-bookmarks-and-directory-to-the-book-scanning-version-of-the-book-scanning-version-of-pdf-e6kup.html"/>
      <url>//post/how-to-use-abbyy-and-acrobat-to-add-bookmarks-and-directory-to-the-book-scanning-version-of-the-book-scanning-version-of-pdf-e6kup.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>摘要：从网上找的书籍资源，很多都是非官方的扫描版，不仅文件大，而且不能选中文字、没有书签目录，阅读体验很不好，介绍下如何用ABBYY和Acrobat 给图书扫描版pdf添加书签和目录跳转</p></blockquote><h2 id="abbyy-ocr识别扫描版pdf"><a class="markdownIt-Anchor" href="#abbyy-ocr识别扫描版pdf"></a> ABBYY OCR识别扫描版pdf</h2><p>点击【识别文档】</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282304858.png"></div></div><p>设置OCR语言，点击识别</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282313720.png"></div></div><h2 id="acrobat-添加书签和目录跳转"><a class="markdownIt-Anchor" href="#acrobat-添加书签和目录跳转"></a> Acrobat 添加书签和目录跳转</h2><h3 id="添加书签"><a class="markdownIt-Anchor" href="#添加书签"></a> 添加书签</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282314966.png"></div></div><p>给书签分层级</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282320715.png"></div></div><h3 id="目录跳转"><a class="markdownIt-Anchor" href="#目录跳转"></a> 目录跳转</h3><p>选中文件，右键创建链接</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282321229.png"></div></div><p>设置【链接类型】为不可见矩形，【链接动作】为跳至页面视图</p><p>‍</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282320705.png"></div></div><p>根据之前设置的书签或者直接输入页码跳转，快速跳转到对应页面，然后点击【设置链接】，完成设置链接后，又回返回原来位置。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.staticaly.com/gh/Achuan-2/PicBed@pic/assets/202308282323267.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
            <tag> 其他笔记 </tag>
            
            <tag> 生活技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>研一下总结</title>
      <link href="/post/3bc3857.html"/>
      <url>/post/3bc3857.html</url>
      
        <content type="html"><![CDATA[<p>研‮结一‬束了，研‮下一‬个人生‮中活‬学会‮大最‬的进步就是开‮学始‬会真正爱自己，更多的时间和‮力精‬花在自身上，有了‮多很‬感悟，这些思考大抵‮结总‬为：渐进式生活和可‮续持‬努力，等待力‮秩和‬序感。</p><p>我开始‮悟领‬到，无论生活还‮学是‬习，不在乎一朝一夕‮自的‬我感动，而‮该应‬注重细‮长水‬流、积‮成沙‬塔；一本书可以重复去读，常读常新，不必追求快，不必追求数量，而不是刷清单式的看完一本就去看另一本，捡了芝麻丢了西瓜；一个景点也可以重复去逛，一个游戏可以一直去玩，毕竟有一个能让自己放松的东西本身就很难得。</p><p>我开始发现不要给自己灌入太多的信息，不要挑战自己的自制力，要去主动获取信息，而不是被动接收算法推荐的信息，据说主动获取的信息记忆更牢，要多去主动学习，主动思考，让时间过得更有意义，让内向更为充实。</p><p>我开始学习安静‮等地‬待，不再着急‮盼地‬望，试‮让着‬物品和事项都‮其有‬固定的位置，提高自己对生活和工作的掌控感，建立秩序感，提高自信，提高做事效率。</p><p>我开始意识到兴趣太多也不是一件好事，自己的专业一定要专精，一定要有自己特别擅长的技能，其他兴趣爱好只是锦上添花、丰富生活。</p><p>虽然还‮多很‬做不好‮地的‬方，但我学会‮自了‬我满足和自我肯定，满‮当足‬下，立‮未足‬来，不‮像再‬过去那样完‮主美‬义：事情做了‮比总‬没做好，争取下次‮的做‬更好些。不‮和必‬人比较，不‮在必‬意工作时‮长间‬短，要比‮比就‬工作效率。</p><p>最‮分后‬享一首由英文‮译翻‬而来的诗——As I began to love myself，它‮分十‬契合我这一学‮来期‬对人生和‮活生‬方式的思‮和考‬感悟，我‮常非‬喜欢。</p><p>当我真正开始爱自己，<br>我发觉，烦闷和痛苦，<br>不过是警示我，我过去曾违心而活。<br>如今，我明白了，这便是“<strong>真实</strong>”。</p><p>As I began to love myself I found that anguish and emotional suffering are only warning signs that I was living against my own truth.<br>Today, I know, this is <strong>AUTHENTICITY</strong>.</p><p>当我真正开始爱自己，<br>我发觉，以一己私欲、强人所难，是何等冒犯，<br>即便我知道，时候未到，人也未有准备，<br>即便那人是我自己。<br>如今，我称之为 “<strong>尊重</strong>”。</p><p>As I began to love myself I understood how much it can offend somebody as I try to force my desires on this person, even though I knew the time was not right and the person was not ready for it, and even though this person was me.<br>Today I call it <strong>RESPECT</strong>.</p><p>当我真正开始爱自己，<br>我不再渴求别样的生活，<br>目光所及，周遭的一切都在促使我成长。<br>如今，我称之为“<strong>成熟</strong>”。</p><p>As I began to love myself I stopped craving for a different life, and I could see that everything that surrounded me was inviting me to grow.<br>Today I call it <strong>MATURITY</strong>.</p><p>当我真正开始爱自己，<br>我明白了在任何情况下，我都出现在对的地点，对的时间<br>发生的一切都恰如其分。<br>由此我得以从容不迫。<br>如今，我称之为“<strong>自信</strong>”。</p><p>As I began to love myself I understood that at any circumstance, I am in the right place at the right time, and everything happens at the exactly right moment, so I could be calm.<br>Today I call it <strong>SELF-CONFIDENCE</strong>.</p><p>当我真正开始爱自己，<br>我不再匆匆忙忙，<br>也不再计划未来的壮举。<br>如今，我只行快乐之事，<br>只行热爱之事，只行欢心之事，<br>以我自己的方式，自己的节奏。<br>如今，我称之为“<strong>简约</strong>”。</p><p>As I began to love myself I quit stealing my own time, and I stopped designing huge projects for the future. Today, I only do what brings me joy and happiness, things I love to do and that make my heart cheer, and I do them in my own way and in my own rhythm.<br>Today I call it <strong>SIMPLICITY</strong>.</p><p>当我真正开始爱自己，<br>我开始远离一切不健康的东西。<br>不论是食物和人群，还是事情和环境，<br>或一切让我心神疲惫，背离初心之事，<br>起初，我称之这样的态度为“健康的利己”，<br>但如今，我明白了，这是“<strong>自爱</strong>”。</p><p>As I began to love myself I freed myself of anything that is no good for my health – food, people, things, situations, and everything that drew me down and away from myself. At first I called this attitude a healthy egoism.<br>Today I know it is** LOVE OF ONESELF****.**</p><p>当我真正开始爱自己，<br>我不再试图永不犯错，而从此，我犯的错却更少了，<br>如今，我发觉，这便是“<strong>谦逊</strong>”。</p><p>As I began to love myself I quit trying to always be right, and ever since I was wrong less of the time.<br>Today I discovered that is <strong>MODESTY</strong>.</p><p>当我真正开始爱自己，<br>我不再继续沉溺于过去，<br>也不再为明天而忧虑，<br>此刻，我只活在当下，见证着当下发生的一切，<br>如今，我专注于每一天，日复一日，我称之为“<strong>尽善</strong>”。</p><p>As I began to love myself I refused to go on living in the past and worry about the future. Now, I only live for the moment, where EVERYTHING is happening.<br>Today I live each day, day by day, and I call it <strong>FULFILLMENT</strong>.</p><p>当我真正开始爱自己，<br>我意识到，思虑会让我饱受煎熬，<br>但当连结心灵之时，<br>心智便变成了宝贵的盟友。<br>如今，我称这种连接为“<strong>心灵智慧</strong>”。</p><p>As I began to love myself I recognized that my mind can disturb me and it can make me sick. But As I connected it to my heart, my mind became a valuable ally.<br>Today I call this connection <strong>WISDOM OF THE HEART</strong>.</p><p>我们无需再惧怕——与自身或他人的分歧、矛盾和问题，<br>纵使星星也会相撞，<br>从中诞生新的世界。<br>如今我知道了，这就是“<strong>生命</strong>”！</p><p>We no longer need to fear arguments, confrontations or any kind of problems with ourselves or others. Even stars collide, and out of their crashing new worlds are born.<br>Today I know THAT IS <strong>LIFE</strong>!</p><blockquote><p>此诗网传为卓别林所做, 但并未得到证实, 且流传多个版本. 有人考证原作者为Kim and Alison McMillen. 原诗被翻译为葡萄牙语, 而葡萄牙译文之后又被翻译回英语, 接着被谣传为卓别林所作。</p><p>翻译参考自<a href="https://www.bilibili.com/video/BV12L4y1W7jG/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b4a1fcb6dce305e26d8d16d9cbb71304">卓别林: &quot;当我真正开始爱自己…&quot;_哔哩哔哩_bilibili</a>和<a href="https://baike.baidu.com/item/%E5%BD%93%E6%88%91%E5%BC%80%E5%A7%8B%E7%9C%9F%E6%AD%A3%E7%88%B1%E8%87%AA%E5%B7%B1/56062375">当我开始真正爱自己_百度百科 (baidu.com)</a>（有所修改）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《心动的信号6》| 不仅仅只是恋爱综艺</title>
      <link href="/post/e93c4010.html"/>
      <url>/post/e93c4010.html</url>
      
        <content type="html"><![CDATA[<p>《心动的信号》系列算的上是影响我最大的综艺了。开始接触这部综艺的时候，正处于大学很低谷的状态，拼命的想要从外界吸取能量，一口气刷完了《心动的信号2》和《心动的信号4》。之后呢，逐渐因为「<strong>吴沛</strong>」开始学习尤克里里；因为「<strong>威廉</strong>」开始注意外型尝试改变穿衣风格，既穿正式的衣服，也尝试酷酷的衣服；因为「<strong>黄征轩</strong>」喜欢上锻炼开始有意识健身；因为「<strong>Simon</strong>」练起了陆地冲浪板，这种改变不一定是好的，但因为这个系列综艺，让我见识到不一样的人生，<strong>让我开始尝试不一样的道路，扩展了我生活的边界</strong>。所以，这档综艺，对我来说，不仅仅是恋爱综艺，也是学习为人处事的综艺。</p><p>也许是综艺看的多了，也许是感情上受到的伤多了。《心动的信号6》里其实没有特别嗑的CP，也不会再像过去那样看剧看综艺看电影，去争论人物本身的行为，而是通过影视展现出来的东西，去反思和思考自己。我想，看书、看电影、看剧，应该都是这样，<strong>不纠结于内容本身，而是多去思考，我因此产生了怎样的思考，思维方式和生活产生了怎样的改变</strong>。</p><p>感触最深的是妹妹李玉媚。</p><blockquote><p>“喜欢是很难过的感觉，因为我喜欢他以后，我一直很难过，我什么时候不喜欢他”</p><p>“我的喜欢就像竹蜻蜓，只要你轻轻松手，它就会飘走，它不会成为任何人的束缚”</p><p>“今天是我喜欢你的第二十一天，也是我正式和这份喜欢告别的第一天”</p><p>“原来他从来都没有喜欢过我！”</p></blockquote><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310161039399.png" alt="喜欢是难过的感觉"></div><div class="image-meta"><span class="image-caption center">喜欢是难过的感觉</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310161045380.png" alt="因为我喜欢他以后，我一直很难过，我什么时候不喜欢他"></div><div class="image-meta"><span class="image-caption center">因为我喜欢他以后，我一直很难过，我什么时候不喜欢他</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202310161042711.jpg" alt="今天是我喜欢你的第二十一天，也是我正式和这份喜欢告别的第一天"></div><div class="image-meta"><span class="image-caption center">今天是我喜欢你的第二十一天，也是我正式和这份喜欢告别的第一天</span></div></div><p>妹妹爱的卑微，刻意地去讨好芦可，可芦可并不喜欢她，总是处于礼貌的与她保持距离，一次一次的发出信号却没得到自己想要的回应，于是一次次被伤害。其实我以前喜欢人，也是如此卑微：明知道对方不喜欢自己，但还是想要一份结果，忍不住地去叨扰对方。现在意识到，这种卑微的喜欢，不仅会让喜欢的那个人看不到自己的闪光点，也尤其容易导致自己的内耗，不仅没收获到爱情，还让自己过得更糟了。</p><p>我现在的恋爱观，是我喜欢你与你无关的那种喜欢；是可以给自己补充能量而不是耗空能量的那种喜欢；是我喜欢的更多是因为喜欢你而努力向前的自己的那种喜欢；</p><p>嘉宾里最喜欢的是“搞笑男没有爱情”的大淇。大淇是嘉宾里年龄最大，也是最成熟的一位，我羡慕他的乐观开朗，为人处事大大方方。我很羡慕脱口秀大会上那些能把自己糗事当成段子去讲的演员们，可以把那些事情一笑了之，而过去的我，貌似一直抓着那些不开心的事情不放，怨天尤人。虽然现在已经习惯一笑了之，只关注开心的事情，但是那些心里受伤的事情依旧只会藏在心里，<strong>假装一切未曾发生过</strong>，也就做不到真正的开朗，希望逐渐能成为对所有事情都一笑了之的人吧。</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 综艺 </tag>
            
            <tag> 为人处世 </tag>
            
            <tag> 爱情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于等待力和秩序感的思考</title>
      <link href="//post/thinking-about-waiting-power-and-order-f3swz.html"/>
      <url>//post/thinking-about-waiting-power-and-order-f3swz.html</url>
      
        <content type="html"><![CDATA[<h2 id="等待力"><a class="markdownIt-Anchor" href="#等待力"></a> 等待力</h2><p>所谓的「<strong>等待力</strong>」，我将其定义为有多少耐心去等待自己期待未来会发生的事情。</p><p>举例来说：我发动态，会期待得到别人的评论；网上购物了一件东西，会期待早日能收到；学习弹奏一首歌，会期待早日学完；追一部剧，会期待之后的剧情。</p><p><strong>我很缺乏等待力</strong>。</p><p>发完动态就会忍不住时不时的去打开手机刷新社交媒体，看有没有收到消息，而不是先把自己当下要做的事情先做好，等待消息主动来找我，所以每次发动态都很内耗，干事效率很低；</p><p>想买东西，总是一想买，就控制不住的冲动下单了，而不是了解清楚自己的需求，蹲到合适的价格，等待自己真正需要这个东西的时候才购买，所以买的东西常常积灰；</p><p>尤克里里练习指弹，总想着早日学完发视频炫耀，而不是每周固定几天，就练习这个曲子，等待通过自己一点点练习，真正掌握这首曲子，把指法和节奏连熟练，不再依靠别人的视频可以独立弹好。</p><p>追剧读小说，常常一追就通宵，囫囵吞枣，看是看爽了，看完啥也记不住，而不是每天每周读一章看一集，让其融入自己的生活习惯中，这样不仅剧情的记忆更深，也对剧情有自己的思考。</p><p>如果人类就是不擅长等待的，那我觉得我们应该学会培养耐心，提高等待力。有等待力的人，可能可以收获更强的幸福感、更好的解决问题能力、更少的健康问题。我希望，自己也能成为一个等待力高的人。</p><p>接下来，我希望自己能做到：</p><ul><li>循序渐进并且持之以恒的学习一项技能，使之成为自己的特长和兴趣爱好，并通过爱好扩大社交圈子，了解自己到底想成为什么样的人；</li><li>做一件事能够有耐心的做，遇到问题能冷静的思考，不急不躁，按自己的节奏处理事务；</li><li>能够有规划的去做一些个人长期项目，比如旅游摄影方面就是逛完上海的所有免费公园，编程方面就是学习深度学习，能够运用代码去解决问题，专业课方面就是学习基础入门书，了解专业发展史。</li></ul><hr><h2 id="秩序感"><a class="markdownIt-Anchor" href="#秩序感"></a> 秩序感</h2><p>所谓的「<strong>秩序感</strong>」，我定义为，你能掌控自己生活的程度。</p><p>生活需要秩序感，如果能做到，什么东西要放在什么地方，什么时候要做什么事情，什么时候睡觉什么时候起床。这样，总能很容易找到要找的东西，总能知道当下应该做些什么而不感到无聊，总能有一个好的精神去迎接下一天。</p><p>建立秩序感很重要，当你处在混乱状态时，很容易一点点消磨自己的能量，不足以支撑你去做一些特别大的事情，如果能够尝试开始建立自己的生活秩序，开始把作息往正常轨道拉，每实现一次，能量就感觉回复一点，长此以往，积攒的能量会促使你完成更大的挑战，各方面开始稳中向好，能够开始掌控生活的船舵使之朝向你想要的方向。</p><p>建立秩序感是一个制造确定性的过程，确定的作息、确定的运动、确定的待办事项，这都会让你对自身和生活的掌控感越来越强，这就是一个从不确定到确定，从混乱到有序的过程。而建立秩序感的第一步，应该先从身体健康开始，把生活处理好，才能够从中积攒到能量去做更困难的事情。</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一只23岁母单的反思</title>
      <link href="//post/a-mother-s-reflection-z17orfm.html"/>
      <url>//post/a-mother-s-reflection-z17orfm.html</url>
      
        <content type="html"><![CDATA[<p>其实高中，大学，研究生都有动心的女生，不过因为种种问题都是止于暧昧。这里就简单分析下自己的问题和执念，就不讲对方的问题了。</p><p>高中主要因为要去不同的大学，注定异地，就不上心了。这一阶段的执念是不接受异地。这一阶段，由于高中压力比较大，非常的自卑和抑郁，人很不开朗，只会期待别人能关心自己。大学通过阅读心理方面的书籍和参加各种活动，慢慢变得开朗和自信独立起来了，但还是不够。</p><p>大学喜欢的女生，因为我主动找她总是爱搭不理，我不找她，她又来主动找我，两个人都是内向的人，导致非常内耗，会在觉得她喜欢我和不喜欢我之间来回跳跃，好感被慢慢消磨掉，觉得对方只是把我当工具人，需要的时候找我帮忙，不需要就爱搭不理。这一阶段的执念是想要和喜欢的女生说早晚安。这一阶段虽然变开朗了，但自己有一个毛病，一觉得对方不喜欢自己就不想搭理人，完全把对方当成透明，想着你不喜欢我我就不主动打扰你好了，目前在学习改掉这点，真的很有问题。</p><p>研究生阶段的执念是想要约喜欢的女生出去，而对方一直以忙为理由拒绝，被拒绝了一次又一次，才终于醒悟，原来早就被发了好人卡而不自知。此外，太早对对方表白，对方的回复是“暂时不想谈恋爱，看以后有没有缘在一起”，导致自己陷于很被动的局面，也让两个人无法像普通异性朋友相处。</p><p>今后，可能更想和人交朋友，不过分期待爱情了。要在学习如何和人线下社交，自己是网络社牛，但是线下社交真的不行，因为平常都是自己一个人玩耍，热衷于读书、看电影、骑车、摄影逛公园、弹琴、陆冲这种只需要一个人就能玩的很开心的活动，如果要带上另外一个，就不太清楚怎么办了，因为自己很少花钱去消费，餐馆、电影院、游乐园还有那些需要花钱的运动场馆都很少接触。之前一直以来的想法是<strong>一个人能走得更快</strong>，但是最近的感慨是<strong>两个人能走得更远</strong>，还是不能闭门造车自娱自乐，要多认识不同的人，从不同的视角认识这个世界，最终更好的认识自我、提升自我。</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我终于清空朋友圈啦！</title>
      <link href="//post/i-finally-empty-the-circle-of-friends-oko3o.html"/>
      <url>//post/i-finally-empty-the-circle-of-friends-oko3o.html</url>
      
        <content type="html"><![CDATA[<p>我终于清空朋友圈了！！！</p><p>一直都想要戒掉发朋友圈的习惯，有很多原因，比如发朋友圈图片会压缩，不能再编辑，限制字数，不能发gif等等，很限制。</p><p>比如自己是一个很敏感的人，又是一个分享欲很强的人，如果我看到我发的朋友圈某个好友没点赞，而ta给我前面和后面的人都点赞了，我就会很沮丧，觉得对方不喜欢我。每次发了一条动态，就会时不时看有没有人给我点赞评论，有的话我不觉得开心，但没有就很失落。</p><p>比如朋友圈共同好友点赞评论都有提示，我很烦。目前有屏蔽某个动态的消息也很麻烦。</p><p>比如朋友圈的消息几乎都只是点赞，很少人会对我的动态提出意见和建议，我觉得一个动态应该发在合适的圈子，尤克里里就发到尤克里里的圈子，摄影就发到摄影的圈子，所以我会更喜欢发在网络社交软件里。</p><p>比如因为很喜欢发朋友圈，很多事情我就默认好友已经看到了，就不会再主动讲过去一些开心的事情了，这样我觉得会有损我的口头表达能力</p><p>比如我有点过于依赖朋友圈社交了，爱发朋友圈的人我会主动夸人家拍的好看工作优秀等等，不发朋友圈的人我就找不到机会认识，见面了也不搭理人，网上社牛线下社恐。</p><p>综上，我觉得发朋友圈对我来说弊大于利。但是之前一直想戒掉都没戒成功，这次我希望通过删除全部动态的方式来强制戒掉。而且目前我的动态也几乎没人和我互动了，删了就删了，反正也没人看。不过删的过程我才发现自己真的很爱发，几天就一条，从2018年删掉今年，删到手疼。我去年其实就把qq空间给清空了，这样qq和微信就没半条动态了，再也不想这两个软件塑造什么形象人设，天真地希望别人通过我的动态认识我了。（话说断舍离方面我真的是一点都不心慈手软）</p><p>踏实做自己，不要在意别人的评价了。</p><p>当然了，不代表我不发动态了，我就是一个分享欲很强的人和喜欢写东西的人，不过我希望自己少发碎片化的生活记录，多写长长的随笔和博客，多思考多总结多沉淀，以后珍贵的回忆和随笔，都会优先写在在思源笔记里，再分享到网络里去</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202308141024199.jpg"></div></div>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23岁啦</title>
      <link href="//post/23-years-old-zggy4y.html"/>
      <url>//post/23-years-old-zggy4y.html</url>
      
        <content type="html"><![CDATA[<p>算是最多朋友祝我生日快乐的一次生日了，虽然也就三个人。</p><p>研一也算结束了吧，也简单总结下研一一年的心态变化。</p><p>老实说，研究生比我想象的累多了，如果没有适当的时间管理，平衡好工作和生活，真的挺难熬下去的。事情又多，工资又少，真的就是廉价劳动力。</p><p>研一上，因为院的设计，需要进行三轮轮转，每个老师底下轮1.5个月，轮转结束要写一个小轮转报告。我当时就是太单纯了，每个轮转都做的非常认真，每个报告都以本科毕设论文形式去写，再加之研一上课程很多汇报很多，导致研一上非常非常累，1点半下班是常态。由于没有平衡好工作和生活，满脑子都是科研项目，一直都紧绷着，身心健康损坏特别大，掉了很多头发，一天不洗头都有油油，容易抓出白色的脂肪粒，到目前都还在用专门的洗发水调理。研一的寒假，我在家基本没怎么见亲朋好友，都在睡觉，缓了很久。</p><p>研一下，一方面是身体已经不支持我再像过去那样熬夜，一方面也是意识到这样的状态不可持久。人生是一次长跑，可别开头就冲刺用光了力气，要可持续发展地努力，渐进式地进步。于是，研一下，我开始尝试平衡工作和生活，开始在空闲时间发展自己的兴趣爱好，弹尤克里里，买相机学习摄影，买陆地冲浪板第一次接触板类运动。目前的状态也一点点回复，心态也比以前乐观开朗多了，自认为是一个好的转变。</p><p>当然，我还是得自我反思下目前的不足滴。</p><p>研一下花在课题的时间因为兴趣爱好而减少了，减少没问题，不要有休闲羞愧嘛。但是还是希望自己效率更高些，早工作完早下班，不要非要和人竞争下班时间多晚，总是磨磨蹭蹭，还是经常23点以后才下班，这点得改。</p><p>空闲时间，娱乐的时间多了，学习充电的时间却少了，本科时空闲时间会有目的学习各种技能，会读书，现在却是经常无目的刷着b站和小红书，白白消磨时间。我觉得玩手机不一定会让自己放松，科学的放松是主动做一些自己感兴趣的事情，对自己长久有益的事情就更好了，我还是觉得我空闲时间应该多花在编程技术的提高、学习神经网络以及阅读文献提升思辨力上。</p><p>还是太在意别人，太去追求别人的认同，经常是为了别人的肯定去发朋友圈，设计文案。发完之后会时不时看有没有人点赞，这个人点赞别人不点赞我，是不是不喜欢我，我做的不够好？不要去追求别人的认同了，否则永远得不到自己对自己的认同，要努力提升自己，提升价值感，让自己变得自信才行！</p><p>待人不够真诚。我网友很多，但是现实世界却没有几个能面对面交流的朋友，一部分原因是自己过去是留守儿童，就连和家人的关系都并不亲密，自己很难真正相信人，去付出真心，总是刻意和所有人保持一定距离。另一方面也是太过敏感，很容易觉得对方不喜欢自己而刻意远离，觉得受伤了并不会和对方交流，而是一声不吭的就离人远远的了。</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Groupy多窗口管理工具</title>
      <link href="/post/291034.html"/>
      <url>/post/291034.html</url>
      
        <content type="html"><![CDATA[<p>官网：<a href="https://www.stardock.com/products/groupy/">Stardock Groupy: Tabs for Windows</a></p><h2 id="功能简介"><a class="markdownIt-Anchor" href="#功能简介"></a> 功能简介</h2><p>在使用软件的时候，我们常常会一口气打开很多窗口进行操作，但在使用时，杂乱无章的窗口会让工作效率大打折扣。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252305052.gif"></div></div><p>与其分散使用各个软件，不如把它们的窗口整合到一起。Groupy 就是一款可以将所有软件窗口整合到一起的工具，用操作浏览器的方式来管理任意软件窗口。</p><h3 id="拖拽合并软件窗口"><a class="markdownIt-Anchor" href="#拖拽合并软件窗口"></a> 拖拽合并软件窗口</h3><p>没有复杂的软件界面，安装后软件窗口自动成为可扩充的标签页。将窗口拖拽到其他软件的标签栏时松手即可合并软件窗口。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304833.gif"></div></div><h3 id="便捷管理与分组"><a class="markdownIt-Anchor" href="#便捷管理与分组"></a> 便捷管理与分组</h3><p>多个软件一个窗口即可管理，快速在多个文档或文件夹中切换。将相关的软件整合到一起，分组操作软件，优化工作流程。还有自动分组功能，减少复杂操作，提高效率。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252305332.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252305740.gif"></div></div><h3 id="窗口内容快速预览"><a class="markdownIt-Anchor" href="#窗口内容快速预览"></a> 窗口内容快速预览</h3><p>支持速览功能，鼠标停留在软件窗口标签上，即可预览软件窗口中的内容</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304937.gif"></div></div><h3 id="窗口快速添加保存现有分组"><a class="markdownIt-Anchor" href="#窗口快速添加保存现有分组"></a> 窗口快速添加，保存现有分组</h3><p>需要快速新建文档、打开其他文件夹?点击标签栏上的加号，一键快速添加新文档或资源窗口。而现在设置的窗口分组可以保存起来，今后可以快速打开操作所需的所有软件。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304686.gif"></div></div><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>推荐设置为【仅在按下Ctrl时分组】：【设置】-【何时启用窗口分组】-【仅在按下Ctrl时分组】</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304016.png"></div></div><p>自动分组：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304443.png"></div></div><p>是否始终显示此类窗口的标签页，取消勾选后，只有窗口合并之后才显示Groupy标签页</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252304472.png"></div></div><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 工具 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>巨蟹座的独白</title>
      <link href="/post/c873b400.html"/>
      <url>/post/c873b400.html</url>
      
        <content type="html"><![CDATA[<p>作为资深老巨蟹，说句实话，巨蟹座男生挺难搞的，初次见面让人感觉很正经，很闷，不爱说话，不爱表现自己，基本不会主动，因为巨蟹就是个被动的星座，如果你主动找他讲话，他也会很认真的回答你，注意，真的是很认真，所以板正应该是巨蟹给人的第一印象，所以社交的话蟹蟹们还是有一定优势的，起码看着是个正经人吧。</p><p>但巨蟹真的正经吗？正经是正经，但闷骚也是真闷骚。我觉得巨蟹座的形象应该改成寄居蟹，不止层坚硬的壳，巨蟹就把自己藏在一层层的壳子里，等着别人走进他们的心里。熟人和朋友面前的巨蟹，什么都能说，什么都能侃，什么都能玩，没有约束，甚至于更疯，让你怀疑这还是我当初认识的那个巨蟹吗？而且巨蟹普遍都会替别人着想，而且喜欢依靠着自己信任的人，所以如果一个巨蟹愿意迁就你，遇到事情想跟你诉说，那恭喜你已经成为巨蟹心中的&quot;自家人&quot;了。他们也普遍善良，对待朋友两肋插刀，而且是嘴上不愿多说，但是行动的巨人。愿意倾听你，不会轻易打断你，喜欢和你分享快乐。</p><p>但巨蟹的敏感你可能要有心理准备，真的是别人可能无心的一句话，会深深刺伤巨蟹，迫使他把自己重新藏进壳里，所以当你发现巨蟹突然地不说话，不高兴写在脸上，回避你的交流，甚至不回答你的问题时，他就是被你的哪一句话或是某种行为伤了。真的太敏感了，而且细节观察能力惊人，尤其是对于人类间情绪的敏感度极高，所以巨蟹座是受情绪影响的星座。不止敏感，而且被动，自己藏着掖着，自己焦虑，自己烦恼，自己伤心，自我封闭，这就是最坏的巨蟹。所以希望你能稍微主动一点，让巨蟹知道你还在乎他，你不是真的要伤害他，他会一秒变地心情大好，情绪变化贼快，最最核心的，安全感，让巨蟹有安全感，不管是巨蟹男还是巨蟹女，都是第一位的。所以家人在巨蟹心中永远第一位，你愿意成为他们的家人吗？</p>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿巛对信息时代整理信息的经验浅谈</title>
      <link href="/post/d766b22.html"/>
      <url>/post/d766b22.html</url>
      
        <content type="html"><![CDATA[<h2 id="图片管理方式"><a class="markdownIt-Anchor" href="#图片管理方式"></a> <strong>图片管理方式</strong></h2><p>日常摄影图片定期上传在Onedrive的【dailylog】文件夹里（不想被手机厂商的云盘绑定），命名方式为日期+事件。课程、讲座图片放在手机的相册【讲座&amp;课程】。</p><p>有的时候由于插入笔记等需要，对图片进行批量压缩，使用的是utools的官方插件能对整个文件夹的图片进行压缩，大大减小图片的文件大小。</p><p>手机的修图软件，目前主要用的是醒图（滤镜、模板很多）、图叨叨（加相机水印），最近开始接触到lightroom，不过还不熟悉。</p><p>dailylog 文件夹截图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309074.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309292.png"></div></div><h2 id="word和ppt文件管理方式"><a class="markdownIt-Anchor" href="#word和ppt文件管理方式"></a> <strong>Word和PPT文件管理方式</strong></h2><p>目前的管理方式是认为Word和PPT放在一起很舒服，以前比如上一门课，遇见一件事，会专门创建一个文件夹，然后放PPT和Word，导致这些文件都很散乱，虽然要找是能找到的。目前的管理思路是，把这些文件都放在一起，文稿类的一个文件夹，汇报类的一个文件夹，如果实在有必要再专门创建一个事件文件夹，把对应的文件以超链接的形式丢进去，这样也方便利用之前的创作心血。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309259.png"></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309925.png"></div></div><p>对于PPT，我设计了用于个人汇报的模板，针对不同的场景设计了一些母版样式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309835.png"></div></div><p>对于Word文稿写作，也有一个样式模板，习惯是用思源笔记写初稿导出md，然后用quarto（下一代RMarkdown）将md渲染为我设计的word模板样式。具体可见</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309803.png"></div></div><h2 id="手机电脑同步文件"><a class="markdownIt-Anchor" href="#手机电脑同步文件"></a> 手机电脑同步文件</h2><p>鉴于现在主力聊天软件用微信，考虑到微信的文件传输电脑没登陆就传输一般收不到，会在onedrive创建一个【临时文件夹】，专门用来同步临时的文件。</p><h2 id="待办管理方式"><a class="markdownIt-Anchor" href="#待办管理方式"></a> 待办管理方式</h2><p>目前主要的待办软件是滴答清单，主要看重它支持日历视图+番茄钟，并且还支持markdown笔记。</p><p>在待办清单分为上，主要分为【工作】【个人充电】【琐事】【收集箱】，其中【个人充电】这个模块我分类比较细，其他模块的使用还有待改进。【收集箱】这个参考了GTD的管理方式，琐事、一些想法、稍后细读的文章视频都会丢进去。（其实按理来说应该加标签进行分类的，但我总是懒得加）</p><p>目前还挖掘到滴答清单做临时笔记非常好用，特别是一些琐事的笔记，所以额外创建了一个【临时笔记】。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252310543.png"></div></div><p>手机的桌面的小组件主要放了两个分类，【收集箱】与【临时笔记】。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252310981.jpg"></div></div><h2 id="笔记管理方式"><a class="markdownIt-Anchor" href="#笔记管理方式"></a> 笔记管理方式</h2><p>目前主力笔记是思源笔记，一款本地优先的双链笔记软件。</p><p>我目前使用的笔记方式，叫做dailynote，或者叫渐进式笔记法。简单说就是每日主要在日记页面做笔记，利用双链传递信息这一特性，依靠每天不断积累、不断丰富所引用文档或块的信息浓度，也就是你可以新建一个空白文档，暂时可以啥都不写，每天有点小心得就双链引用下，写下当日心得，等觉得积累差不多了再整理信息成为自己的知识笔记。做一个比喻就是，种下很多颗种子，每日悉心照料，等待它开花结果，最终拥有独属自己的知识花园。</p><p>以Adobe Illustrator的笔记为例，展示双链笔记的渐进式笔记法特点</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252310780.png"></div></div><p>下面是我“日记”的模板</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252310547.png"></div></div><p>另外说下，目前创建笔记文档我也是用双链来创建，利用软件的配置方法，可以让这些文档自动放在当月文档下，无需考虑分类，减小记笔记的摩檫力</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252310343.png"></div></div><h2 id="网盘资源"><a class="markdownIt-Anchor" href="#网盘资源"></a> 网盘资源</h2><p>目前的主力网盘是阿里云盘（OneDrive只当同步盘，考虑速度不稳定及容量小），相比百度网盘来说，最大特点是非会员下载速度还可以，目前影视资源分享阿里云盘的也非常多。</p><p>主要会放把个人的信息文件（比如身份证、户口簿、银行卡、荣誉证书、证明文件等等）、资源（影视、书籍、课程资源、软件资源）以及归档（考证的笔记与资源、大项目的文件）。</p><p>目前阿里云盘并不支持分享常见的zip、rar等压缩包，我目前主要用bandzip制作exe格式的压缩包。</p><p>影视资源的寻找主要在酷安的阿里云盘软件评论区搜刮，很多影片一搜就有。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202304252309456.png"></div></div>]]></content>
      
      
      <categories>
          
          <category> 阿巛随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人反思 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装mambaforge</title>
      <link href="/post/c6467c9c.html"/>
      <url>/post/c6467c9c.html</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要用mambaforge"><a class="markdownIt-Anchor" href="#为什么要用mambaforge"></a> 为什么要用mambaforge？</h2><p>Anaconda 臃肿，</p><h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2><p><a href="https://github.com/conda-forge/miniforge">conda-forge/miniforge: A conda-forge distribution. (github.com)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe</span><br></pre></td></tr></table></figure><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>mamba init：<code>~/.bash_profile</code>添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(&#x27;/c/Users/Achuan-2/mambaforge/Scripts/conda.exe&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27;)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;/c/Users/Achuan-2/mambaforge/etc/profile.d/mamba.sh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    . <span class="string">&quot;/c/Users/Achuan-2/mambaforge/etc/profile.d/mamba.sh&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="新建个人环境"><a class="markdownIt-Anchor" href="#新建个人环境"></a> 新建个人环境</h2><p>新建个人环境，base环境不装东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n achuan --<span class="built_in">clone</span> base</span><br></pre></td></tr></table></figure><p>安装基础包：vim equirements.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">autopep8</span><br><span class="line">numpy</span><br><span class="line">pandas</span><br><span class="line">tqdm</span><br><span class="line">pandas</span><br><span class="line">matplotlib</span><br><span class="line">Pillow</span><br><span class="line">seaborn</span><br><span class="line">ipympl</span><br><span class="line">ipykernel</span><br><span class="line">scikit-image</span><br><span class="line">jupyterlab</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mamba install --<span class="built_in">yes</span> --file requirements.txt</span><br></pre></td></tr></table></figure><h2 id="配置镜像"><a class="markdownIt-Anchor" href="#配置镜像"></a> 配置镜像</h2><p><code>vim ~/.condarc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">conda config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conda config --add channels bioconda</span><br><span class="line"><span class="comment">#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span></span><br><span class="line"><span class="comment">#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conda config --get channels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复默认镜像</span></span><br><span class="line">conda config --remove-key channels</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><h3 id="windows-不支持mamba-init只能用conda-activate来切换环境"><a class="markdownIt-Anchor" href="#windows-不支持mamba-init只能用conda-activate来切换环境"></a> windows 不支持mamba init，只能用conda activate来切换环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;gbk&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xaa in position 347: illegal multibyte sequence</span></span><br><span class="line"><span class="string">An unexpected error has occurred. Conda has prepared the above report</span></span><br></pre></td></tr></table></figure><ul><li><p>解决方法</p><p>C:\Users\Achuan-2\mambaforge\Lib\site-packages\mamba\mamba_shell_init.py</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- 35 with open(file, &quot;r&quot;) as fi:</span></span><br><span class="line"><span class="addition">+ 35 with open(file, &quot;r&quot;,encoding=&quot;utf-8&quot;) as fi:</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 配置 Matlab 运行环境</title>
      <link href="/post/c873b400.html"/>
      <url>/post/c873b400.html</url>
      
        <content type="html"><![CDATA[<h2 id="需要的扩展"><a class="markdownIt-Anchor" href="#需要的扩展"></a> 需要的扩展</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=Gimly81.matlab">Matlab </a>：支持代码高亮、snippets、代码检查</li><li><a href="https://marketplace.visualstudio.com/items?itemName=AffenWiesel.matlab-formatter">matlab-formatter</a>：设定缩进距离以及是否分隔块</li><li><a href="https://marketplace.visualstudio.com/items?itemName=apommel.matlab-interactive-terminal">Matlab Interactive Terminal - Visual Studio Marketplace</a>：调用了 matlab 官方提供的 python engine，无需打开 matlab 的 IDE 即可运行 matlab 终端</li></ul><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="为-python-配置-matlab-引擎的-api"><a class="markdownIt-Anchor" href="#为-python-配置-matlab-引擎的-api"></a> 为 Python 配置 Matlab 引擎的 API</h3><p>在管理员模式打开终端，运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;C:\Program Files\MATLAB\R2022b\extern\engines\pythonn&quot;</span> python setup.py install</span><br></pre></td></tr></table></figure><blockquote><p>如果报错：<code>error: [WinError 5] 拒绝访问。: 'dist\matlabengineforpython.egg-info'</code></p><p>说明没打开管理员模式。</p></blockquote><h3 id="vscode-的-settingsjson-配置"><a class="markdownIt-Anchor" href="#vscode-的-settingsjson-配置"></a> VSCode 的 Settings.json 配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ------matlab Start----------- //</span></span><br><span class="line"><span class="attr">&quot;files.associations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;*.m&quot;</span><span class="punctuation">:</span> <span class="string">&quot;matlab&quot;</span> <span class="comment">// 为.m文件启动 Matlab 扩展</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;matlab.linterEncoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;utf8&quot;</span><span class="punctuation">,</span>  <span class="comment">// 设置mlint返回结果编码为 utf8</span></span><br><span class="line"><span class="attr">&quot;matlab.matlabpath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Program Files\\MATLAB\\R2022b\\bin\\matlab.exe&quot;</span><span class="punctuation">,</span> <span class="comment">// 根据自己的路径设置matlab.exe路径</span></span><br><span class="line"><span class="attr">&quot;matlab.mlintpath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Program Files\\MATLAB\\R2022b\\bin\\win64\\mlint.exe&quot;</span><span class="punctuation">,</span> <span class="comment">// 根据自己的路径设置mlint.exe路径</span></span><br><span class="line"><span class="comment">// ------matlab End----------- //</span></span><br></pre></td></tr></table></figure><h2 id="如何使用"><a class="markdownIt-Anchor" href="#如何使用"></a> 如何使用</h2><p>打开 Matlab 终端：<code>Ctrl + Shift + P </code>→ <code>Open a Matlab Terminal</code></p><p>运行当前打开的脚本：<code>Ctrl + Shift + P </code>→ <code>Run current Matlab Script</code></p><p>执行选中的部分代码：<code>Ctrl + Shift + P </code>→<code>Run current selection in Matlab</code></p><p>添加脚本到 Matlab 路径中，在 matlab 终端中输入 <code>pathtool</code>，然后弹出如下窗口</p><div class="tag-plugin image"><div class="image-bg"><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202308101027924.png"></div></div><h2 id="不建议"><a class="markdownIt-Anchor" href="#不建议"></a> 不建议</h2><ul><li><p>使用 code runner 扩展跑 Matlab</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;code-runner.executorMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;matlab&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; matlab -nosplash -nodesktop -r $fileNameWithoutExt&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></li><li><p>使用 <a href="https://marketplace.visualstudio.com/items?itemName=bramvanbilsen.matlab-code-run">Matlab Code Run</a> 扩展</p></li></ul><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/395486395">使用 vscode 编辑并运行 matlab 脚本 - 知乎 (zhihu.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quarto：Markdown 又何必只是 Markdown</title>
      <link href="/post/50f47788.html"/>
      <url>/post/50f47788.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Quarto 是下一代的 Rmarkdown，相比 Rmarkdown 来说，把生态给大一统了，你甚至不需要有 R 环境也能用，VSCode 上也有专门的<a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">插件</a>。Quarto 的强大之处在于，不仅仅在于可以渲染代码运行结果，而且导出文档方面是我目前见过最无敌的存在，相信我，用上它，你会见到 markdown 的另一片天空。你只需要把 md 改成 qmd 后缀，加上一个 yaml 头，轻轻一点渲染按钮，就可以导出 word、html、ipynb、GFM 规范的 md（还可以设置公式导出为纯文本还是图片），甚至当成简易版的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 代码与 markdown 语法混用，导出样式精美的 pdf。</p></blockquote><p>关联文章：：<a href="https://www.achuan-2.top/posts/bc4b56d9.html">设置word模板，Markdown 也能自动转换为美观规范的 Word 文档</a></p><h2 id="为什么要用-quarto"><a class="markdownIt-Anchor" href="#为什么要用-quarto"></a> 为什么要用 Quarto？</h2><p>先简单介绍下 Quarto，官网地址 <a href="https://quarto.org/">https://quarto.org/</a>。</p><p>官网是这样介绍的：</p><blockquote><p>Quarto is an open-source scientific and technical publishing system built on <a href="https://pandoc.org/">Pandoc</a></p><ul><li>Create dynamic content with <a href="https://quarto.org/docs/computations/python.html">Python</a>, <a href="https://quarto.org/docs/computations/r.html">R</a>, <a href="https://quarto.org/docs/computations/julia.html">Julia</a>, and <a href="https://quarto.org/docs/computations/ojs.html">Observable</a>.</li><li>Author documents as plain text markdown or <a href="https://jupyter.org/">Jupyter</a> notebooks.</li><li>Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.</li><li>Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.</li></ul></blockquote><p>简单来说，Quarto 这个软件可以</p><ul><li><p>用来写代码：类似 Jupyter Notebook，可以 Markdown 和代码一起写，并能渲染代码结果到文档里，支持的语言有 Python、R、Julia 和 Observable，能将渲染结果输出为 HTML、PDF、Word 和 GFM Markdown。对于输出为 Markdown，公式还支持直接转换为 <a href="https://github.com/KTHse/webtex">WebTex</a> 图片，方便发布到其他博客或放入笔记软件里；</p></li><li><p>用来写严肃的报告：相当于pandoc加强版和LaTex简易版，支持导出为PDF、Word，并且支持交叉引用，可以引用图表、引用文献。</p></li><li><p>用来写博客、写书。</p><ul><li>写博客的文档：<a href="https://quarto.org/docs/websites/">Quarto - Creating a Website</a>；</li><li>写书的文档：<a href="https://quarto.org/docs/books/">Quarto - Creating a Book</a>。</li></ul></li></ul><p>Quarto 可以说是下一代 RMarkdown ，相比 RMarkdown，将环境给大统一，更好的适配 VSCode，你甚至不需要有 R 环境、安装 Rstudio，就能用 Quarto 写文章和报告。我对 Quarto 的整体印象，可以概括为“枢纽”二字，能写代码，能与 Jupyter Notebook 相互转换，能将 Markdown 导出为各种常用格式，可以当成简易版的 LaTex 写报告，将 Markdown 的生态大大强化。</p><p>而 Quarto 对于 Markdown 的处理仅仅只是将文件后缀由 md 改为了 qmd，并在 yaml 中输入参数即可。（当然 Quarto 也有独属的 Markdown 书写方言，起强化 Markdown 排版作用）</p><p>本文的重点会聚焦于怎么用 Quarto 将 Markdown 输出为 GFM、Word、PDF 文档，侧重于文档写作。至于写代码、写博客、写书部分，限于篇幅，建议去看<a href="https://quarto.org/docs/guide/">官方文档</a>。</p><h2 id="quarto-环境配置"><a class="markdownIt-Anchor" href="#quarto-环境配置"></a> Quarto 环境配置</h2><p>在 <a href="https://quarto.org/docs/get-started/">Quarto - Get Started</a> 页面下载 Quarto Cli 软件，然后选择你喜欢的编辑器搭配环境即可。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/50f47788/image-20221119153936-9ercyyi.png"></div></div><p>我这里推荐的是 VSCode。微软有两种软件：一种是 VSCode，一种是其他软件。只要你吹 VSCode，我们就是好朋友。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/50f47788/image-20221117114653-3cei725.png"></div></div><p>要在 VSCode，只需要安装 <a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">vscode-quarto</a> 插件，即可开箱使用。</p><p>用 VSCode 有几个好处</p><ul><li>Quarto 插件可以提供基本的语法提示功能，还有 Github Copilot 来 AI 提示。</li><li>文件夹内各种格式随意创建：<code>.ipynb</code>、<code>.qmd</code>、<code>.md</code>、<code>.py</code>、<code>.R</code></li><li>VSCode 有 LaTeX 插件，可以用 Quarto 导出 ducument.tex，再用网上的模板渲染成自己需要的文档格式。</li></ul><blockquote><p>注 1：</p><p>虽然这里只介绍用 VSCode，但 Quarto 本家的 RStudio 对 Quarto 的适配也非常好，代码运行结果可以直接在代码块显示（VSCode 只能输出在终端或者渲染在最终文档里），可以切换为 Visual 模式（类似于 Markdown 笔记软件的即时渲染模式），Visual 模式支持斜杆命令输入各种块。所以还是很强大的。但本人是坚定的 VSCode 拥护者，RStudio 只能是陪衬辅助，不会是主力。</p></blockquote><blockquote><p>注 2：</p><p>VSCode 用 qmd 写 R 代码其实不是很方便，如果要用 VSCode 写 R 代码，我个人是建议用 jupyter 写，然后用 <code>quarto convert xxx.ipynb</code> 转换为 qmd，再进行渲染。嫌麻烦的话还是建议用 RStudio 吧。</p></blockquote><p>如果你需要导出 pdf，又没有 LaTeX 环境，可以用 quarto install 安装 mini 版的 tinytex</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quarto install tinytex --update-path</span><br></pre></td></tr></table></figure><h2 id="个人用quarto的流程"><a class="markdownIt-Anchor" href="#个人用quarto的流程"></a> 个人用Quarto的流程</h2><p>先在思源笔记内写稿子，导出为md，将md后缀改为qmd，在开头加上YMAL头进行渲染设置，点击VSCode右上方的渲染按钮进行渲染，得到文档。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/50f47788/image-20221119160350-4c1ulmg.png"></div></div><h2 id="qmd-补充语法简单介绍"><a class="markdownIt-Anchor" href="#qmd-补充语法简单介绍"></a> qmd 补充语法简单介绍</h2><p>Quarto 相比于 GFM，还是加了一些自己的排版语法的，具体可以去官方文档的 <a href="https://quarto.org/docs/authoring/markdown-basics.html">Authoring</a> 章节查看。</p><p>我这里只提几点</p><h3 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h3><p>图标标注：如果开启了图片编号，默认 alt 文本会作为图片的标注，title 是不会作为标题的（不知道有没有配置选项，目前还找不到）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image src title %&#125;</span><br></pre></td></tr></table></figure><p>图片调整大小</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image figure.png  %&#125;&#123;fig.width=&#x27;50%&#x27;&#125;</span><br></pre></td></tr></table></figure><p>对于 pdf 输出，众所周知，LaTeX 渲染的 pdf 图片是薛定谔式出现的，可以设置 <code>fig.pos='H'</code> 来固定图片位置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image figure.png  %&#125;&#123;fig.pos=&#x27;H&#x27;&#125;</span><br></pre></td></tr></table></figure><p>设置图片 label，用于交叉引用(注意，只能是 <code>#fig-</code>+label）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image figure.png  %&#125;&#123;#fig-first&#125;</span><br></pre></td></tr></table></figure><h3 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| fruit  | price  |</span><br><span class="line">|--------|--------|</span><br><span class="line">| apple  | 2.05   |</span><br><span class="line">| pear   | 1.37   |</span><br><span class="line">| orange | 3.09   |</span><br></pre></td></tr></table></figure><p>设置表题 <code>: Fruit prices</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">| fruit  | price  |</span><br><span class="line">|--------|--------|</span><br><span class="line">| apple  | 2.05   |</span><br><span class="line">| pear   | 1.37   |</span><br><span class="line">| orange | 3.09   |</span><br><span class="line"></span><br><span class="line">: Fruit prices</span><br></pre></td></tr></table></figure><p>设置表格每列的宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">| fruit  | price  |</span><br><span class="line">|--------|--------|</span><br><span class="line">| apple  | 2.05   |</span><br><span class="line">| pear   | 1.37   |</span><br><span class="line">| orange | 3.09   |</span><br><span class="line"></span><br><span class="line">: Fruit prices &#123;tbl-colwidths=&quot;[75,25]&quot;&#125;</span><br></pre></td></tr></table></figure><p>设置表格 label，用于交叉引用(注意，只能是 <code>#tbl-</code>+label）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">| fruit  | price  |</span><br><span class="line">|--------|--------|</span><br><span class="line">| apple  | 2.05   |</span><br><span class="line">| pear   | 1.37   |</span><br><span class="line">| orange | 3.09   |</span><br><span class="line"></span><br><span class="line">: Fruit prices &#123;#tbl-fruit&#125;</span><br></pre></td></tr></table></figure><h3 id="图表交叉引用"><a class="markdownIt-Anchor" href="#图表交叉引用"></a> 图表交叉引用</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文字（见 @tbl-fruit）</span><br><span class="line">文字（见 @fig-first)</span><br></pre></td></tr></table></figure><p>渲染结果会是：</p><p>文字（见表 1）</p><p>图片（见图 1）</p><hr><p>注意：交叉引用 @ 前需要有一个空格</p><p>注意，Quarto 默认是图表题是 Figure 和 Table，如果要改为中文需要在 YAML 里添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">crossref:</span></span><br><span class="line">  <span class="attr">chapters:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fig-title:</span> <span class="string">图</span>    <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-title:</span> <span class="string">表</span>     <span class="comment"># (default is &quot;Table&quot;)</span></span><br><span class="line">  <span class="attr">title-delim:</span> <span class="string">&quot;.&quot;</span>  <span class="comment"># (default is &quot; &quot;), not for pdf</span></span><br><span class="line">  <span class="attr">fig-prefix:</span> <span class="string">图</span>  <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-prefix:</span> <span class="string">表</span>    <span class="comment"># (default is &quot;Table&quot;)</span></span><br></pre></td></tr></table></figure><h3 id="文献引用"><a class="markdownIt-Anchor" href="#文献引用"></a> 文献引用</h3><p>需要准备一个 <code>references.bib</code>，里面放入参考文献的 bibtex 或 bibLatex 格式的 metadata。</p><p>并在 YAML 里配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bibliography:</span> <span class="string">references.bib</span></span><br></pre></td></tr></table></figure><p>就可以在文献里同样用 @ 来引用参考文件了。</p><p>可以设置引用和末尾生成参考文献格式的样式</p><p>对于导出 word，用的是 pandoc 只能设置为 citeproc（最大的问题是中英文参考文献无法区分）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cite-method:</span> <span class="string">citeproc</span></span><br></pre></td></tr></table></figure><p>对于导出 pdf，可以设置更强大的 biblatex</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">cite-method:</span> <span class="string">biblatex</span></span><br></pre></td></tr></table></figure><h2 id="yaml-模板"><a class="markdownIt-Anchor" href="#yaml-模板"></a> YAML 模板</h2><p>前面扯这么多，其实这部分才是本文核心（滑稽）。</p><p>毕竟只需要将 YAML 内容粘贴到 qmd 最前面，就可以设置渲染格式了</p><h3 id="gfm-模板"><a class="markdownIt-Anchor" href="#gfm-模板"></a> GFM 模板</h3><p>官方配置文档：<a href="https://quarto.org/docs/output-formats/gfm.html">GFM Markdown</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;My Document&quot;</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;Achuan-2&quot;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&quot;2022.11.19&quot;</span></span><br><span class="line"><span class="attr">date-format:</span> <span class="string">&quot;YYYY.MM.DD&quot;</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">crossref:</span></span><br><span class="line">  <span class="attr">chapters:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fig-title:</span> <span class="string">图</span>    <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-title:</span> <span class="string">表</span>     <span class="comment"># (default is &quot;Table&quot;)</span></span><br><span class="line">  <span class="attr">title-delim:</span> <span class="string">&quot;.&quot;</span>  <span class="comment"># (default is &quot; &quot;), not for pdf</span></span><br><span class="line">  <span class="attr">fig-prefix:</span> <span class="string">图</span>  <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-prefix:</span> <span class="string">表</span>    <span class="comment"># (default is &quot;Table&quot;)</span></span><br><span class="line"><span class="attr">format:</span> </span><br><span class="line">  <span class="attr">gfm:</span></span><br><span class="line">      <span class="attr">html-math-method:</span> <span class="string">katex</span> <span class="comment"># webtex, mathjax, katex</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ul><li>在于生成的md，是带有交叉引用功能的（通过html锚点实现）</li><li>可以把公式转换为图片（webtex），以用于不支持katex的网站</li></ul><h3 id="word-模板"><a class="markdownIt-Anchor" href="#word-模板"></a> Word 模板</h3><p>官方配置文档：<a href="https://quarto.org/docs/reference/formats/docx.html#title-author">Word</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;My Document&quot;</span></span><br><span class="line"><span class="attr">format:</span></span><br><span class="line">  <span class="attr">docx:</span></span><br><span class="line">    <span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">number-sections:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">highlight-style:</span> <span class="string">github</span></span><br><span class="line">    <span class="attr">code-line-numbers:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">link-citations:</span> <span class="literal">true</span>  <span class="comment"># 设置正文引用可以超链接到参考文献表中相应的条目，默认为 false，当然true啦</span></span><br><span class="line">    <span class="attr">reference-section-title:</span> <span class="string">&quot;参考文献&quot;</span></span><br><span class="line">    <span class="attr">bibliography:</span> <span class="string">references.bib</span></span><br><span class="line">    <span class="attr">reference-doc:</span> <span class="string">&quot;F:\\OneDrive\\文档\\模板\\ref.docx&quot;</span></span><br><span class="line">    <span class="attr">csl:</span> <span class="string">&quot;gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>导出 Word 部分，其实用的就是 pandoc，但是相比 pandoc 就更方便了，写完直接点击渲染按钮就可以。如何设置 word 模板可以见之前写的：<a href="https://www.achuan-2.top/posts/bc4b56d9.html">设置word模板，Markdown 也能自动转换为美观规范的 Word 文档</a>。里面也分享了我用的 word 文档。</p><h3 id="中文-pdf-模板"><a class="markdownIt-Anchor" href="#中文-pdf-模板"></a> 中文 PDF 模板</h3><p>官方配置文档：<a href="https://quarto.org/docs/output-formats/pdf-basics.html">PDF</a></p><p>对于 LaTex 真是又爱又恨，看 PDF 的 YAML 设置这么长就知道了，orz。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;My Document&quot;</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;Achuan-2&quot;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&quot;2022.11.19&quot;</span></span><br><span class="line"><span class="attr">date-format:</span> <span class="string">&quot;YYYY.MM.DD&quot;</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">number-sections:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">shift-heading-level-by:</span> <span class="number">-1</span></span><br><span class="line"><span class="attr">monofont:</span> <span class="string">&quot;Consolas&quot;</span></span><br><span class="line"><span class="attr">crossref:</span></span><br><span class="line">  <span class="attr">chapters:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fig-title:</span> <span class="string">图</span>    <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-title:</span> <span class="string">表</span>     <span class="comment"># (default is &quot;Table&quot;)</span></span><br><span class="line">  <span class="attr">title-delim:</span> <span class="string">&quot;-&quot;</span>  <span class="comment"># (default is &quot;:&quot;), not for pdf</span></span><br><span class="line">  <span class="attr">fig-prefix:</span> <span class="string">图</span>  <span class="comment"># (default is &quot;Figure&quot;)</span></span><br><span class="line">  <span class="attr">tbl-prefix:</span> <span class="string">表</span>    <span class="comment"># (default is &quot;Table&quot;)</span></span><br><span class="line"><span class="attr">format:</span> </span><br><span class="line">  <span class="attr">pdf:</span></span><br><span class="line">    <span class="comment"># toc</span></span><br><span class="line">    <span class="attr">toc-depth:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">toc-title:</span> <span class="string">Contents</span></span><br><span class="line">    <span class="comment"># cite</span></span><br><span class="line">    <span class="attr">cite-method:</span> <span class="string">biblatex</span> <span class="comment"># biblatex,citeproc</span></span><br><span class="line">    <span class="attr">bibliography:</span> <span class="string">references.bib</span></span><br><span class="line">    <span class="attr">biblio-title:</span> <span class="string">References</span></span><br><span class="line">    <span class="comment"># output</span></span><br><span class="line">    <span class="attr">documentclass:</span> <span class="string">article</span> <span class="comment"># scrartcl，article, report or book</span></span><br><span class="line">    <span class="attr">papersize:</span> <span class="string">a4</span> <span class="comment"># a4, letter</span></span><br><span class="line">    <span class="attr">colorlinks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#classoption: [twocolumn,landscape] </span></span><br><span class="line">    <span class="attr">keep-tex:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fig-pos:</span> <span class="string">&#x27;H&#x27;</span></span><br><span class="line">    <span class="attr">tbl-cap-location:</span> <span class="string">top</span></span><br><span class="line">    <span class="attr">fig-cap-location:</span> <span class="string">bottom</span></span><br><span class="line">    <span class="attr">listings:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">code-block-bg:</span> <span class="string">&#x27;#f6f8fa&#x27;</span></span><br><span class="line">    <span class="attr">highlight-style:</span> <span class="string">github</span></span><br><span class="line">    <span class="attr">code-block-border-left:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">geometry:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">top=30mm</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">left=20mm</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">heightrounded</span></span><br><span class="line">    <span class="attr">include-in-header:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        \usepackage&#123;ctex&#125;    % CJK 包</span></span><br><span class="line"><span class="string">        \usepackage[backend=biber,style=gb7714-2015,gbnamefmt=lowercase]&#123;biblatex&#125;</span></span><br><span class="line"><span class="string">        \usepackage[dvipsnames]&#123;xcolor&#125;</span></span><br><span class="line"><span class="string">        \setCJKmainfont[AutoFakeBold = &#123;2.25&#125;]&#123;宋体&#125;</span></span><br><span class="line"><span class="string">        \setmainfont&#123;Times New Roman&#125; %英文字體調整</span></span><br><span class="line"><span class="string">        \usepackage&#123;caption&#125;</span></span><br><span class="line"><span class="string">        \captionsetup[figure]&#123;labelformat=simple, labelsep=period&#125;</span></span><br><span class="line"><span class="string">        \captionsetup[table]&#123;labelformat=simple, labelsep=period&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h2><ul><li>对于输出 PDF 来说，比如 <code>&lt;region&gt;</code> 这种格式不能直接输出显示，需要改成 <code>\&lt;region\&gt;</code></li><li>思源导出图片会加两边加零宽字符，导致 alt 无法转化为图片标题。需要用 sublime text 等软件去掉。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/50f47788/image-20221119144428-4xwickp.png"></div></div><hr><p>暂时就到这里结束了，摸鱼了 1h 半写这篇文章 😁。</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Quarto </tag>
            
            <tag> Word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置word模板，Markdown 也能自动转换为美观规范的 Word 文档</title>
      <link href="/post/bc4b56d9.html"/>
      <url>/post/bc4b56d9.html</url>
      
        <content type="html"><![CDATA[<p>首先先介绍下我为什么要将 Markdown 转换为 Microsoft Word 的文件，以及写这篇文章。</p><ol><li>正式的报告常常需要交 Word 格式的，而且需要引用参考文献。但我还是喜欢先用 Markdown 写稿子，最后再用 Word 来完善文稿内容和排版，让内容和样式相分离。</li><li>就算一些软件比如思源笔记、Typora 可以直接导出 docx 文件，但目前还不怎么不支持设置自定义的参数，导出的 docx 需要进行很大程度的修改，很费力，是重复劳动。</li></ol><p>所以这篇文章的目的就是介绍下如何更丝滑的把 Markdown 初步导出成满意的 Word 样式的，最后会点下Quarto这个更好用的工具。</p><h2 id="pandoc-基本命令"><a class="markdownIt-Anchor" href="#pandoc-基本命令"></a> Pandoc 基本命令</h2><p>先简单介绍下 Pandoc。这个是一个很强大的通用文档转换工具，可以支持大量标记语言之间的格式转换，例如 Markdown 、Microsoft Word、PowerPoint、 Jupyter Notebook、HTML、PDF、LaTeX、Wiki、EPUB 格式之间的相互转换。这篇文章里，我主要介绍 Markdown 怎么转换为 Microsoft Word 的文件。</p><p>首先先介绍 pandoc 的基本命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pandoc --citeproc --number-sections \</span><br><span class="line">--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \</span><br><span class="line">--bibliography ref.bib -M reference-section-title=<span class="string">&quot;参考文献&quot;</span> \</span><br><span class="line">-M link-citations=<span class="literal">true</span> --reference-doc=ref.docx -s input.md -o main.docx</span><br></pre></td></tr></table></figure><p>别看到这个就跑路了，来一点点拆解：</p><ul><li><p><code>pandoc</code>：执行 Pandoc 命 p 令</p></li><li><p><code>--citeproc</code>：处理文献引用，也可用 <code>-C</code> 代替</p></li><li><p><code>--number-sections</code>：对各级标题编号，形如 <code>1, 1.1, 1.1.1</code>，也可用 <code>-N</code> 代替</p></li><li><p><code>--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl</code>：指定参考文献样式，中文报告一般用 GB/T 7714-2015 的格式，更多样式可以前往 <a href="https://www.zotero.org/styles">Zotero Style Repository</a> 和<a href="https://github.com/redleafnew/Chinese-STD-GB-T-7714-related-csl">redleafnew/Chinese-STD-GB-T-7714-related-csl</a>下载，需要注意的是pandoc目前不支持CSL-M的csl文件，那种多个作者能中文显示等、英文显示et al的就不能使用，会导致参考文献列表重复，需要把这类csl里的layout进行注释。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bibliography</span> <span class="attr">entry-spacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">et-al-min</span>=<span class="string">&quot;4&quot;</span> <span class="attr">et-al-use-first</span>=<span class="string">&quot;3&quot;</span> <span class="attr">second-field-align</span>=<span class="string">&quot;flush&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 取消这部分注释可以使用 CSL-M 的功能支持双语 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;layout suffix=&quot;.&quot; locale=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;text variable=&quot;citation-number&quot; prefix=&quot;[&quot; suffix=&quot;]&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;text macro=&quot;entry-layout&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;/layout&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">layout</span> <span class="attr">suffix</span>=<span class="string">&quot;.&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">variable</span>=<span class="string">&quot;citation-number&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;[&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;]&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">macro</span>=<span class="string">&quot;entry-layout&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bibliography</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>--bibliography ref.bib</code>：引文数据文件，类似下面这样。在 md 文档里可以用 <code>描述 [@key]</code> 的方式进行引用文献，比如 <code>谷歌学术nb[@董文鸳2011我国谷歌学术搜索研究综述]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@article&#123;董文鸳2011我国谷歌学术搜索研究综述,</span><br><span class="line">    title   = &#123;我国谷歌学术搜索研究综述&#125;,</span><br><span class="line">    author  = &#123;董文鸳&#125;,</span><br><span class="line">    journal = &#123;新世纪图书馆&#125;,</span><br><span class="line">    number  = &#123;9&#125;,</span><br><span class="line">    pages   = &#123;43--45&#125;,</span><br><span class="line">    year    = &#123;2011&#125;,</span><br><span class="line">    langid = &#123;chinese&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>-M reference-section-title=&quot;参考文献&quot;</code>：设置参考文献表的标题为「参考文献」</p></li><li><p><code>-M link-citations=true</code>：设置正文引用可以超链接到参考文献表中相应的条目，默认为 <code>false</code></p></li><li><p><code>--reference-doc ref.docx</code>：参考的 docx 文件格式模板</p></li><li><p><code>input.md</code>：存储文章内容的 Markdown 文件</p></li><li><p><code>-o main.docx</code>：输出 docx 文件</p></li><li><p><code>\</code>：反斜杠，表示换行，你也可以删除它，把所有命令写在一行。</p></li></ul><p>‍</p><h2 id="如何生成和修改模板"><a class="markdownIt-Anchor" href="#如何生成和修改模板"></a> 如何生成和修改模板</h2><h3 id="生成简陋的模板文件"><a class="markdownIt-Anchor" href="#生成简陋的模板文件"></a> 生成简陋的模板文件</h3><p>根据创建的md基本样式文件 <code>basic.md</code> 生成一个 docx 文件，这个文件我上传到了 <a href="https://github.com/Achuan-2/mini/blob/main/pandoc/basic.md">GitHub</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pandoc --citeproc \</span><br><span class="line">--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \</span><br><span class="line">--bibliography ref.bib -M reference-section-title=<span class="string">&quot;参考文献&quot;</span> \</span><br><span class="line">-M link-citations=<span class="literal">true</span> -s basic.md -o templates.docx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以预览下生成这个 <a href="https://github.com/Achuan-2/mini/blob/main/pandoc/templates.docx">docx</a> 文件，这个默认生成的样式特别难看，标题喜欢用蓝色，和中文报告的格式非常不一致。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-dGSQBqY-20221106232924-nlbef1t.png"></div></div><p>‍</p><p>接着我们会将这个 docx 文件的样式进行修改，以后就可以当成模板，省心省力的把 md 导出成符合格式要求的 word 文件了。</p><h3 id="如何修改模板文件"><a class="markdownIt-Anchor" href="#如何修改模板文件"></a> 如何修改模板文件</h3><p>需要注意的是这里修改模板样式，不是直接修改内容里的样式，必须要修改 word 的样式</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106224812-rjzrjek-20221106232924-opss6v5.png" alt="调出样式表"></div><div class="image-meta"><span class="image-caption center">调出样式表</span></div></div><p>以标题举例</p><p>点击一个标题之后，右侧样式表就会自动选择【标题 1】</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106224959-k87y6cs-20221106232924-0gqycae.png"></div></div><p>接着我们右击，选择修改</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106222531-1xkzz2y-20221106232925-t4cww2u.png"></div></div><p>把标题 1 的样式修改为</p><ul><li>字号：小二</li><li>字体：中文黑体，英文 Times New Roman</li><li>居中</li><li>段前分页</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106222805-f9lccwq-20221106232925-5rr09yy.png" alt="修改标题1的样式"></div><div class="image-meta"><span class="image-caption center">修改标题1的样式</span></div></div><p>这个例子就算举好了，其他标题、正文等样式都以此类推</p><p>但有几个样式我再额外提一下</p><p>代码块样式 Source Code，我是加了在【边框和底纹】添加了灰色的边框和底纹</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106222953-1bxxsls-20221106232925-ix0woo1.png" alt="代码块样式"></div><div class="image-meta"><span class="image-caption center">代码块样式</span></div></div><p>表格样式 Table，我设置的是三线表，具体怎么做可以参考知乎<a href="https://zhuanlan.zhihu.com/p/33000931">这篇教学</a>，把表格上下的边框设置为 1.5 磅，表头下面的边框设置为 0.75 磅。需要注意的是表格的修改必须全选中表格后，在【表设计-修改表格样式】这里修改，修改的样式名称需要是【Table】</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106223758-049j6cb-20221106232925-is1cpx9.png"></div></div><p>另外我给这份模板还自动加了编号，这是因为我觉得 pandoc 虽然本身有–number-sections 参数，但是这个只是人为加上的，编号不会随着标题变化而变化，其实没有大用。在 word 里给标题编号除了让结构更清晰以外，还有一个重要的作用是让表格和图片的题注自动编号！</p><p>如何设置多级标题我这里只点一下，网上教程很多</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106224628-5870vl0-20221106232925-vpklj9f.png"></div></div><h3 id="修改之后的模板"><a class="markdownIt-Anchor" href="#修改之后的模板"></a> 修改之后的模板</h3><p>大概是这样，可能导出 word 之后还不能直接上交，还需要稍微修改，但是模板能够把主要样式以及字体设置完毕之后，已经省下了很多很多力气了，可以更愉快的用 md 来写稿，word 上交了。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/bc4b56d9/net-img-image-20221106222340-5c1qk3g-20221106232925-eg41pat.png"></div></div><p>最后的模板文件可以点击<a href="https://github.com/Achuan-2/mini/blob/main/pandoc/templates_refine.docx">下载</a></p><h2 id="以后导出使用模板"><a class="markdownIt-Anchor" href="#以后导出使用模板"></a> 以后导出使用模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pandoc --citeproc \</span><br><span class="line">--csl gb-t-7714-2015-numeric-bilingual-no-uppercase-no-url-doi.csl \</span><br><span class="line">--bibliography ref.bib -M reference-section-title=<span class="string">&quot;参考文献&quot;</span> \</span><br><span class="line">-M link-citations=<span class="literal">true</span> --reference-doc=template.docx -s input.md  -o output.docx</span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>总结下 pandoc 将 md 导出 docx 格式的优点</p><ul><li>导出速度很快，几乎在几秒内。相较于很重的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 渲染，简直轻快极了！</li><li>可以设置模板的样式进行复用。</li><li>支持参考文献引用（并且支持超链接点击跳转，zotero 我都找不到方式实现……）</li><li>后续可以直接在Word里修改内容，不像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span>导出pdf，修改内容就得重新渲染</li></ul><p>当然也有一些缺点啦，一些样式的处理比如代码块实现不了太精致的样式，参考文献 csl 格式不支持多语言识别，导出之后可能还需要后期调整样式，例如表格和图片大小，等等。</p><p>总的来说，这种方式对于喜欢用 md 写稿，又需要交 word 文件的人，还是帮助很大很大的。像少数派<a href="https://sspai.com/post/64842">这篇文章</a>，就介绍了自己为什么不用 word 写稿、为什么不用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 写稿的原因，感兴趣可以看看。</p><p>最后，本文介绍的这种通过命令行调用 pandoc 导出 md 为 docx 的方式还是非常繁琐的，而且写稿与导出其实是分离开的。</p><p>下一篇文章我将会主要介绍 <a href="https://quarto.org/">Quarto</a> 这个工具。Quarto 是下一代的 Rmarkdown，相比 Rmarkdown 来说，把生态给大一统了，你甚至不需要有 R 环境也能用，VSCode 上也有专门的<a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">插件</a>。Quarto 的强大之处在于，不仅仅在于可以渲染代码运行结果，而且导出文档方面是我目前见过最无敌的存在，相信我，用上它，你会见到 markdown 的另一片天空。你只需要把 md 改成 qmd 后缀，加上一个 yaml 头，轻轻一点渲染按钮，就可以导出 word、html、ipynb、GFM 规范的 md（还可以设置公式导出为纯文本还是图片），甚至当成简易版的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 代码与 markdown 语法混用，导出样式精美的 pdf。好啦，这里就不多说了，等我下篇博客吧。</p><hr><p>本文涉及的文件已上传至<a href="https://github.com/Achuan-2/mini/tree/main/pandoc">GitHub</a></p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Word </tag>
            
            <tag> pandoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 笔记本电脑查看电池使用情况</title>
      <link href="/post/e977bfe7.html"/>
      <url>/post/e977bfe7.html</url>
      
        <content type="html"><![CDATA[<p>不需要其他软件，直接用cmd命令就可以。</p><p>在cmd窗口输入<code>powercfg /batteryreport</code>，生成电池使用情况报告html，</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_22-34-50-20220904223452-x48xwgp.png"></div></div><p>打开html，可以看到详细的电池报告。</p><p>Installed batteries这里，最重要的两个信息是Design capacity(电池设计容量)和Full charge capacity(满电容量)，这两个信息是通过读取电池信息得到的。我们可以粗略通过这两个数据判断电池是否有衰减，如果发现“FULL CHARGE CAPACITY”大幅小于“DESIGN CAPACITY”，那么电池衰减可能就比较厉害了</p><p>下图中，Design capacity=Full charge capacity这是由于我已经换了新电池。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_22-36-04-20220904223606-zys549c.png"></div></div><p>往下翻，还有几栏信息，可以帮助了解电池状态。</p><ul><li>Recent usage观察到电池近三天的电量变化情况，有表格还带有图表。在“STATE”（状态）中，有“Active”（活动）和“Connected standby”（连接待机）等情况，而“SOURCE”（电源）中，则可以观察到电源来自“Battery”（电池）还是“AC”（交流电）。之后一栏“CAPACITY REMAINING”则是电池电量的变化了，判断电脑掉电快到底是耗电异常还是容量衰减，这个数据很有参考价值。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_23-05-38-20220904230542-bao9xjm.png"></div></div><ul><li>在“Usage history”一栏中，可以看到电脑每天“ACTIVE”（活动）和“CONNECTED STANDBY”（连接待机）的时长。有时候电量消耗太快是因为电脑莫名其妙唤醒，没有待机，在这里可以查看耗电太多是不是这一原因。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_23-09-17-20220904230921-xjycjwl.png"></div></div><ul><li>Battery capacity history可以看过去电池容量的变化，下图可以看到2020年11月我电脑电池实际容量只有15Wh了，后来在2020年11月底电池容量突然恢复正常了。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_22-37-54-20220904223801-yudlq5i.png"></div></div><p>为什么呢？这是因为我在这时候换了一个新电池，我重新找了淘宝的购物记录，发现确实就是这时候买的电池。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/image-20220904224059-f1uk6ui.png"></div></div><p>然后再往下滑，可以看到现在的电池容量也只有大约22Wh了，不用充电器大概只能支持40min这样（大概才用了1年9个月）。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/e977bfe7/Snipaste_2022-09-04_22-30-27-20220904223124-9jlxnuy.png"></div></div><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li>在cmd命令行中使用<code>powercfg /batteryreport</code>可以很详细的查看当前电池实际容量来预估电池寿命，还可以追踪过去电池的实际容量变化。</li><li>虽然这个Windows自带的电池检测功能用起来是麻烦了点，但对比第三方软件，它更加靠谱，展示的信息也更多。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tree 查看文件目录神器</title>
      <link href="/post/595885f1.html"/>
      <url>/post/595885f1.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>tree能以树状图列出目录的内容，非常适合概览项目结构。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> tree=<span class="string">&#x27;tree -FCN&#x27;</span></span><br><span class="line">tree -L 2</span><br></pre></td></tr></table></figure><ul><li>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上&quot;*“,”/“,”=“,”@“,”|&quot;号</li><li>-C 在文件和目录清单加上色彩，便于区分各种类型。</li><li>-N 直接列出文件和目录名称，包括控制字符。</li><li>-L 设置展开层级</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/595885f1/1667494832744.png"></div></div><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><h3 id="linux无权限安装"><a class="markdownIt-Anchor" href="#linux无权限安装"></a> Linux无权限安装</h3><ol><li>通过链接地址: <a href="http://mama.indstate.edu/users/ice/tree/">http://mama.indstate.edu/users/ice/tree/</a>下载 tree 安装包。或者使用wget命令：<code>wget http://mama.indstate.edu/users/ice/tree/src/tree-1.8.0.tgz</code>（版本不要安装太新的，可能编译有问题）</li><li>使用指令 <code>tar -zxvf tree-1.8.0.tgz</code> 解压。</li><li>进入解压目录，编辑目录中的 Makefile 文件，将 prefix=后面的路径改为自己的安装目录，比如我的改为 <code>prefix = /home/achuan/softwares/tree-1.8.0</code>，保存。</li><li>在解压目录，输入指令 make install 进行安装。</li><li>编辑用户目录(~）下 <code>vi ~/.bashrc</code> 或 <code>vi ~.bash_profile</code> ，加入以下内容：export <code>PATH=$PATH:/home/achuan/softwares/tree-1.8.0/bin</code></li><li>输入 <code>source ~/.bashrc</code> 或 <code>source ~/.bash_profile</code> 指令更新。</li></ol><h3 id="windows-git-bash安装"><a class="markdownIt-Anchor" href="#windows-git-bash安装"></a> windows Git Bash安装</h3><ul><li>打开进入 <a href="https://gnuwin32.sourceforge.net/packages/tree.htm">Tree for Windows</a> 页面，选择下载 Binaries zip 文件。</li><li>解压压缩包，找到压缩包内的 bin 目录，将 bin 目录下的 tree.exe 复制</li><li>找到安装Git的文件夹，找到该文件夹下的usr\bin 目录，将 tree.exe 粘贴到该目录下，安装即完成</li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 上传包到pypi</title>
      <link href="/post/d2b2fba7.html"/>
      <url>/post/d2b2fba7.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>要学会可以创建属于自己的轮子！</p></blockquote><p>阿巛同学第一个上传到Pypi的包：<a href="https://pypi.org/project/pairwiseAlignment/">https://pypi.org/project/pairwiseAlignment/</a></p><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><ul><li><p>注册<a href="https://pypi.org/">pypi</a>，创建一个<code>$HOME/.pypirc</code>文件，里面填入token（在<a href="https://pypi.org/manage/account/">Account settings </a>获取）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[pypi]</span></span><br><span class="line">  <span class="attr">username</span> = __token__</span><br><span class="line">  <span class="attr">password</span> = pypi生成的token</span><br></pre></td></tr></table></figure></li><li><p>把之前的代码文件全部放入一个新的文件夹里，在外部生成下面这些文件</p><ul><li><p><a href="http://README.md">README.md</a></p></li><li><p><a href="http://setup.py">setup.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup,find_packages</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> PairwiseAlignment <span class="keyword">import</span> __version__</span><br><span class="line"></span><br><span class="line">here = path.abspath(path.dirname(__file__))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(path.join(here, <span class="string">&#x27;requirements.txt&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    all_reqs = f.read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    install_requires = [x.strip() <span class="keyword">for</span> x <span class="keyword">in</span> all_reqs <span class="keyword">if</span> <span class="string">&#x27;git+&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(path.join(here, <span class="string">&#x27;README.md&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    long_description = f.read()</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name=<span class="string">&#x27;pairwiseAlignment&#x27;</span>,  <span class="comment"># 必填，项目的名字，用户根据这个名字安装，pip install pairwiseAlignment</span></span><br><span class="line">    version=__version__, <span class="comment"># 必填，项目的版本，建议遵循语义化版本规范</span></span><br><span class="line">    author=<span class="string">&#x27;Achuan-2&#x27;</span>,  <span class="comment"># 项目的作者</span></span><br><span class="line">    description=<span class="string">&#x27;Using Python to implement Needleman Wunsch and Smith Waterman algorithms&#x27;</span>,  <span class="comment"># 项目的一个简短描述</span></span><br><span class="line">    long_description=long_description,  <span class="comment"># 项目的详细说明，通常读取 README.md 文件的内容</span></span><br><span class="line">    long_description_content_type=<span class="string">&#x27;text/markdown&#x27;</span>,  <span class="comment"># 描述的格式，可选的值： text/plain, text/x-rst, and text/markdown</span></span><br><span class="line">    author_email=<span class="string">&#x27;achuan-2@outlook.com&#x27;</span>,  <span class="comment"># 作者的有效邮箱地址</span></span><br><span class="line">    url=<span class="string">&#x27;https://github.com/Achuan-2/mini/tree/main/pairwiseAlignment&#x27;</span>,  <span class="comment"># 项目的源码地址</span></span><br><span class="line">    include_package_data=<span class="literal">True</span>,</span><br><span class="line">    py_modules=[<span class="string">&#x27;pairwiseAlignment&#x27;</span>],</span><br><span class="line">    platforms=<span class="string">&#x27;any&#x27;</span>, <span class="comment"># 项目的运行平台，可选的值：any, windows, linux, macos, unix, os2, ce, java, and riscos</span></span><br><span class="line">    packages=find_packages(), <span class="comment"># 项目的包列表，如果项目只有一个包，那么这个参数可以省略</span></span><br><span class="line">    python_requires=<span class="string">&#x27;&gt;=3.7&#x27;</span>,  <span class="comment"># 项目的 Python 版本要求</span></span><br><span class="line">    license=<span class="string">&#x27;MIT&#x27;</span>, <span class="comment"># 项目的许可证</span></span><br><span class="line">    install_requires=install_requires,</span><br><span class="line">    <span class="comment">#  下面的设置将在命令行提供一个叫做 pairwiseAlignment 的命令，用来执行 main.py 的 main 方法</span></span><br><span class="line">    entry_points=&#123;</span><br><span class="line">        <span class="string">&#x27;console_scripts&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;pairwiseAlignment= PairwiseAlignment.run:main&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>LICENSE.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Copyright (c) 2022 The Python Packaging Authority</span><br><span class="line"> </span><br><span class="line">Permission is hereby granted, free of charge, to any person obtaining a copy</span><br><span class="line">of this software and associated documentation files (the &quot;Software&quot;), to deal</span><br><span class="line">in the Software without restriction, including without limitation the rights</span><br><span class="line">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span><br><span class="line">copies of the Software, and to permit persons to whom the Software is</span><br><span class="line">furnished to do so, subject to the following conditions:</span><br><span class="line"> </span><br><span class="line">The above copyright notice and this permission notice shall be included in all</span><br><span class="line">copies or substantial portions of the Software.</span><br><span class="line"> </span><br><span class="line">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span><br><span class="line">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span><br><span class="line">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span><br><span class="line">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span><br><span class="line">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span><br><span class="line">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span><br><span class="line">SOFTWARE.</span><br></pre></td></tr></table></figure></li><li><p><a href="http://MANIFEST.in">MANIFEST.in</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include requirements.txt</span><br><span class="line">include README.md</span><br></pre></td></tr></table></figure></li><li><p>requirements.txt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipreqs ./ --encoding=utf8</span><br></pre></td></tr></table></figure></li></ul></li><li><p>之后目录架构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">|-- PairwiseAlignment/（要上传的代码方在一个文件夹）</span><br><span class="line">|   |-- __init__.py</span><br><span class="line">|   |-- __pycache__/</span><br><span class="line">|   |-- run.py</span><br><span class="line">|   `-- src/</span><br><span class="line">|-- CHANGELOG.md</span><br><span class="line">|-- LICENSE.txt</span><br><span class="line">|-- MANIFEST.in</span><br><span class="line">|-- README.md</span><br><span class="line">|-- requirements.txt</span><br><span class="line">`-- setup.py</span><br></pre></td></tr></table></figure><ul><li>由于现在代码变为包了，所以要注意包内的自定义模块导入方式，比如.代表同级，…代表上一级</li></ul></li><li><p>安装所需要的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install build</span><br><span class="line">pip install twine</span><br></pre></td></tr></table></figure></li></ul><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>直接安装测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>运行对于程序的命令，检测有无问题</p><h2 id="上传"><a class="markdownIt-Anchor" href="#上传"></a> 上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -m build <span class="comment"># 打包</span></span><br><span class="line">twine upload dist/* <span class="comment"># 上传包到pypi</span></span><br><span class="line"><span class="built_in">rm</span> -r dist build *.egg-info <span class="comment"># 删除临时文件</span></span><br></pre></td></tr></table></figure><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RNAseq 分析：Tophat2+cufflinks+cuffdiff+差异基因分析</title>
      <link href="/post/6e57daa8.html"/>
      <url>/post/6e57daa8.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/pipeline-20221023131537-gg5rnwh.svg" alt="本次分析的整体流程"></div><div class="image-meta"><span class="image-caption center">本次分析的整体流程</span></div></div><h2 id="一-数据来源"><a class="markdownIt-Anchor" href="#一-数据来源"></a> 一、数据来源</h2><h3 id="数据简介"><a class="markdownIt-Anchor" href="#数据简介"></a> 数据简介</h3><p>本次分析的数据来源于在 2020 年五月发表在 Nucleic Acids Res 的《Nono deficiency compromises TET1 chromatin association and impedes neuronal differentiation of mouse embryonic stem cells》（doi: <a href="https://doi.org/10.1093/nar/gkaa213">10.1093/nar/gkaa213</a>）。该文由复旦大学生物医学研究所表观遗传学实验室，哈佛大学医学院附属布莱根妇女医院内分泌系、哈佛大学医学院附属波士顿儿童医院新生医学与表观遗传学研究室共同发表，第一作者为 Wenjing Li 和 Violetta Karwacki-Neisius，石雨江教授和吴飞珍副研究员为共同通讯作者。该文涉及的代码见 <a href="https://github.com/FeizhenWu/Nono">FeizhenWu/Nono</a>。</p><p>NONO 是一种 DNA/RNA 结合蛋白，该文揭示了 <strong>NONO在小鼠胚胎干细胞(mESCs)的神经元分化过程中起着关键作用，Nono缺失会影响到TET1与染色质结合并阻碍小鼠胚胎干细胞的神经分化</strong>：Nono 基因缺失将使得神经元分化的关键特定基因上调失败，从而阻碍了神经元谱系的定型；许多 NONO 调控的基因也是 DNA 去甲基化酶 TET1 的靶向基因；将野生型 NONO 蛋白重新引入 NONO KO 细胞，不仅使得大部分 NONO/TET1 共调控基因的恢复正常表达，还可以挽救 NONO 缺陷的 mESCs 的神经分化缺陷；作者还发现 NONO 能通过其 DNA 结合域直接与 TET1 相互作用，并将 TET1 招募到基因位点以调节 5-羟甲基胞嘧啶水平。NONO 的缺失会导致 TET1 与染色质显著分离，使得神经元基因的 DNA 羟甲基化失调。</p><p>该文涉及的 RNA-seq 测序数据在 NCBI SRA 数据库编号为 <a href="https://www.ncbi.nlm.nih.gov/bioproject/PRJNA527295">PRJNA527295</a>。测序的细胞为小鼠胚胎干细胞（E14TG2a），分别对三类 mESCs 细胞进行测序（WT，Nono KO，Nono KO+WT），使用 Illumina HiSeq 2500 测序仪进行转录组 RNA 测序。</p><p>本次实验选取了四个 Run（测序数据），分别为 SRR8734708（set1_WT_D0）、SRR8734712（set1_NonoKO_D0）、SRR8734718（Set2_WT_D0）和 SRR8734722（Set2_NonoKO_D0）。</p><table><thead><tr><th>RUN</th><th>GROUP</th></tr></thead><tbody><tr><td>SRR8734708</td><td>set1_WT_D0</td></tr><tr><td>SRR8734712</td><td>set1_NonoKO_D0</td></tr><tr><td>SRR8734718</td><td>Set2_WT_D0</td></tr><tr><td>SRR8734722</td><td>Set2_NonoKO_D0</td></tr></tbody></table><h3 id="数据下载"><a class="markdownIt-Anchor" href="#数据下载"></a> 数据下载</h3><p>在服务器上创建项目文件夹 <code>mkdir ~/workplace/homework1</code></p><p>通过在 NCBI 的 SRA 数据库输入 SRR id，打开 <a href="https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP188551&amp;o=acc_s%3Aa&amp;s=SRR8734722,SRR8734718,SRR8734708,SRR8734712">Run Selector</a>，选择 4 个 Run 后勾选 Selected，下载 Metadata 和 Accession List，上传到服务器项目文件夹中。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220923111615-szjl96s.png"></div></div><p><code>SRR_Acc_List.txt</code> 文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SRR8734722</span><br><span class="line">SRR8734718</span><br><span class="line">SRR8734708</span><br><span class="line">SRR8734712</span><br></pre></td></tr></table></figure><p>服务器项目文件夹创建 <code>group.csv</code>，记录 SRR ID 和分组信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SRR8734708,set1_WT_D0</span><br><span class="line">SRR8734712,set1_NonoKO_D0</span><br><span class="line">SRR8734718,set2_WT_D0</span><br><span class="line">SRR8734722,set2_NonoKO_D0</span><br></pre></td></tr></table></figure><p>然后在服务器上使用 sratoolkit 软件的 fastq-dump 命令进行下载测序数据。fastq-dump 可以下载 fastq 格式的文件，也可以将下载好的 sra 格式文件转换为 fastq 格式。</p><ol><li><p>配置 sratoolkit（v2.11.0）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vdb-config --interactive</span><br><span class="line"><span class="comment"># 然后按s，o，e，完成配置</span></span><br></pre></td></tr></table></figure></li><li><p>编写 slurm 作业脚本：<code>vim ~/scripts/fastq-dump.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -J fastq-dump</span></span><br><span class="line"><span class="comment">#SBATCH -p dna</span></span><br><span class="line"><span class="comment">#SBATCH -N 1</span></span><br><span class="line"><span class="comment">#SBATCH --mem=10G</span></span><br><span class="line"><span class="comment">#SBATCH --cpus-per-task=2</span></span><br><span class="line"><span class="comment">#SBATCH -o slurm.%j.%x.out        # STDOUT</span></span><br><span class="line"><span class="comment">#SBATCH -e slurm.%j.%x.err        # STDERR</span></span><br><span class="line"><span class="comment">#SBATCH --mail-type=END</span></span><br><span class="line"><span class="comment">#SBATCH --mail-user=jxsu22@m.fudan.edu.cn</span></span><br><span class="line"></span><br><span class="line">fastq-dump --split-3 --gzip <span class="variable">$1</span> --outdir <span class="variable">$2</span></span><br></pre></td></tr></table></figure></li><li><p>运行 shell 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span></span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$PROJECT</span>/SRR_Acc_List.txt| <span class="keyword">while</span> <span class="built_in">read</span> <span class="built_in">id</span>;<span class="keyword">do</span></span><br><span class="line">    sbatch ~/scripts/fastq-dump.sh <span class="variable">$&#123;id&#125;</span> <span class="variable">$PROJECT</span>/01_rawdata/ </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>下载完成</p></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220923232239-tkxtdyv.png" alt="cat $PROJECT/log/slurm.*.fastq-dump*.out"></div><div class="image-meta"><span class="image-caption center">cat $PROJECT/log/slurm.*.fastq-dump*.out</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220926232618-otpzdnj.png" alt="ll -h $PROJECT/01_rawdata/"></div><div class="image-meta"><span class="image-caption center">ll -h $PROJECT/01_rawdata/</span></div></div><h2 id="二-分析过程"><a class="markdownIt-Anchor" href="#二-分析过程"></a> 二、分析过程</h2><h3 id="1-trim_galore-去除低质量的-reads-和-adaptor"><a class="markdownIt-Anchor" href="#1-trim_galore-去除低质量的-reads-和-adaptor"></a> 1、trim_galore 去除低质量的 reads 和 adaptor</h3><p><a href="https://github.com/FelixKrueger/TrimGalore">Trim Galore</a> 使用 Perl 语言对 <a href="https://www.bioinformatics.babraham.ac.uk/projects/fastqc/">FastQC</a> 和 <a href="https://github.com/marcelm/cutadapt">Cutadapt</a> 进行了封装。可以用于过滤低质量碱基和去除序列 3’ 末端的 adapter。可适用于所有高通量测序，包括 RRBS(Reduced Representation Bisulfite-Seq ),、Illumina、Nextera 和 smallRNA 测序平台的双端和单端数据。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">trim_galore --version</span></span><br><span class="line"></span><br><span class="line">                        Quality-/Adapter-/RRBS-/Speciality-Trimming</span><br><span class="line">                                [powered by Cutadapt]</span><br><span class="line">                                  version 0.6.7</span><br><span class="line"></span><br><span class="line">                               Last update: 11 05 2020</span><br></pre></td></tr></table></figure><p>参数</p><ul><li><code>--fastqc</code>：Run FastQC in the default mode on the FastQ file once trimming is complete.</li><li><code>--illumina</code>：Adapter sequence to be trimmed is the first 13bp of the Illumina universal adapter AGATCGGAAGAGC instead of the default auto-detection of adapter sequence.</li><li><code>-o/--output_dir &lt;DIR&gt;</code>：If specified all output will be written to this directory instead of the current directory. If the directory doesn’t exist it will be created for you.</li><li><code>--gzip</code>：Compress the output file with <code>gzip</code>. If the input files are gzip-compressed the output files will be automatically gzip compressed as well.</li></ul><p>实操过程</p><ol><li><p>编写 trim_galore 的 slurm 作业脚本：<code>vim ~/scripts/trim_galore.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -J trim_galore</span></span><br><span class="line"><span class="comment">#SBATCH -p dna</span></span><br><span class="line"><span class="comment">#SBATCH -N 1</span></span><br><span class="line"><span class="comment">#SBATCH --mem=20G</span></span><br><span class="line"><span class="comment">#SBATCH --cpus-per-task=4</span></span><br><span class="line"><span class="comment">#SBATCH -o slurm.%j.%x.out        # STDOUT</span></span><br><span class="line"><span class="comment">#SBATCH -e slurm.%j.%x.err        # STDERR</span></span><br><span class="line"><span class="comment">#SBATCH --mail-type=END  # 发送哪一种email通知：BEGIN,END,FAIL,ALL</span></span><br><span class="line"><span class="comment">#SBATCH --mail-user=jxsu22@m.fudan.edu.cn</span></span><br><span class="line"></span><br><span class="line">mode=<span class="variable">$1</span></span><br><span class="line">SRR=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$mode</span>&quot;</span> == <span class="string">&quot;single&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果是单端</span></span><br><span class="line">    trim_galore --illumina --fastqc  <span class="variable">$SRR</span>.fastq.gz</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$mode</span>&quot;</span> == <span class="string">&quot;paired&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果是多端</span></span><br><span class="line">    trim_galore --illumina --fastqc --paired <span class="variable">$&#123;SRR&#125;</span>_1.fastq.gz <span class="variable">$&#123;SRR&#125;</span>_2.fastq.gz</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>运行 shell 脚本，将 trim_galore 作业脚本提交到 slurm 系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line">mode=paired</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span>/01_rawdata/</span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$PROJECT</span>/SRR_Acc_List.txt| <span class="keyword">while</span> <span class="built_in">read</span> SRR;<span class="keyword">do</span> </span><br><span class="line">    sbatch ~/scripts/trim_galore.sh <span class="variable">$mode</span> <span class="variable">$SRR</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>运行结束：在项目 <code>$PROJECT/01_rawdata/</code> 文件夹下，新生成了双端测序的过滤文件，以 SRR8734708 测序文件为例：</p><p><code>SRR8734708_1.fastq.gz-&gt; SRR8734708_1_val_1.fq.gz</code></p><p><code>SRR8734708_2.fastq.gz-&gt;SRR8734708_2_val_2.fq.gz</code></p></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220927195628-y81zt42.png" alt="ll -lh $PROJECT/01_rawdata/"></div><div class="image-meta"><span class="image-caption center">ll -lh $PROJECT/01_rawdata/</span></div></div><blockquote><p>如果是单端测序模式，trim_galore 则会默认生成带 trimed.fq.gz 的数据文件</p></blockquote><h3 id="2-使用-tophat2-比对和-cufflinks-计算基因表达"><a class="markdownIt-Anchor" href="#2-使用-tophat2-比对和-cufflinks-计算基因表达"></a> 2、使用 Tophat2 比对和 Cufflinks 计算基因表达</h3><p><a href="https://ccb.jhu.edu/software/tophat/index.shtml">Tophat2</a> 是一个比对工具，本身实际不能比对，而是通过调用 bowtie/bowtie2 进行比对。Tophat 最初只能调用 bowtie，2012 年 4 月 9 日 Tophat 发布了 2.0.0 版本，宣布支持 bowtie2 的比对，将其称之为 Tophat2。进行比对时，需要输入<u>基因组的索引</u>，而不是直接输入基因组序列，这是为了比对更加快速、减小计算内存，帮助比对软件更快速的找到目标区域。</p><p><a href="http://cole-trapnell-lab.github.io/cufflinks/">Cufflinks</a> 是一个主要用于基因表达量的计算和差异表达基因分析的软件包。其下主要包含 cufflinks，cuffmerge，cuffcompare 和 cuffdiff 等几支主要的程序。</p><ul><li>cufflinks 可以通过 tophat2 生成的 accepted_hits.bam 文件计算基因的 FPKM 值、输出基因组注释 gtf 文件。</li><li>cuffdiff 则可以通过 tophat2 生成的 accepted_hits.bam 文件和基因组注释 gtf 文件计算差异表达基因。</li></ul><p>实操过程</p><ol><li><p>先准备参考基因组</p><ol><li><p>参考基因组地址</p><ul><li>基因索引文件文件：<code>/home/public/share/Genomes/mm10_Bowtie2Index</code></li><li>基因注释文件地址：<code>/home/public/share/Genomes/mm10_genes.gtf</code></li></ul></li><li><p>将参考基因组软连接到项目文件夹下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$PROJECT</span>/00_index</span><br><span class="line"><span class="comment"># 参考基因组</span></span><br><span class="line"><span class="built_in">ln</span> -s /home/public/share/Genomes/mm10_Bowtie2Index <span class="variable">$PROJECT</span>/00_index</span><br><span class="line"><span class="comment"># 基因注释</span></span><br><span class="line"><span class="built_in">ln</span> -s /home/public/share/Genomes/mm10_genes.gtf <span class="variable">$PROJECT</span>/00_index</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li><li><p>编写运行 tophat2 和 cufflinks 的脚本：<code>vim tophat2_cufflinks.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -J tophat2_cufflinks</span></span><br><span class="line"><span class="comment">#SBATCH -p dna</span></span><br><span class="line"><span class="comment">#SBATCH -N 4</span></span><br><span class="line"><span class="comment">#SBATCH --mem=20G</span></span><br><span class="line"><span class="comment">#SBATCH --cpus-per-task=4</span></span><br><span class="line"><span class="comment">#SBATCH -o slurm.%j.%x.out        # STDOUT</span></span><br><span class="line"><span class="comment">#SBATCH -e slurm.%j.%x.err        # STDERR</span></span><br><span class="line"><span class="comment">#SBATCH --mail-type=END  # 发送哪一种email通知：BEGIN,END,FAIL,ALL</span></span><br><span class="line"><span class="comment">#SBATCH --mail-user=jxsu22@m.fudan.edu.cn</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Usage:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   tophat2_cufflinks.sh &#123;mode&#125; &#123;threads&#125; &#123;transcriptome-index&#125; &#123;bowtie2-index&#125; &#123;SRR&#125; &#123;fq1&#125; [&#123;fq2&#125;] &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INDEX=<span class="variable">$PWD</span>/00_index</span><br><span class="line">DATA=<span class="variable">$PWD</span>/01_rawdata</span><br><span class="line">RESULT=<span class="variable">$PWD</span>/02_result</span><br><span class="line"></span><br><span class="line">mode=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$mode</span> <span class="comment"># 检测字符是否为空</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input the mode(single or paired)&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">threads=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$threads</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input the number of threads&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">Annotation=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$Annotation</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input transcriptome-index(/share/Genomes/Homo_sapiens/UCSC/hg19/Annotation/Genes/hg19_genes/genes.gff)&quot;</span> </span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">bowtie2Index=<span class="variable">$4</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$bowtie2Index</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input bowtie2-index(/share/Genomes/Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/genome)&quot;</span> </span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">SRR=<span class="variable">$5</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$SRR</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input SRR id&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">fq1=<span class="variable">$6</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$fq1</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;please input fasta1&quot;</span></span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$mode</span>&quot;</span> == <span class="string">&quot;paired&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">   fq2=<span class="variable">$7</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$fq2</span></span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;please input fasta1&quot;</span></span><br><span class="line">      <span class="built_in">exit</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#====================================================</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Running info&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Project:    &quot;</span><span class="variable">$PWD</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Read:       &quot;</span><span class="variable">$SRR</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Annotation: &quot;</span><span class="variable">$Annotation</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Genome:     &quot;</span><span class="variable">$bowtie2Index</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################RUN##############################</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;RESULT&#125;</span>/tophat2/<span class="variable">$&#123;SRR&#125;</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;RESULT&#125;</span>/cufflinks/<span class="variable">$&#123;SRR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$mode</span>&quot;</span> == <span class="string">&quot;single&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果是单端</span></span><br><span class="line">    tophat2 -p <span class="variable">$&#123;threads&#125;</span> -o <span class="variable">$&#123;RESULT&#125;</span>/tophat2/<span class="variable">$&#123;SRR&#125;</span> <span class="variable">$&#123;INDEX&#125;</span>/<span class="variable">$&#123;bowtie2Index&#125;</span> <span class="variable">$&#123;DATA&#125;</span>/<span class="variable">$&#123;fq1&#125;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$mode</span>&quot;</span> == <span class="string">&quot;paired&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果是多端</span></span><br><span class="line">    tophat2 -p <span class="variable">$&#123;threads&#125;</span> -o <span class="variable">$&#123;RESULT&#125;</span>/tophat2/<span class="variable">$&#123;SRR&#125;</span> <span class="variable">$&#123;INDEX&#125;</span>/<span class="variable">$&#123;bowtie2Index&#125;</span> <span class="variable">$&#123;DATA&#125;</span>/<span class="variable">$&#123;fq1&#125;</span> <span class="variable">$&#123;DATA&#125;</span>/<span class="variable">$&#123;fq2&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cufflinks -p <span class="variable">$&#123;threads&#125;</span> -o <span class="variable">$&#123;RESULT&#125;</span>/cufflinks/<span class="variable">$&#123;SRR&#125;</span> -G <span class="variable">$&#123;INDEX&#125;</span>/<span class="variable">$Annotation</span> <span class="variable">$&#123;RESULT&#125;</span>/tophat2/<span class="variable">$&#123;SRR&#125;</span>/accepted_hits.bam</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; Running <span class="variable">$&#123;SRR&#125;</span> is compeleted.&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure></li><li><p>运行 shell 脚本，将该作业脚本提交到 slurm 系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line">mode=paired</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span></span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$PROJECT</span>/SRR_Acc_List.txt | <span class="keyword">while</span> <span class="built_in">read</span> SRR;<span class="keyword">do</span></span><br><span class="line">    sbatch ~/scripts/Tophat_Cufflinks.sh \</span><br><span class="line">        <span class="variable">$mode</span> \</span><br><span class="line">        4 \</span><br><span class="line">        mm10_genes.gtf \</span><br><span class="line">        mm10_Bowtie2Index/genome \</span><br><span class="line">        <span class="variable">$&#123;SRR&#125;</span> \</span><br><span class="line">        <span class="variable">$&#123;SRR&#125;</span>_1_val_1.fq.gz \</span><br><span class="line">        <span class="variable">$&#123;SRR&#125;</span>_2_val_2.fq.gz </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>运行结束：在项目 $PROJECT/02_result/文件夹下，tophat2 和 cufflinks 文件夹分别存放两个软件运行的结果。</p><ol><li>tophat2 的运行结果</li></ol></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220928193453-vtzwja0.png" alt="tree -L 2 ${Project}/02_result/tophat2"></div><div class="image-meta"><span class="image-caption center">tree -L 2 ${Project}/02_result/tophat2</span></div></div><pre><code>  其中最有用的是 accepted_hits.bam，记录了 reads 比对到参考基因组的数据</code></pre><ol start="2"><li>cufflinks 的运行结果：</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220928192709-10579bp.png"></div></div><pre><code>  其中常用的是 `genes.fpkm_tracking` 和 `transcripts.gtf` 文件  * `genes.fpkm_tracking`：isoforms (可以理解为 gene 的各个外显子)的 fpkm 计算结果；  * `transcripts.gtf`：转录组的 gtf，该文件包含 Cufflinks 的组装结果 isoforms；</code></pre><h3 id="3-fpkm-转化为-tpm"><a class="markdownIt-Anchor" href="#3-fpkm-转化为-tpm"></a> 3、FPKM 转化为 TPM</h3><p>在 RNA-Seq 的分析中，需要对基因或转录本的 read counts 数目进行标准化（normalization）。因为落在一个基因区域内的 read counts 数目取决于基因长度和测序深度，一个基因越长，测序深度越高，落在其内部的 read counts 数目就会相对越多。在进行基因差异表达的分析时，往往是在多个样本中比较不同基因的表达量，如果不进行数据标准化，比较结果是没有意义的。read counts 数目标准化的两个关键因素就是基因长度和测序深度，常常用 RPKM (Reads Per Kilobase Million), FPKM (Fragments Per Kilobase Million) 和 TPM (Transcripts Per Million)作为标准化数值。</p><p>RPKM 和 FPKM 的定义是相同的，唯一的区別是 FPKM 用于双端测序文库，而 RPKM 用于单端测序文库。</p><p>FPKM 和 TPM 都能够矫正掉<u>基因长度</u>及<u>测序深度</u>对 gene 表达定量的影响，区别在于</p><ul><li>FPKM 先计算比对到每个基因的 read 数占 reads 总数的比例，再考虑基因的长度；</li><li>而 TPM 是先考虑基因的长度，再把 read counts 转化为占处理之后的总数的比例。</li></ul><p>之所以要将 FPKM 转化为 TPM，是因为 TPM 可以使得每个样本的表达量<strong>总和都是1 Million</strong>，使得 TPM 中的基因表达量可以直接进行样本间的比较。</p><p>编写 FPKM2TPM.R 脚本，改进自 <code>/home/public/software/wfz_scripts/FPKM2TPM.R</code>，主要改进点是把输出文件的 xls 格式改成了 tsv 文件格式。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/home/u22211520038/.conda/envs/achuan/bin/Rscript</span></span><br><span class="line"><span class="comment"># ====================================================================</span></span><br><span class="line">suppressPackageStartupMessages<span class="punctuation">(</span>library<span class="punctuation">(</span><span class="string">&quot;optparse&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># ====================================================================</span></span><br><span class="line">option_list <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span></span><br><span class="line">  make_option<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;-f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;--files&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    type <span class="operator">=</span> <span class="string">&quot;character&quot;</span><span class="punctuation">,</span> default <span class="operator">=</span> <span class="string">&quot;genes.fpkm_tracking&quot;</span><span class="punctuation">,</span></span><br><span class="line">    help <span class="operator">=</span> <span class="string">&quot;To specify fpkm files generated by cufflinks with comma-separate [default %default]&quot;</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  make_option<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;-l&quot;</span><span class="punctuation">,</span> <span class="string">&quot;--labels&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    type <span class="operator">=</span> <span class="string">&quot;character&quot;</span><span class="punctuation">,</span> default <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    help <span class="operator">=</span> <span class="string">&quot;To specify labels [default %default]&quot;</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  make_option<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;-o&quot;</span><span class="punctuation">,</span> <span class="string">&quot;--output&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    type <span class="operator">=</span> <span class="string">&quot;character&quot;</span><span class="punctuation">,</span> default <span class="operator">=</span> <span class="string">&quot;Expression&quot;</span><span class="punctuation">,</span></span><br><span class="line">    help <span class="operator">=</span> <span class="string">&quot;To specify output file [default %default]&quot;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">parser <span class="operator">&lt;-</span> OptionParser<span class="punctuation">(</span></span><br><span class="line">  usage <span class="operator">=</span> <span class="string">&quot;%prog [options]&quot;</span><span class="punctuation">,</span> option_list <span class="operator">=</span> option_list<span class="punctuation">,</span></span><br><span class="line">  description <span class="operator">=</span> <span class="string">&quot;\nThe script is to convert FPKMs into TPMs.&quot;</span><span class="punctuation">,</span></span><br><span class="line">  epilogue <span class="operator">=</span> <span class="string">&quot;Feizhen Wu(wufz@fudan.edu.cn), July 09, 2018.\n&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">arguments <span class="operator">&lt;-</span> parse_args<span class="punctuation">(</span>parser<span class="punctuation">,</span> positional_arguments <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> print_help_and_exit <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">opt <span class="operator">&lt;-</span> arguments<span class="operator">$</span>options</span><br><span class="line">files <span class="operator">&lt;-</span> strsplit<span class="punctuation">(</span>opt<span class="operator">$</span>files<span class="punctuation">,</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">labels <span class="operator">&lt;-</span> strsplit<span class="punctuation">(</span>opt<span class="operator">$</span>labels<span class="punctuation">,</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">output <span class="operator">&lt;-</span> opt<span class="operator">$</span>output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>data.table<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>pheatmap<span class="punctuation">)</span></span><br><span class="line">FPKM2TPM <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>myfile<span class="punctuation">,</span> myName <span class="operator">=</span> myfile<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>myName <span class="operator">==</span> myfile<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    myName <span class="operator">&lt;-</span> sub<span class="punctuation">(</span>pattern <span class="operator">=</span> <span class="string">&quot;(.*)\\..*$&quot;</span><span class="punctuation">,</span> replacement <span class="operator">=</span> <span class="string">&quot;\\1&quot;</span><span class="punctuation">,</span> basename<span class="punctuation">(</span>myfile<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  cat<span class="punctuation">(</span><span class="string">&quot;The label of&quot;</span><span class="punctuation">,</span> myfile<span class="punctuation">,</span> <span class="string">&quot; was assigned as &quot;</span><span class="punctuation">,</span> myName<span class="punctuation">,</span> <span class="string">&quot;!\n&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>file.access<span class="punctuation">(</span>myfile<span class="punctuation">)</span> <span class="operator">==</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    stop<span class="punctuation">(</span>sprintf<span class="punctuation">(</span><span class="string">&quot;Specified file ( %s ) does not exist&quot;</span><span class="punctuation">,</span> myfile<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  Exp <span class="operator">&lt;-</span> fread<span class="punctuation">(</span>myfile<span class="punctuation">,</span> header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;gene_id&quot;</span><span class="punctuation">,</span> <span class="string">&quot;FPKM&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  Exp <span class="operator">&lt;-</span> Exp<span class="punctuation">[</span><span class="operator">!</span>grep<span class="punctuation">(</span><span class="string">&quot;^Mir&quot;</span><span class="punctuation">,</span> Exp<span class="operator">$</span>gene_id<span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  Exp <span class="operator">&lt;-</span> Exp<span class="punctuation">[</span><span class="operator">!</span>grep<span class="punctuation">(</span><span class="string">&quot;^MIR&quot;</span><span class="punctuation">,</span> Exp<span class="operator">$</span>gene_id<span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  Exp <span class="operator">&lt;-</span> Exp<span class="punctuation">[</span><span class="operator">!</span>duplicated<span class="punctuation">(</span>Exp<span class="operator">$</span>gene_id<span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  ss <span class="operator">&lt;-</span> <span class="built_in">sum</span><span class="punctuation">(</span>Exp<span class="operator">$</span>FPKM<span class="punctuation">)</span></span><br><span class="line">  Exp<span class="operator">$</span>Tpm <span class="operator">&lt;-</span> Exp<span class="operator">$</span>FPKM <span class="operator">/</span> ss <span class="operator">*</span> <span class="number">10</span><span class="operator">^</span><span class="number">6</span></span><br><span class="line">  Tpm <span class="operator">&lt;-</span> Exp<span class="punctuation">[</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  Fpkm <span class="operator">&lt;-</span> Exp<span class="punctuation">[</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  <span class="built_in">names</span><span class="punctuation">(</span>Tpm<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;gene_id&quot;</span><span class="punctuation">,</span> myName<span class="punctuation">)</span></span><br><span class="line">  <span class="built_in">names</span><span class="punctuation">(</span>Fpkm<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;gene_id&quot;</span><span class="punctuation">,</span> myName<span class="punctuation">)</span></span><br><span class="line">  Result <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  Result<span class="operator">$</span>Tpm <span class="operator">&lt;-</span> Tpm</span><br><span class="line">  Result<span class="operator">$</span>Fpkm <span class="operator">&lt;-</span> Fpkm</span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>Result<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ===================================</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="built_in">length</span><span class="punctuation">(</span>labels<span class="punctuation">)</span> <span class="operator">&gt;</span> <span class="number">0</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  Exp1 <span class="operator">&lt;-</span> FPKM2TPM<span class="punctuation">(</span>files<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> labels<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">  Exp1 <span class="operator">&lt;-</span> FPKM2TPM<span class="punctuation">(</span>files<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">Exp_Tpm <span class="operator">&lt;-</span> Exp1<span class="operator">$</span>Tpm</span><br><span class="line">Exp_Fpkm <span class="operator">&lt;-</span> Exp1<span class="operator">$</span>Fpkm</span><br><span class="line">i <span class="operator">&lt;-</span> 2</span><br><span class="line"><span class="keyword">while</span> <span class="punctuation">(</span>i <span class="operator">&lt;=</span> <span class="built_in">length</span><span class="punctuation">(</span>files<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>i <span class="operator">&lt;=</span> <span class="built_in">length</span><span class="punctuation">(</span>labels<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    Exp1 <span class="operator">&lt;-</span> FPKM2TPM<span class="punctuation">(</span>files<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">,</span> labels<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    Exp1 <span class="operator">&lt;-</span> FPKM2TPM<span class="punctuation">(</span>files<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  Exp_Fpkm <span class="operator">&lt;-</span> merge<span class="punctuation">(</span>Exp_Fpkm<span class="punctuation">,</span> Exp1<span class="operator">$</span>Fpkm<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;gene_id&quot;</span><span class="punctuation">)</span></span><br><span class="line">  Exp_Tpm <span class="operator">&lt;-</span> merge<span class="punctuation">(</span>Exp_Tpm<span class="punctuation">,</span> Exp1<span class="operator">$</span>Tpm<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;gene_id&quot;</span><span class="punctuation">)</span></span><br><span class="line">  i <span class="operator">&lt;-</span> i <span class="operator">+</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">fwrite<span class="punctuation">(</span>Exp_Tpm<span class="punctuation">,</span> file <span class="operator">=</span> paste<span class="punctuation">(</span>output<span class="punctuation">,</span> <span class="string">&quot;_TPM.tsv&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">fwrite<span class="punctuation">(</span>Exp_Fpkm<span class="punctuation">,</span> file <span class="operator">=</span> paste<span class="punctuation">(</span>output<span class="punctuation">,</span> <span class="string">&quot;_FPKM&quot;</span><span class="punctuation">,</span> <span class="string">&quot;.tsv&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">Exp <span class="operator">&lt;-</span> Exp_Tpm<span class="punctuation">[</span><span class="punctuation">,</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">p <span class="operator">&lt;-</span> cor<span class="punctuation">(</span>Exp<span class="punctuation">)</span></span><br><span class="line">pdf<span class="punctuation">(</span>file <span class="operator">=</span> paste<span class="punctuation">(</span>output<span class="punctuation">,</span> <span class="string">&quot;_TPM_correlation.pdf&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> height <span class="operator">=</span> <span class="number">360</span> <span class="operator">/</span> <span class="number">100</span><span class="punctuation">,</span> width <span class="operator">=</span> <span class="number">437</span> <span class="operator">/</span> <span class="number">100</span><span class="punctuation">,</span> onefile <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">pheatmap<span class="punctuation">(</span>p<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>p<span class="punctuation">,</span> file <span class="operator">=</span> paste<span class="punctuation">(</span>output<span class="punctuation">,</span> <span class="string">&quot;_TPM_correlation.tsv&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>接下来编写 shell 脚本以批量传入参数运行，将 cufflinks 计算得到的各样本 FPKM 转化为 TPM。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PROJECT</span>/02_result/fpkm</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PROJECT</span>/02_result/FPKM2TPM</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span>/02_result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软链接，并以分组命名</span></span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$PROJECT</span>/group.csv | <span class="keyword">while</span> IFS=<span class="string">&quot;,&quot;</span> <span class="built_in">read</span> -r SRR group;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">ln</span> -s <span class="variable">$PROJECT</span>/02_result/cufflinks/<span class="variable">$&#123;SRR&#125;</span>/genes.fpkm_tracking <span class="variable">$PROJECT</span>/02_result/fpkm/<span class="variable">$&#123;group&#125;</span>.fpkm</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得fkpm的列表</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span>/02_result/fpkm</span><br><span class="line">delim=<span class="string">&quot;&quot;</span></span><br><span class="line">fpkm_list=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> `<span class="built_in">ls</span> *.fpkm`; <span class="keyword">do</span></span><br><span class="line">  temp=<span class="string">&quot;<span class="variable">$&#123;delim&#125;</span><span class="variable">$&#123;item##*/&#125;</span>&quot;</span></span><br><span class="line">  fpkm_list=<span class="string">&quot;<span class="variable">$&#123;fpkm_list&#125;</span><span class="variable">$&#123;temp&#125;</span>&quot;</span></span><br><span class="line">  delim=<span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过Rscript进行FPKM转化TPM的转化</span></span><br><span class="line">~/scripts/FPKM2TPM.R  -f <span class="variable">$fpkm_list</span> -o <span class="variable">$PROJECT</span>/02_result/FPKM2TPM/Expression</span><br></pre></td></tr></table></figure><p>FPKM2TPM.R 还会调用 pheatmap 包根据各样本的 TPM 表达量来绘制热图</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220924223301-uunvmdm.png"></div></div><p>‍</p><h3 id="4-用-cuffdiff-计算基因差异表达"><a class="markdownIt-Anchor" href="#4-用-cuffdiff-计算基因差异表达"></a> 4、用 cuffdiff 计算基因差异表达</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cuffdiff -h</span></span><br><span class="line">Usage:   cuffdiff [options] &lt;transcripts.gtf&gt; &lt;sample1_hits.sam&gt; &lt;sample2_hits.sam&gt; [... sampleN_hits.sam]</span><br><span class="line">   Supply replicate SAMs as comma separated lists for each condition: sample1_rep1.sam,sample1_rep2.sam,...sample1_repM.sam</span><br></pre></td></tr></table></figure><p>了解 cuffdiff 的输入参数，需要输入 transcripts.gtf 和 sample_hits.bam 文件(或 sam 格式的文件）。</p><p>使用 cuffdiff 时需要注意</p><ul><li>样本重复和多样本分别以逗号和空格分隔：当一个样本有多个 replicate 时，使用逗号隔开。对于多个 sample，用空格隔开，以计算 samples 间的基因表达的差异性。</li><li>log2(fold_change)的值是 log2(sample2/sample1)，在统计上下调关系时需要注意输入的 sample 顺序，一般是 WT sample 在前，实验组 sample 在后。</li></ul><p>这一步将使用 cuffdiff 根据 Tophat2 生成的各样本比对文件 accepted_hits.bam 以及小鼠的基因组注释文件寻找差异基因。</p><ol><li><p>先编写 cuffdiff 的作业脚本：<code>vim ~/scripts/cuffdiff.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -J cuffdiff</span></span><br><span class="line"><span class="comment">#SBATCH -p dna</span></span><br><span class="line"><span class="comment">#SBATCH -N 1</span></span><br><span class="line"><span class="comment">#SBATCH --mem=8G</span></span><br><span class="line"><span class="comment">#SBATCH --cpus-per-task=2</span></span><br><span class="line"><span class="comment">#SBATCH -o slurm.%j.%x.out   # STDOUT</span></span><br><span class="line"><span class="comment">#SBATCH -e slurm.%j.%x.err   # STDERR</span></span><br><span class="line"><span class="comment">#SBATCH --mail-type=END  # 发送哪一种email通知：BEGIN,END,FAIL,ALL</span></span><br><span class="line"><span class="comment">#SBATCH --mail-user=jxsu22@m.fudan.edu.cn</span></span><br><span class="line"></span><br><span class="line">outdir=<span class="variable">$1</span></span><br><span class="line">gtf=<span class="variable">$2</span></span><br><span class="line">bam_dir=<span class="variable">$3</span></span><br><span class="line">label1=<span class="variable">$4</span></span><br><span class="line">label2=<span class="variable">$5</span></span><br><span class="line"></span><br><span class="line">sample1=$(<span class="built_in">ls</span> <span class="variable">$bam_dir</span>/*<span class="variable">$label1</span>* | xargs | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">sample2=$(<span class="built_in">ls</span> <span class="variable">$bam_dir</span>/*<span class="variable">$label2</span>* | xargs | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">cuffdiff -p 2 -o <span class="variable">$outdir</span> \</span><br><span class="line">    -L <span class="variable">$label1</span>,<span class="variable">$label2</span> \</span><br><span class="line">    <span class="variable">$gtf</span> \</span><br><span class="line">    <span class="variable">$sample1</span> \ <span class="comment"># Separate different samples with space</span></span><br><span class="line">    <span class="variable">$sample2</span></span><br></pre></td></tr></table></figure></li><li><p>然后运行 shell 脚本，提交该任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PROJECT=/home/u22211520038/workplace/homework1</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PROJECT</span>/02_result/bam</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PROJECT</span>/02_result/cuffdiff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软链接，并以分组命名</span></span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$PROJECT</span>/group.csv | <span class="keyword">while</span> IFS=<span class="string">&quot;,&quot;</span> <span class="built_in">read</span> -r SRR group;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">ln</span> -s <span class="variable">$PROJECT</span>/02_result/tophat2/<span class="variable">$&#123;SRR&#125;</span>/accepted_hits.bam <span class="variable">$PROJECT</span>/02_result/bam/<span class="variable">$&#123;group&#125;</span>.bam</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PROJECT</span>/02_result/cuffdiff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行cuffdiff，进行差异基因分析</span></span><br><span class="line">sbatch ~/scripts/cuffdiff.sh \</span><br><span class="line">    <span class="variable">$PROJECT</span>/02_result/cuffdiff \</span><br><span class="line">    <span class="variable">$PROJECT</span>/00_index/mm10_genes.gtf \</span><br><span class="line">    <span class="variable">$PROJECT</span>/02_result/bam \</span><br><span class="line">    WT \</span><br><span class="line">    NonoKO</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>查看运行结果</p><p><code>ll $&#123;Project&#125;/02_result/cuffdiff</code></p></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20220928231232-lzbzun2.png" alt="ll ${Project}/02_result/cuffdiff"></div><div class="image-meta"><span class="image-caption center">ll ${Project}/02_result/cuffdiff</span></div></div><p>可以看到生成了很多文件，后面的差异基因分析将主要用到 gene_exp.dff。其中第三列是基因名，第五列和第六列是比较的两个样本名，第 10 列是 log2(foldchange)值，第 12 列是 pvalue。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/Snipaste_2022-10-26_08-41-47-20221026084153-s33gjur.png" alt="less -SN ${Project}/02_result/cuffdiff/gene_exp.diff"></div><div class="image-meta"><span class="image-caption center">less -SN ${Project}/02_result/cuffdiff/gene_exp.diff</span></div></div><h2 id="三-r-语言代码"><a class="markdownIt-Anchor" href="#三-r-语言代码"></a> 三、R 语言代码</h2><p>准备需要的 R 包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> install.packages<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;pheatmap&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="string">&quot;pheatmap&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;clusterProfiler&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="string">&quot;clusterProfiler&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;org.Mm.eg.db&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="string">&quot;org.Mm.eg.db&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;cowplot&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="string">&quot;cowplot&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>设置工作目录</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&#x27;~/workplace/homework1/02_result&#x27;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>从 cuffdiff 生成的 gene_exp.diff，进行解析，提取 | log2(foadchange) |&gt;1.5，p_value&lt;0.05 的差异基因，保存为 <code>DiffGenes_FC1.5.txt</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DEG <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;./cuffdiff/gene_exp.diff&quot;</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span><span class="built_in">is.finite</span><span class="punctuation">(</span>DEG<span class="operator">$</span>log2.fold_change.<span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span><span class="built_in">abs</span><span class="punctuation">(</span>DEG<span class="operator">$</span>log2.fold_change.<span class="punctuation">)</span> <span class="operator">&gt;</span> log2<span class="punctuation">(</span><span class="number">1.5</span><span class="punctuation">)</span> <span class="operator">&amp;</span> DEG<span class="operator">$</span>p_value <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">,</span> <span class="punctuation">]</span> <span class="comment"># 提取log2(foadchange)&gt;1.5，p_value&lt;0.05的差异基因</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>DEG<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;genes&quot;</span><span class="punctuation">,</span> <span class="string">&quot;foldchange&quot;</span><span class="punctuation">,</span> <span class="string">&quot;pvalue&quot;</span><span class="punctuation">)</span></span><br><span class="line">DEG<span class="operator">$</span>regulation <span class="operator">&lt;-</span> <span class="string">&quot;up&quot;</span></span><br><span class="line">DEG<span class="operator">$</span>regulation<span class="punctuation">[</span>DEG<span class="operator">$</span>foldchange <span class="operator">&lt;</span> <span class="number">0</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="string">&quot;down&quot;</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span>order<span class="punctuation">(</span><span class="built_in">abs</span><span class="punctuation">(</span>DEG<span class="operator">$</span>foldchange<span class="punctuation">)</span><span class="punctuation">,</span> decreasing <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span> <span class="comment"># 按照foldchange绝对值大小进行倒序排序</span></span><br><span class="line">write.table<span class="punctuation">(</span>DEG<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;plot/DiffGenes_FC1.5.txt &quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>绘制差异基因的图</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bar-plot</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">  tab <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>table<span class="punctuation">(</span>DEG<span class="operator">$</span>regulation<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  tab<span class="operator">$</span>Var1 <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>tab<span class="operator">$</span>Var1<span class="punctuation">,</span> levels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;up&quot;</span><span class="punctuation">,</span> <span class="string">&quot;down&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  p <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>tab<span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Var1<span class="punctuation">,</span> y <span class="operator">=</span> Freq<span class="punctuation">,</span> label <span class="operator">=</span> Freq<span class="punctuation">,</span> fill <span class="operator">=</span> Var1<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_bar<span class="punctuation">(</span>stat <span class="operator">=</span> <span class="string">&quot;identity&quot;</span><span class="punctuation">)</span></span><br><span class="line">  p <span class="operator">&lt;-</span> p <span class="operator">+</span> geom_text<span class="punctuation">(</span>position <span class="operator">=</span> position_dodge<span class="punctuation">(</span><span class="number">0.9</span><span class="punctuation">)</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> size <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span> <span class="operator">+</span> ylim<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">(</span>tab<span class="operator">$</span>Freq<span class="punctuation">)</span> <span class="operator">*</span> <span class="number">1.1</span><span class="punctuation">)</span></span><br><span class="line">  p <span class="operator">&lt;-</span> p <span class="operator">+</span> theme_classic<span class="punctuation">(</span><span class="number">8</span><span class="punctuation">)</span> <span class="operator">+</span> xlab<span class="punctuation">(</span><span class="string">&quot;differential expression&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> ylab<span class="punctuation">(</span><span class="string">&quot;Number of genes&quot;</span><span class="punctuation">)</span></span><br><span class="line">  p <span class="operator">&lt;-</span> p <span class="operator">+</span> ggtitle<span class="punctuation">(</span><span class="string">&quot;diffgenes&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>legend.position <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line">  p <span class="operator">&lt;-</span> p <span class="operator">+</span> theme<span class="punctuation">(</span>plot.title <span class="operator">=</span> element_text<span class="punctuation">(</span>hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  p</span><br><span class="line">  ggsave<span class="punctuation">(</span>p<span class="punctuation">,</span> filename <span class="operator">=</span> <span class="string">&quot;plot/diffgene_number_barplot.pdf&quot;</span><span class="punctuation">,</span> width <span class="operator">=</span> <span class="number">2.2</span><span class="punctuation">,</span> height <span class="operator">=</span> <span class="number">2.2</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># heatmap</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  library<span class="punctuation">(</span>scales<span class="punctuation">)</span></span><br><span class="line">  library<span class="punctuation">(</span>pheatmap<span class="punctuation">)</span></span><br><span class="line">  dd <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;FPKM2TPM/Expression_TPM.tsv&quot;</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 取Top50的差异基因在各个样本的TPM</span></span><br><span class="line">  DEG1 <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span>order<span class="punctuation">(</span><span class="built_in">abs</span><span class="punctuation">(</span>DEG<span class="operator">$</span>foldchange<span class="punctuation">)</span><span class="punctuation">,</span> decreasing <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  num <span class="operator">&lt;-</span> 50</span><br><span class="line">  DEG1 <span class="operator">&lt;-</span> DEG1<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span>num<span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  dd1 <span class="operator">&lt;-</span> dd<span class="punctuation">[</span>dd<span class="operator">$</span>gene_id <span class="operator">%in%</span> DEG1<span class="operator">$</span>genes<span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">  row.names<span class="punctuation">(</span>dd1<span class="punctuation">)</span> <span class="operator">&lt;-</span> dd1<span class="operator">$</span>gene_id</span><br><span class="line">  dd1<span class="operator">$</span>gene_id <span class="operator">&lt;-</span> <span class="literal">NULL</span></span><br><span class="line">  <span class="built_in">names</span><span class="punctuation">(</span>dd1<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;set1_NonoKO_D0&quot;</span><span class="punctuation">,</span> <span class="string">&quot;set1_WT_D0&quot;</span><span class="punctuation">,</span> <span class="string">&quot;set2_NonoKO_D0&quot;</span><span class="punctuation">,</span> <span class="string">&quot;set2_WT_D0&quot;</span><span class="punctuation">)</span></span><br><span class="line">  dd2 <span class="operator">&lt;-</span> t<span class="punctuation">(</span>apply<span class="punctuation">(</span>dd1<span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> rescale<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 绘制热图</span></span><br><span class="line">  pdf<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;plot/top_50gene.pdf&quot;</span><span class="punctuation">,</span> width <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span> height <span class="operator">=</span> <span class="number">7</span><span class="punctuation">)</span></span><br><span class="line">  pheatmap<span class="punctuation">(</span>dd2<span class="punctuation">,</span> cutree_rows <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> cutree_cols <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> fontsize_row <span class="operator">=</span> <span class="number">8</span><span class="punctuation">)</span></span><br><span class="line">  dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>GO 富集和 KEGG 富集分析代码</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>clusterProfiler<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>org.Mm.eg.db<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>cowplot<span class="punctuation">)</span></span><br><span class="line">gene <span class="operator">&lt;-</span> bitr<span class="punctuation">(</span>DEG<span class="operator">$</span>genes<span class="punctuation">,</span></span><br><span class="line">  fromType <span class="operator">=</span> <span class="string">&quot;SYMBOL&quot;</span><span class="punctuation">,</span></span><br><span class="line">  toType <span class="operator">=</span> <span class="string">&quot;ENTREZID&quot;</span><span class="punctuation">,</span></span><br><span class="line">  OrgDb <span class="operator">=</span> org.Mm.eg.db</span><br><span class="line"><span class="punctuation">)</span> <span class="comment"># 选择小鼠数据库</span></span><br><span class="line"></span><br><span class="line">geneList <span class="operator">&lt;-</span> bitr<span class="punctuation">(</span>dd<span class="operator">$</span>gene_id<span class="punctuation">,</span></span><br><span class="line">  fromType <span class="operator">=</span> <span class="string">&quot;SYMBOL&quot;</span><span class="punctuation">,</span></span><br><span class="line">  toType <span class="operator">=</span> <span class="string">&quot;ENTREZID&quot;</span><span class="punctuation">,</span></span><br><span class="line">  OrgDb <span class="operator">=</span> org.Mm.eg.db</span><br><span class="line"><span class="punctuation">)</span> <span class="comment"># 选择小鼠数据库</span></span><br><span class="line"><span class="comment"># 对样本间的差异基因进行GO富集分析</span></span><br><span class="line">ego <span class="operator">&lt;-</span> enrichGO<span class="punctuation">(</span></span><br><span class="line">  gene <span class="operator">=</span> gene<span class="operator">$</span>ENTREZID<span class="punctuation">,</span></span><br><span class="line">  universe <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>geneList<span class="operator">$</span>ENTREZID<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  OrgDb <span class="operator">=</span> org.Mm.eg.db<span class="punctuation">,</span> <span class="comment"># 选择小鼠数据库</span></span><br><span class="line">  ont <span class="operator">=</span> <span class="string">&quot;BP&quot;</span><span class="punctuation">,</span></span><br><span class="line">  pAdjustMethod <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="punctuation">,</span></span><br><span class="line">  pvalueCutoff <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span></span><br><span class="line">  qvalueCutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">  readable <span class="operator">=</span> <span class="literal">TRUE</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 对样本间的差异基因进行KEGG富集分析</span></span><br><span class="line">kk <span class="operator">&lt;-</span> enrichKEGG<span class="punctuation">(</span></span><br><span class="line">  gene <span class="operator">=</span> gene<span class="operator">$</span>ENTREZID<span class="punctuation">,</span></span><br><span class="line">  organism <span class="operator">=</span> <span class="string">&quot;mmu&quot;</span><span class="punctuation">,</span> <span class="comment"># 选择小鼠</span></span><br><span class="line">  pvalueCutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">  pAdjustMethod <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="punctuation">,</span></span><br><span class="line">  qvalueCutoff <span class="operator">=</span> <span class="number">0.05</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p1 <span class="operator">&lt;-</span> dotplot<span class="punctuation">(</span>ego<span class="punctuation">,</span> showCategory <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> orderBy <span class="operator">=</span> <span class="string">&quot;x&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> ggtitle<span class="punctuation">(</span><span class="string">&quot;dotplot for GOBP&quot;</span><span class="punctuation">)</span></span><br><span class="line">p2 <span class="operator">&lt;-</span> dotplot<span class="punctuation">(</span>kk<span class="punctuation">,</span> showCategory <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> orderBy <span class="operator">=</span> <span class="string">&quot;x&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> ggtitle<span class="punctuation">(</span><span class="string">&quot;dotplot for KEGG&quot;</span><span class="punctuation">)</span></span><br><span class="line">pp <span class="operator">&lt;-</span> plot_grid<span class="punctuation">(</span>p1<span class="punctuation">,</span> p2<span class="punctuation">,</span> ncol <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>p1<span class="punctuation">,</span> filename <span class="operator">=</span> <span class="string">&quot;plot/GO_enrichment.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>p2<span class="punctuation">,</span> filename <span class="operator">=</span> <span class="string">&quot;plot/KEGG_enrichment.pdf&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="四-分析结果"><a class="markdownIt-Anchor" href="#四-分析结果"></a> 四、分析结果</h2><p>筛选差异基因，提取 | log2(foldchange) | &gt; 1.5，p_value&lt;0.05 的差异基因共 2599 个，上调基因共 947 个（log2(foldchange)&gt;=0），下调基因 1652 个（log2(foldchange)&lt;0）</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/Snipaste_2022-10-26_09-45-07-20221026094508-gu7vli7.png" alt="上下调基因数目比较"></div><div class="image-meta"><span class="image-caption center">上下调基因数目比较</span></div></div><p>按照 foldchange 的值由高到低进行排序，取 Top50 的差异基因，绘制热图。发现 set1_NonoKO_D0 和 set2_NonoKO_D0 的基因特征比较类似，而 set2_WT_D0 的上调基因含量过于高了，不确定是样本问题。NonoKO 细胞的 Mid1、Maf、Pcdh18 等众多基因下调，而 Hist1h2ah、Ftl1、Hprt 基因上调。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/Snipaste_2022-10-26_09-44-43-20221026094454-yjonve6.png" alt="Top50差异基因在各样本的表达量"></div><div class="image-meta"><span class="image-caption center">Top50差异基因在各样本的表达量</span></div></div><p>进行 GO 富集和 KEGG 富集分析</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/Snipaste_2022-10-25_23-45-22-20221025234524-qiue995.png" alt="GO的Biological process富集分析"></div><div class="image-meta"><span class="image-caption center">GO的Biological process富集分析</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/Snipaste_2022-10-25_23-45-53-20221025234555-akrjhuo.png" alt="KEGG富集分析"></div><div class="image-meta"><span class="image-caption center">KEGG富集分析</span></div></div><p>通过 GO 的 Biological process 富集分析，发现这些差异基因主要在 epithelial tube morphogenesis、renal system development、mesenchyme development、kidney development、mesenchymal cell<br>differentiation 富集</p><p>通过 KEGG 富集分析，这些差异基因主要在 Proteoglycans in cancer、Focal adhesion、Axon guidance、ECM-receptor interaction、Basal cell carcinoma 等代谢途径富集</p><h2 id="五-存在的问题"><a class="markdownIt-Anchor" href="#五-存在的问题"></a> 五、存在的问题</h2><ul><li>trim_galore 过滤双端数据的时候，忘记加–paired 参数，发现 trim_galore 过滤双端数据生成的最终文件不是 trimed.fq.gz，而是 val_1.fq.gz 和 val_2.fq.gz.</li><li>一开始不明白 cuffdiff 的 gene_exp.diff 其中的 foldchange 是怎么计算的，四个样本输进去后会有 6 个组的比较，也就是说所有样本之间都进行比较了，包括 set1 的 WT 组和 set2 的 WT 组。后来经过助教的指导才发现自己没看仔细 cuffdiff 的使用规则，同一组的不同重复用逗号分割，不同组间应该用空格分割，说明无论做什么事情还是要仔细，不要一开始就犯错，理解有问题。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="/post/6e57daa8/image-20221003224834-2o60cnv.png" alt="cuffdiff计算两组间的差异基因，却出现6组比较"></div><div class="image-meta"><span class="image-caption center">cuffdiff计算两组间的差异基因，却出现6组比较</span></div></div><ul><li>cuffdiff 的 log（foldchange）是 sample2/sample1，log（foldchange）&gt;0 代表 gene 在 sample2 中上调，log（foldchange）&lt;0 代表 gene 在 sample2 中下调。开始运行 cuffdiff 的时候，没有注意输入顺序，把 KO 放在了 WT 前面，造成上下调基因输出相反。</li><li>本次实验的样本量太少，set1 和 set2 同一组的 WT 小鼠的基因表达量差异也很大，GO 富集和 KEGG 富集分析的结果并不能说明什么，需要扩大样本量找到的差异基因才更有说服力。</li></ul><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
            <tag> 组学分析 </tag>
            
            <tag> 生信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PSSM矩阵计算</title>
      <link href="/post/134ab329.html"/>
      <url>/post/134ab329.html</url>
      
        <content type="html"><![CDATA[<p>PSSM（Position-Specific Scoring Matrix）是从MSA中构建的，实际上就是相同长度的一组序列根据各个位点氨基酸（碱基）频率计算得到的<strong>权值矩阵</strong>，是许多motif寻找软件的组成部分。</p><p>详细介绍见wiki：<a href="https://en.wikipedia.org/wiki/Position_weight_matrix">Position weight matrix - Wikipedia</a></p><p>PSSM就是一个打分矩阵，这个分数呢，可以是频数（PFM）、频率(PPM)、也可以是log-odds(PWM)。</p><h2 id="计算过程解释"><a class="markdownIt-Anchor" href="#计算过程解释"></a> 计算过程解释</h2><p>其典型计算过程为（以碱基为例）：</p><h3 id="1-计算pfmposition-frequency-matrix"><a class="markdownIt-Anchor" href="#1-计算pfmposition-frequency-matrix"></a> 1. 计算PFM(Position Frequency Matrix)</h3><p>从多序列比对MSA中，计算每个位点不同碱基的出现次数</p><p>GAGGTAAAC<br>TCCGTAAGT<br>CAGGTTGGA<br>ACAGTCAGT<br>TAGGTCATT<br>TAGGTACTG<br>ATGGTAACT<br>CAGGTATAC<br>TGTGTGAGT<br>AAGGTAAGT</p><p>得到PFM：</p><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>A</td><td>3</td><td>6</td><td>1</td><td>0</td><td>0</td><td>6</td><td>7</td><td>2</td><td>1</td></tr><tr><td>C</td><td>2</td><td>2</td><td>1</td><td>0</td><td>0</td><td>2</td><td>1</td><td>1</td><td>2</td></tr><tr><td>G</td><td>1</td><td>1</td><td>7</td><td>10</td><td>0</td><td>1</td><td>1</td><td>5</td><td>1</td></tr><tr><td>T</td><td>4</td><td>1</td><td>1</td><td>0</td><td>10</td><td>1</td><td>1</td><td>2</td><td>6</td></tr></tbody></table><h3 id="2-基于氨基酸频数计算ppmposition-probability-matrix"><a class="markdownIt-Anchor" href="#2-基于氨基酸频数计算ppmposition-probability-matrix"></a> 2. 基于氨基酸频数计算PPM（Position Probability Matrix）</h3><p>直接基于频数算频率</p><ul><li>Column 1: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>A</mi><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mfrac><mn>3</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.3</mn><mo separator="true">,</mo><msub><mi>f</mi><mrow><mi>C</mi><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mfrac><mn>2</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.2</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">f_{A, 1}=\frac{3}{10}=0.3, f_{C, 1}=\frac{2}{10}=0.2, \ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span></li><li>Column 2: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>A</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo>=</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.6</mn><mo separator="true">,</mo><msub><mi>f</mi><mrow><mi>C</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo>=</mo><mfrac><mn>2</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.2</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">f_{A, 2}=\frac{6}{10}=0.6, f_{C, 2}=\frac{2}{10}=0.2, \ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span></li><li>…</li></ul><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>A</td><td>0.3</td><td>0.6</td><td>0.1</td><td>0.0</td><td>0.0</td><td>0.6</td><td>0.7</td><td>0.2</td><td>0.1</td></tr><tr><td>C</td><td>0.2</td><td>0.2</td><td>0.1</td><td>0.0</td><td>0.0</td><td>0.2</td><td>0.1</td><td>0.1</td><td>0.2</td></tr><tr><td>G</td><td>0.1</td><td>0.1</td><td>0.7</td><td>1.0</td><td>0.0</td><td>0.1</td><td>0.1</td><td>0.5</td><td>0.1</td></tr><tr><td>T</td><td>0.4</td><td>0.1</td><td>0.1</td><td>0.0</td><td>1.0</td><td>0.1</td><td>0.1</td><td>0.2</td><td>0.6</td></tr></tbody></table><p>为了解决有些氨基酸类型出现为0的情况，可以给分子、分母增加pseudo-counts：</p><ul><li>Column 1: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>f</mi><mrow><mi>A</mi><mo separator="true">,</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mfrac><mrow><mn>3</mn><mo>+</mo><mn>1</mn></mrow><mrow><mn>10</mn><mo>+</mo><mn>4</mn></mrow></mfrac><mo>=</mo><mn>0.29</mn><mo separator="true">,</mo><msubsup><mi>f</mi><mrow><mi>C</mi><mo separator="true">,</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mfrac><mrow><mn>2</mn><mo>+</mo><mn>1</mn></mrow><mrow><mn>10</mn><mo>+</mo><mn>4</mn></mrow></mfrac><mo>=</mo><mn>0.21</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">f_{A, 1}^{\prime}=\frac{3+1}{10+4}=0.29, f_{C, 1}^{\prime}=\frac{2+1}{10+4}=0.21, \ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.163331em;vertical-align:-0.411439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.163331em;vertical-align:-0.411439em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span></li><li>Column 2: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>f</mi><mrow><mi>A</mi><mo separator="true">,</mo><mn>2</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mfrac><mrow><mn>6</mn><mo>+</mo><mn>1</mn></mrow><mrow><mn>10</mn><mo>+</mo><mn>4</mn></mrow></mfrac><mo>=</mo><mn>0.50</mn><mo separator="true">,</mo><msubsup><mi>f</mi><mrow><mi>C</mi><mo separator="true">,</mo><mn>2</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mfrac><mrow><mn>2</mn><mo>+</mo><mn>1</mn></mrow><mrow><mn>10</mn><mo>+</mo><mn>4</mn></mrow></mfrac><mo>=</mo><mn>0.21</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">f_{A, 2}^{\prime}=\frac{6+1}{10+4}=0.50, f_{C, 2}^{\prime}=\frac{2+1}{10+4}=0.21, \ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.163331em;vertical-align:-0.411439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.163331em;vertical-align:-0.411439em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span></li><li>…</li></ul><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>A</td><td>0.29</td><td>0.50</td><td>0.14</td><td>0.07</td><td>0.07</td><td>0.50</td><td>0.57</td><td>0.21</td><td>0.14</td></tr><tr><td>C</td><td>0.21</td><td>0.21</td><td>0.14</td><td>0.07</td><td>0.07</td><td>0.21</td><td>0.14</td><td>0.14</td><td>0.21</td></tr><tr><td>G</td><td>0.14</td><td>0.14</td><td>0.57</td><td>0.79</td><td>0.07</td><td>0.14</td><td>0.14</td><td>0.43</td><td>0.14</td></tr><tr><td>T</td><td>0.36</td><td>0.14</td><td>0.14</td><td>0.07</td><td>0.79</td><td>0.14</td><td>0.14</td><td>0.21</td><td>0.50</td></tr></tbody></table><h3 id="3-计算位点权值矩阵pwmposition-weight-matrix"><a class="markdownIt-Anchor" href="#3-计算位点权值矩阵pwmposition-weight-matrix"></a> 3. 计算位点权值矩阵PWM（Position Weight Matrix）</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>log</mi><mo>⁡</mo><mfrac><msubsup><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msub><mi>P</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">S_{i, j}=\log \frac{f_{i, j}^{\prime}}{P_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3726640000000003em;vertical-align:-0.8360000000000001em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.536664em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>即前景概率除以背景概率（odds），再用log算权值（log-odds），计算的权值能体现出位点出现该碱基（氨基酸）的优势比。</p><blockquote><p><a href="https://mp.weixin.qq.com/s/YHXCog8aThN7l9kp7-cY6g">优势、优势比为什么需要log2转换？ (qq.com)</a></p></blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为相应碱基（氨基酸）类型在随机序列中出现的期望频率</p><ul><li>为了图方便最简单的模型会假设各碱基（氨基酸）出现频率一致，对于氨基酸为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>20</mn></mfrac><mo>=</mo><mn>0.05</mn></mrow><annotation encoding="application/x-tex">P_i=\frac{1}{20}=0.05</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">5</span></span></span></span> ，对于核苷酸为: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>=</mo><mn>0.25</mn></mrow><annotation encoding="application/x-tex">P_i=\frac{1}{4}=0.25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span></li><li>实际使用，可以把数据集里的所有序列（不仅仅是motif）的碱基（氨基酸）出现频率手动计算一遍。</li></ul><p>这里就简单假设各碱基（氨基酸）出现频率一致</p><p>使用单纯频率的PPM，则PWM为</p><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>A</td><td>0.26</td><td>1.26</td><td>-1.32</td><td>-inf</td><td>-inf</td><td>1.26</td><td>1.49</td><td>-0.32</td><td>-1.32</td></tr><tr><td>C</td><td>-0.32</td><td>-0.32</td><td>-1.32</td><td>-inf</td><td>-inf</td><td>-0.32</td><td>-1.32</td><td>-1.32</td><td>-0.32</td></tr><tr><td>G</td><td>-1.32</td><td>-1.32</td><td>1.49</td><td>2.0</td><td>-inf</td><td>-1.32</td><td>-1.32</td><td>1.00</td><td>-1.32</td></tr><tr><td>T</td><td>0.68</td><td>-1.32</td><td>-1.32</td><td>-inf</td><td>2.0</td><td>-1.32</td><td>-1.32</td><td>-0.32</td><td>1.26</td></tr></tbody></table><p>使用加上pesudo-count的PPM，则PWM为</p><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>A</td><td>0.19</td><td>1.00</td><td>-0.81</td><td>-1.81</td><td>-1.81</td><td>1.00</td><td>1.19</td><td>-0.22</td><td>-0.81</td></tr><tr><td>C</td><td>-0.22</td><td>-0.22</td><td>-0.81</td><td>-1.81</td><td>-1.81</td><td>-0.22</td><td>-0.81</td><td>-0.81</td><td>-0.22</td></tr><tr><td>G</td><td>-0.81</td><td>-0.81</td><td>1.19</td><td>1.65</td><td>-1.81</td><td>-0.81</td><td>-0.81</td><td>0.78</td><td>-0.81</td></tr><tr><td>T</td><td>0.51</td><td>-0.81</td><td>-0.81</td><td>-1.81</td><td>1.65</td><td>-0.81</td><td>-0.81</td><td>-0.22</td><td>1.00</td></tr></tbody></table><blockquote><p>以上为典型的PSSM计算步骤，但是在具体实践上，不同的软件可能会对细节进行修改，从而得到的PSSM并不一样，如PSI-BLAST会采用BLOSUM62处理pseudo-counts问题。</p><p>另外，PSSM不处理MSA中位点插入和删除的情况。</p></blockquote><h2 id="使用python实现"><a class="markdownIt-Anchor" href="#使用python实现"></a> 使用Python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PSSM</span>():</span><br><span class="line">    ALPHABET = <span class="built_in">dict</span>(</span><br><span class="line">        DNA = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;T&#x27;</span>],</span><br><span class="line">        RNA = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;U&#x27;</span>],</span><br><span class="line">        AA = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>]</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, file_path: <span class="built_in">str</span>, alphabet_type: <span class="built_in">str</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Initialize PSSM object.</span></span><br><span class="line"><span class="string">        file_path: path of aln file</span></span><br><span class="line"><span class="string">        alphabet_type: DNA, RNA, AA</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.file_path = file_path</span><br><span class="line">        self.alphabet_type = alphabet_type</span><br><span class="line">        self.characters = self.ALPHABET[alphabet_type]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">seqs</span>(<span class="params">self</span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        read fasta file and return seq list</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        fa_dict = &#123;&#125;</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.file_path, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">                line = line.strip()</span><br><span class="line">                <span class="keyword">if</span> line.startswith(<span class="string">&#x27;&gt;&#x27;</span>):</span><br><span class="line">                    name = line[<span class="number">1</span>:]</span><br><span class="line">                    fa_dict[name] = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fa_dict[name] += line</span><br><span class="line">        <span class="keyword">return</span> [seq <span class="keyword">for</span> seq <span class="keyword">in</span> fa_dict.values()]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">seq_length</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the width of pssm</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.seqs[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PFM</span>(<span class="params">self</span>) -&gt; np.ndarray:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the PFM</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        pfm = np.zeros((<span class="built_in">len</span>(self.characters), self.seq_length), dtype=<span class="built_in">int</span>)</span><br><span class="line">        <span class="keyword">for</span> j, seq <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(*self.seqs)):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.characters)):</span><br><span class="line">                pfm[i][j] = seq.count(self.characters[i])</span><br><span class="line">        pfm = pd.DataFrame(pfm, index=self.characters,</span><br><span class="line">                           columns=<span class="built_in">range</span>(<span class="number">1</span>, self.seq_length+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> pfm</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PPM</span>(<span class="params">self</span>) -&gt; np.ndarray:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the PPM </span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ppm = (self.PFM+<span class="number">1</span>) / (<span class="built_in">len</span>(self.seqs)+<span class="built_in">len</span>(self.characters))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">round</span>(ppm, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PWM</span>(<span class="params">self</span>) -&gt; np.ndarray:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the PWM</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        pwm = np.log2(self.PPM / <span class="built_in">len</span>(self.characters)**(-<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">round</span>(pwm, <span class="number">4</span>)</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">consensus</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the consensus sequence</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        consensus = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(self.seq_length):</span><br><span class="line">            consensus += self.characters[np.argmax(self.PFM.iloc[:, j])]</span><br><span class="line">        <span class="keyword">return</span> consensus</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ic</span>(<span class="params">self</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        return the information content for each position</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ic = np.<span class="built_in">sum</span>(self.PWM * self.PPM, axis=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">round</span>(ic, <span class="number">4</span>)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pssm = PSSM(<span class="string">&#x27;./input/demo.fa&#x27;</span>, <span class="string">&#x27;DNA&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(pssm.PFM)</span><br><span class="line">    <span class="built_in">print</span>(pssm.PPM)</span><br><span class="line">    <span class="built_in">print</span>(pssm.PWM)</span><br><span class="line">    <span class="built_in">print</span>(pssm.consensus)</span><br><span class="line">    <span class="built_in">print</span>(pssm.ic)</span><br><span class="line">    <span class="comment"># pssm.seqlogo #todo</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="画weblogo"><a class="markdownIt-Anchor" href="#画weblogo"></a> 画weblogo</h2><p><a href="https://weblogo.berkeley.edu/logo.cgi">WebLogo - Create Sequence Logos (berkeley.edu)</a></p><div class="tag-plugin image"><div class="image-bg"><img src="/post/134ab329/image-20221021014159-45ms6pl.png"></div></div><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python实现Needleman-Wunsch和Smith-Waterman算法</title>
      <link href="/post/be13a22e.html"/>
      <url>/post/be13a22e.html</url>
      
        <content type="html"><![CDATA[<h2 id="python实现"><a class="markdownIt-Anchor" href="#python实现"></a> Python实现</h2><p>阿巛同学第一次较好的封装</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="用Python实现Needleman-Wunsch和Smith-Waterman算法" href="https://github.com/Achuan-2/python_beginner/tree/main/seqAlignment" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">用Python实现Needleman-Wunsch和Smith-Waterman算法</span><span class="cap link footnote">https://github.com/Achuan-2/python_beginner/tree/main/seqAlignment</span></div><div class="right"><div class="lazy img" style="background-image:url(&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg&quot;)"></div></div></a></div><h2 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> <strong>简单介绍</strong></h2><p>Needleman-Wunsch和Smith-Waterman算法都是Pairwise alignment算法，用于双序列比对。</p><ul><li>Needleman-Wunsch是全局序列比对算法，最终会得到2条序列在全局上最佳的匹配结果（e.g. 最多的match数量、最高的比对得分、最高的identity）</li><li>Smith-Waterman是局部序列比对算法，最终得到的是2条序列在局部的最佳匹配片段（注意：即挑选出得分最高的比对片段）</li></ul><h2 id="算法实现介绍"><a class="markdownIt-Anchor" href="#算法实现介绍"></a> <strong>算法实现介绍</strong></h2><p>两个算法都是用了动态规划算法，什么叫动态规划呢。先思考下，若我们想要得到两条序列间最佳比对结果的话，你会怎么解决，穷举法？但是此方法需要穷举的次数随着序列长度的增加而不断增大，而且要考虑两条序列在哪里插入空位，比对结果的长度范围为n(两条序列完全匹配上)-2n(两条序列均对到空位)。</p><p>比对序列的长度越长，需要穷举的次数越多，这对我们来说将会耗时很多，这是不太现实的。所以我们需要一种新的方法进行比对——动态规划。动态规划算法是一种求取最优解的方法，该方法通过将问题拆解为若干子问题，求取子问题的最优解，所有子问题的最优解合并即为全局最优解。</p><p>下面具体介绍下两种算法的细节。</p><p>这两个算法都是先建立一个打分矩阵，考虑每个cell从各个方向的来源得分，记录最大得分的来源，最后按照规则回溯，从而得到比对结果。</p><h3 id="来源方向"><a class="markdownIt-Anchor" href="#来源方向"></a> 来源方向</h3><p>来源方向有三个：横着来的horizontal，竖着来的vertical，对角线来的diagonal，其中horizontal，vertical对于gap，而diagonal对应mismatch和match（diagonal来源的比对可以是确实比对上，也可以是强行比对）。</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/be13a22e/image-20221009003402-kkvkd5z.png"></div></div><h3 id="打分矩阵"><a class="markdownIt-Anchor" href="#打分矩阵"></a> 打分矩阵</h3><p>对于全局比对的Needleman-Wunsch算法而言：就考虑来自三个方向的分数情况，记录最大得分的来源</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/be13a22e/image-20221009002749-ktsnpmn.png"></div></div><p>而对于局部比对的Smith-Waterman算法而言：还需要考虑得分&gt;=0，如果得分少于0，则不记录方向。<img src="/post/be13a22e/image-20221009002858-cv8m89t.png" alt="image"></p><blockquote><p>Attention!</p><ul><li><p>对于diagonal方向的<strong>得分</strong>，有两种方式</p><ul><li>一种就是看两个碱基match不match，match就+x分，mismatch就-y分</li><li>一种是替代矩阵M，M[A][B]为得分，经典的替代矩阵AM250和BLOSUM62，其中PAM250是基于高同源序列构建，BLOSUM62基于远程同源序列构建，因此寻找远程同源序列一般用BLOSUM62。</li></ul></li><li><p>对于vertical和horizonal方向的**罚分，**也有流行的两种方式</p><ul><li><p>一种是线性罚分，出现一个gap，我就扣k分</p><ul><li>举例，设置gap_open=-2。连续出现三个gap的罚分就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>2</mn><mo>×</mo><mn>3</mn><mo>=</mo><mo>−</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">-2\times3=-6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">6</span></span></span></span></li></ul></li><li><p>另一种叫affine gap penalty，翻译叫仿射罚分，即在打开第一个gap的时候引入gap open罚分，而在该gap的基础上进行延续则采用gap extension罚分。之所以这样做，相比从生物学原理来说，应该更倾向于仅出现一段长gap而不是多个短gap。</p><ul><li>举例，设置gap_open=-2,gap_extension=-1。连续出现三个gap的罚分就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>2</mn><mo>+</mo><mo stretchy="false">(</mo><mn>3</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo>−</mo><mn>1</mn><mo>=</mo><mo>−</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">-2+(3-1)\times-1=-4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">4</span></span></span></span></li></ul></li></ul></li></ul></blockquote><h3 id="回溯"><a class="markdownIt-Anchor" href="#回溯"></a> 回溯</h3><p>Needleman-Wunsch就是头对头、尾对尾算法，所以会从最右下角进行回溯</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/be13a22e/nw-20221009003602-vve5x1q.png"></div></div><p>Smith-Waterman只考虑找出最大得分的比对结果，所以会找出最高分的位置，开始回溯，直到cell的分数为0结束</p><div class="tag-plugin image"><div class="image-bg"><img src="/post/be13a22e/sw-20221009003709-0l706lr.png"></div></div><blockquote><p>Question： 回溯时，横着和竖着的方向代表存在gap，那怎么知道gap是在哪条序列上呢？</p><p>Answer：看方向，垂直箭头的那个序列，就在对应碱基前加一个gap。比如横着的箭头，说明左侧的seq存在gap，竖着的箭头，则是顶部的seq存在gap。</p></blockquote><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><table><thead><tr><th><br></th><th>Needleman-Wunsch<br></th><th>Smith-Waterman</th></tr></thead><tbody><tr><td>比对方式</td><td>全局比对</td><td>局部比对</td></tr><tr><td>初始化得分矩阵</td><td>第0行和第0列置GAP罚分</td><td>行列全部置0</td></tr><tr><td>得分方式</td><td>允许负分</td><td>负分置0</td></tr><tr><td>回溯方式</td><td>右下角-&gt;左上角</td><td>最高分开始-&gt;位点分数为0结束</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
            <tag> 生信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Github】cdn jsdelivr加速使用方法</title>
      <link href="/post/8b29a079.html"/>
      <url>/post/8b29a079.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前排</p><ul><li>2022 年 4 月 28 日遭到 DNS 污染，自此大陆无法正常访问 jsDelivr，导致大批网站工作失常。jsDelivr 进出大陆的始末详见 <a href="https://luotianyi.vc/6295.html">【杂谈】jsDelivr域名遭到DNS污染</a>。</li><li>2023 年 9 月 25日发现已可以使用，但是不再推荐使用jsdelivr用来加速图床，如果图床选用GitHub，建议不要cdn加速，图片链接直接用原本链接，起码能保证图片不失效。</li></ul></blockquote><h2 id="基本使用方法"><a class="markdownIt-Anchor" href="#基本使用方法"></a> 基本使用方法</h2><p><code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@branch/文件路径</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 加载任何Github发布、提交或分支</span><br><span class="line">https://cdn.jsdelivr.net/gh/user/repo@version/file</span><br><span class="line"></span><br><span class="line">// 加载 jQuery v3.2.1</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</span><br><span class="line"></span><br><span class="line">// 指定仓库的分支</span><br><span class="line">https://cdn.jsdelivr.net/gh/Achuan-2/PicBed@pic</span><br><span class="line"></span><br><span class="line">// 使用版本范围而不是特定版本</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js   https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js</span><br><span class="line"> </span><br><span class="line">// 完全省略该版本以获取最新版本</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js</span><br><span class="line"> </span><br><span class="line">// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js</span><br><span class="line"> </span><br><span class="line">// 在末尾添加 / 以获取资源目录列表</span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery/</span><br></pre></td></tr></table></figure><h2 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意：</h2><ul><li><strong>jsDelivr 不支持加载超过 20M 的资源</strong></li><li>jsDelivr 只要加载过一次后，就会永久缓存，就算源码、原图片<strong>被删除，还是能加载</strong>！(好处是不怕丢，坏处是删不掉 😳）</li><li>版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源</li></ul><h2 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充：</h2><blockquote><p>‍</p><p>CDN 是一组分布在多个不同地方的 WEB 服务器，可以更加有效的向用户提供资源，会根据距离的远近来选择 。使用户能就近的获取请求数据，解决网络拥堵，提高访问速度，解决由于网络带宽小，用户访问量大，网点分布不均等原因导致的访问速度慢的问题。</p><p><strong>cdn 请求分发原理</strong></p><p><img src="https://raw.githubusercontent.com/Achuan-2/PicBed/pic/assets/202309251517459.png" alt="image.png"></p><p>（1）用户向浏览器提供需要访问的域名；</p><p>（2）浏览器调用域名解析库对域名进行解析，由于 CDN 对域名解析过程进行了调整，所以解析函数库一般得到的是该域名对应的 CNAME 记录，为了得到实际的 IP 地址，浏览器需要再次对获得的 CNAME 域名进行解析以得到实际的 IP 地址；在此过程中，使用的全局负载均衡 DNS 解析。如根据地理位置信息解析对应的 IP 地址，使得用户能就近访问；</p><p>（3）此次解析得到 CDN 缓存服务器的 IP 地址，浏览器在得到实际的 ip 地址之后，向缓存服务器发出访问请求；</p><p>（4）缓存服务器根据浏览器提供的要访问的域名，通过 Cache 内部专用 DNS 解析得到此域名的实际 IP 地址，再由缓存服务器向此实际 IP 地址提交访问请求；</p><p>（5）缓存服务器从实际 IP 地址得到内容以后，一方面<strong>在本地进行保存</strong>，以备以后使用，二方面把获取的数据放回给客户端，完成数据服务过程；</p><p>（6）客户端得到由缓存服务器返回的数据以后显示出来并完成整个浏览的数据请求过程。</p></blockquote><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 其他笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
